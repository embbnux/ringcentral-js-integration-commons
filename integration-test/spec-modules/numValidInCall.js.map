{"version":3,"sources":["integration-test/spec-modules/numValidInCall.js"],"names":["Auth","Alert","Client","RegionSettings","Call","accountWithMultiDP","describe","timeout","conditionalDescribe","isLoginSuccess","skip","console","error","beforeEach","dismissAll","state","messages","length","isAlertClear","it","onToNumberChange","onCall","expect","noToNumber","to","not","equal","undefined","noAreaCode","specialNumber","notAnExtension","lastCallNumber","setData","countryCode","areaCode"],"mappings":"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","file":"numValidInCall.js","sourcesContent":["import { ensureLogin } from '../utils/HelpUtil';\nimport { containsErrorMessage } from '../utils/HelpUtil';\nimport callErrors from '../../modules/Call/callErrors';\nimport { waitInSeconds } from '../utils/WaitUtil';\nimport { waitUntilEqual } from '../utils/WaitUtil';\n\nexport default (Auth, Alert, Client, RegionSettings, Call, accountWithMultiDP) => {\n  describe('Number Validation when Making Phone Call', async function () {\n    this.timeout(10000);\n    let conditionalDescribe = describe;\n    const isLoginSuccess = await ensureLogin(Auth, accountWithMultiDP);\n    if (!isLoginSuccess) {\n      conditionalDescribe = describe.skip;\n      console.error('Skip test case as failed to login with credential ', accountWithMultiDP);\n    }\n    conditionalDescribe('Basic Validation', function () {\n      this.timeout(10000);\n      beforeEach(async function () {\n        const isAlertClear = await waitUntilEqual(() => {\n          Alert.dismissAll();\n          return Alert.state.messages.length;\n        }, 'Alert', 0, 5);\n        if (!isAlertClear) {\n          console.error('Alert is not cleared after dismissAll');\n        }\n      });\n      it('Should Alert Invalid Number - Invalid Char in ToNumber', async () => {\n        Call.onToNumberChange(\"iamn%@onedi!@$%^&()_=\\\\][';/.,~nu><.,,?/mber#*\");\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noToNumber))\n          .to.not.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noAreaCode))\n          .to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber))\n          .to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.notAnExtension))\n          .to.equal(undefined);\n      });\n      it('Should Alert Invalid Number - Valid Special Char but No Digital Number', async () => {\n        Call.onToNumberChange('+#');\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noToNumber))\n          .to.not.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noAreaCode))\n          .to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber))\n          .to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.notAnExtension))\n          .to.equal(undefined);\n      });\n      it('Should Not Alert Anything - Call Number in E.164 Format', async () => {\n        Call.onToNumberChange('+13065221112');\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noToNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noAreaCode)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber))\n          .to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.notAnExtension))\n          .to.equal(undefined);\n      });\n    });\n\n    conditionalDescribe('Validation with Last Called Number', function() {\n      this.timeout(10000);\n      beforeEach(async function () {\n        const isAlertClear = await waitUntilEqual(() => {\n          Alert.dismissAll();\n          return Alert.state.messages.length;\n        }, 'Alert', 0, 5);\n        if (!isAlertClear) {\n          console.error('Alert is not cleared after dismissAll');\n          this.skip();\n        }\n      });\n      it('Should Remember Last Called Number', async () => {\n        Call.onToNumberChange('123abc');\n        await Call.onCall();\n        expect(Call.lastCallNumber).to.equal('123abc');\n      });\n      it('Should Not Alert Anything - Call Empty Number with Valid Last Called Number', async () => {\n        Call.onToNumberChange('+13065221112');\n        await Call.onCall();\n        Call.onToNumberChange(' ');\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noToNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noAreaCode)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber))\n          .to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.notAnExtension))\n          .to.equal(undefined);\n      });\n      it('Should Alert Invalid Number - Call None Digital Number with Valid Last Called Number', async () => {\n        Call.onToNumberChange('+13065221112');\n        await Call.onCall();\n        Call.onToNumberChange(\"iamn%@onedi!@$%^&()_=\\\\][';/.,~nu><.,,?/mber\");\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noToNumber))\n          .to.not.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noAreaCode))\n          .to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber))\n          .to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.notAnExtension))\n          .to.equal(undefined);\n      });\n      it('Should Not Alert Anything - Call Number in E.164 Format with Invalid Last Called Number', async () => {\n        Call.onToNumberChange('123abc');\n        await Call.onCall();\n        Alert.dismissAll();\n        Call.onToNumberChange('+13065221112');\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noToNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noAreaCode)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber))\n          .to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.notAnExtension))\n          .to.equal(undefined);\n      });\n    });\n\n    conditionalDescribe('Validation with Region Setting', function () {\n      this.timeout(10000);\n      beforeEach(async function () {\n        const isAlertClear = await waitUntilEqual(() => {\n          Alert.dismissAll();\n          return Alert.state.messages.length;\n        }, 'Alert', 0, 5);\n        if (!isAlertClear) {\n          console.error('Alert is not cleared after dismissAll');\n          this.skip();\n        }\n      });\n      it('Should Alert No AreaCode - Call 7 Digital Number with US Dialing Plan without Area Code', async () => {\n        RegionSettings.setData({ countryCode: 'US', areaCode: '' });\n        Call.onToNumberChange('6545672');\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noAreaCode))\n          .to.not.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber))\n          .to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.notAnExtension))\n          .to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noToNumber))\n          .to.equal(undefined);\n      });\n      it('Should Alert No AreaCode - Call 7 Digital Number with CA Dialing Plan without Area Code', async () => {\n        RegionSettings.setData({ countryCode: 'CA', areaCode: '' });\n        Call.onToNumberChange('6545672');\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noAreaCode))\n          .to.not.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber))\n          .to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.notAnExtension))\n          .to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noToNumber))\n          .to.equal(undefined);\n      });\n      it(\"Should Not Alert Anything - Call 7 Digital Number with US Dialing Plan and Area Code\",async function () {\n        RegionSettings.setData({ countryCode: 'US', areaCode: '650' });\n        Call.onToNumberChange('6545672');\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noToNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noAreaCode)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.notAnExtension)).to.equal(undefined);\n      });\n      it(\"Should Not Alert Anything - Call 7 Digital Number with CA Dialing Plan and Area Code\",async function () {\n        RegionSettings.setData({ countryCode: 'CA', areaCode: '650' });\n        Call.onToNumberChange('6545672');\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noToNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noAreaCode)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.notAnExtension)).to.equal(undefined);\n      });\n      it(\"Should Not Alert Anything - Call 7 Digital Number with non US/CA Dialing Plan\",async function () {\n        RegionSettings.setData({ countryCode: 'GB', areaCode: '' });\n        Call.onToNumberChange('6545672');\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noToNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noAreaCode)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.notAnExtension)).to.equal(undefined);\n      });\n      it(\"Should Alert Special Number - Call 911 with US Dialing Plan\",async function () {\n        RegionSettings.setData({ countryCode: 'US', areaCode: '' });\n        Call.onToNumberChange('911');\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noToNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noAreaCode)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber)).to.not.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.notAnExtension)).to.equal(undefined);\n      });\n      it(\"Should Alert Special Number - Call 999 with GB Dialing Plan\",async function () {\n        RegionSettings.setData({ countryCode: 'GB', areaCode: '' });\n        Call.onToNumberChange('999');\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noToNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noAreaCode)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber)).to.not.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.notAnExtension)).to.equal(undefined);\n      });\n      it(\"Should Not Alert Special Number - Call 999 with US Dialing Plan\",async function () {\n        RegionSettings.setData({ countryCode: 'US', areaCode: '' });\n        Call.onToNumberChange('999');\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber)).to.equal(undefined);\n      });\n      it(\"Should Not Alert Special Number - Call 911 with GB Dialing Plan\",async function () {\n        RegionSettings.setData({ countryCode: 'GB', areaCode: '' });\n        Call.onToNumberChange('911');\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber)).to.equal(undefined);\n      });\n      it(\"Should Not Alert Anything - Call 101(Existed Extension/Not Special Number) with US Dialing Plan\",async function () {\n        RegionSettings.setData({ countryCode: 'US', areaCode: '' });\n        Call.onToNumberChange('101');\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noToNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noAreaCode)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.notAnExtension)).to.equal(undefined);\n      });\n      it(\"Should Alert Special Number - Call 101(Existed Extension/Speical Number) with GB Dialing Plan\",async function () {\n        RegionSettings.setData({ countryCode: 'GB', areaCode: '' });\n        Call.onToNumberChange('101');\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noToNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noAreaCode)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber)).to.not.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.notAnExtension)).to.equal(undefined);\n      });\n      it(\"Should Not Alert Anything - Call 102(Existed Extension) with GB Dialing Plan\",async function () {\n        RegionSettings.setData({ countryCode: 'GB', areaCode: '' });\n        Call.onToNumberChange('102');\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noToNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noAreaCode)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.notAnExtension)).to.equal(undefined);\n      });\n      it(\"Should Alert Not An Extension - Call 998(Non Extension) with US Dialing Plan\",async function () {\n        RegionSettings.setData({ countryCode: 'US', areaCode: '' });\n        Call.onToNumberChange('998');\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noToNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noAreaCode)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.notAnExtension)).to.not.equal(undefined);\n      });\n      it(\"Should Alert Not An Extension - Call 998(Non Extension) with GB Dialing Plan\",async function () {\n        RegionSettings.setData({ countryCode: 'GB', areaCode: '' });\n        Call.onToNumberChange('998');\n        await Call.onCall();\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noToNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.noAreaCode)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.specialNumber)).to.equal(undefined);\n        expect(containsErrorMessage(Alert.state.messages, callErrors.notAnExtension)).to.not.equal(undefined);\n      });\n    });\n\n  });\n};\n"]}