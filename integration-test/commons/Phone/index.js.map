{"version":3,"sources":["integration-test/commons/Phone/index.js"],"names":["Phone","history","appKey","appSecret","server","appName","appVersion","brandId","brandName","brandFullName","redirectUri","proxyUri","options","cachePrefix","prefix","addModule","getState","state","tabManager","globalStorage","alert","id","name","fullName","brand","locale","sdkConfig","client","environment","connectivityMonitor","auth","storage","subscription","presence","accountInfo","accountExtension","extensionInfo","rolesAndPermissions","dialingPlan","extensionPhoneNumber","forwardingNumber","blockedNumber","regionSettings","rateLimiter","contactMatcher","activityMatcher","onFirstLogin","router","push","callingSettings","softphone","ringout","numberValidate","call","dateTimeIntl","contactSearch","addSearchSource","sourceName","searchFn","searchString","entityType","phoneNumber","phoneType","formatFn","entities","readyCheckFn","messageSender","composeText","messageStore","conversation","messages","_reducer","app","version","reducer"],"mappings":"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","file":"index.js","sourcesContent":["import RingCentral from 'ringcentral';\nimport RingCentralClient from 'ringcentral-client';\nimport { combineReducers } from 'redux';\n\nimport RcModule from '../../../lib/RcModule';\nimport AccountExtension from '../../../modules/AccountExtension';\nimport AccountInfo from '../../../modules/AccountInfo';\nimport Alert from '../../../modules/Alert';\nimport Auth from '../../../modules/Auth';\nimport Brand from '../../../modules/Brand';\nimport BlockedNumber from '../../../modules/BlockedNumber';\nimport Call from '../../../modules/Call';\nimport CallingSettings from '../../../modules/CallingSettings';\nimport ConnectivityMonitor from '../../../modules/ConnectivityMonitor';\nimport DialingPlan from '../../../modules/DialingPlan';\nimport Environment from '../../../modules/Environment';\nimport ExtensionInfo from '../../../modules/ExtensionInfo';\nimport ExtensionPhoneNumber from '../../../modules/ExtensionPhoneNumber';\nimport ForwardingNumber from '../../../modules/ForwardingNumber';\nimport GlobalStorage from '../../../modules/GlobalStorage';\nimport Locale from '../../../modules/Locale';\nimport Presence from '../../../modules/Presence';\nimport RateLimiter from '../../../modules/RateLimiter';\nimport RegionSettings from '../../../modules/RegionSettings';\nimport Ringout from '../../../modules/Ringout';\nimport RolesAndPermissions from '../../../modules/RolesAndPermissions';\nimport Softphone from '../../../modules/Softphone';\nimport Storage from '../../../modules/Storage';\nimport Subscription from '../../../modules/Subscription';\nimport TabManager from '../../../modules/TabManager';\n// import RouterInteraction from 'ringcentral-js-widget/modules/RouterInteraction';\n\nimport NumberValidate from '../../../modules/NumberValidate';\nimport MessageSender from '../../../modules/MessageSender';\nimport ComposeText from '../../../modules/ComposeText';\nimport ContactSearch from '../../../modules/ContactSearch';\n\nimport Messages from '../../../modules/Messages';\nimport MessageStore from '../../../modules/MessageStore';\nimport Conversation from '../../../modules/Conversation';\n\nimport ContactMatcher from '../../../modules/ContactMatcher';\nimport ActivityMatcher from '../../../modules/ActivityMatcher';\nimport DateTimeIntl from '../../../modules/DateTimeIntl';\n\n// import DynamicsAdapter from '../../../modules/DynamicsInteraction';\n\n// import { callMonitorReducer } from '../CallMonitor/reducers';\n\n\n// import CallLog from '../CallLog';\n// import AutoLogger from '../AutoLogger';\n// import DataMatcher from '../DataMatcher';\n\n\nexport default class Phone extends RcModule {\n  constructor({\n    history,\n    appKey,\n    appSecret,\n    server,\n    appName,\n    appVersion,\n    brandId,\n    brandName,\n    brandFullName,\n    redirectUri,\n    proxyUri,\n    ...options\n   } = {}) {\n    super({\n      ...options,\n    });\n\n    const cachePrefix = `sdk${options.prefix ? `-${options.prefix}` : ''}`;\n\n    this.addModule('client', new RingCentralClient(new RingCentral({\n      cachePrefix,\n      appKey,\n      appSecret,\n      appName,\n      appVersion,\n      server,\n    })));\n    this.addModule('tabManager', new TabManager({\n      ...options,\n      getState: () => this.state.tabManager,\n    }));\n    this.addModule('globalStorage', new GlobalStorage({\n      ...options,\n      getState: () => this.state.globalStorage,\n    }));\n    this.addModule('alert', new Alert({\n      ...options,\n      getState: () => this.state.alert,\n    }));\n\n    this.addModule('brand', new Brand({\n      ...options,\n      id: brandId,\n      name: brandName,\n      fullName: brandFullName,\n      getState: () => this.state.brand,\n    }));\n    this.addModule('locale', new Locale({\n      ...options,\n      getState: () => this.state.locale,\n    }));\n    this.addModule('environment', new Environment({\n      ...options,\n      sdkConfig: {\n        cachePrefix,\n        appKey,\n        appSecret,\n        appName,\n        appVersion,\n        server,\n      },\n      client: this.client,\n      globalStorage: this.globalStorage,\n      getState: () => this.state.environment,\n    }));\n    this.addModule('connectivityMonitor', new ConnectivityMonitor({\n      ...options,\n      alert: this.alert,\n      client: this.client,\n      environment: this.environment,\n      getState: () => this.state.connectivityMonitor,\n    }));\n    this.addModule('auth', new Auth({\n      ...options,\n      client: this.client,\n      brand: this.brand,\n      locale: this.locale,\n      alert: this.alert,\n      environment: this.environment,\n      tabManager: this.tabManager,\n      proxyUri,\n      redirectUri,\n      getState: () => this.state.auth,\n    }));\n    this.addModule('storage', new Storage({\n      ...options,\n      auth: this.auth,\n      getState: () => this.state.storage,\n    }));\n    this.addModule('subscription', new Subscription({\n      ...options,\n      auth: this.auth,\n      client: this.client,\n      storage: this.storage,\n      getState: () => this.state.subscription,\n    }));\n    this.addModule('presence', new Presence({\n      ...options,\n      auth: this.auth,\n      client: this.client,\n      subscription: this.subscription,\n      getState: () => this.state.presence,\n    }));\n    // this.addModule('router', new RouterInteraction({\n    //   ...options,\n    //   history,\n    //   getState: () => this.state.router,\n    // }));\n    this.addModule('accountInfo', new AccountInfo({\n      ...options,\n      auth: this.auth,\n      storage: this.storage,\n      client: this.client,\n      tabManager: this.tabManager,\n      getState: () => this.state.accountInfo,\n    }));\n    this.addModule('accountExtension', new AccountExtension({\n      ...options,\n      auth: this.auth,\n      client: this.client,\n      storage: this.storage,\n      subscription: this.subscription,\n      getState: () => this.state.accountExtension,\n    }));\n    this.addModule('extensionInfo', new ExtensionInfo({\n      ...options,\n      auth: this.auth,\n      client: this.client,\n      storage: this.storage,\n      tabManager: this.tabManager,\n      getState: () => this.state.extensionInfo,\n    }));\n    this.addModule('rolesAndPermissions', new RolesAndPermissions({\n      ...options,\n      auth: this.auth,\n      storage: this.storage,\n      client: this.client,\n      extensionInfo: this.extensionInfo,\n      tabManager: this.tabManager,\n      getState: () => this.state.rolesAndPermissions,\n    }));\n    this.addModule('dialingPlan', new DialingPlan({\n      ...options,\n      auth: this.auth,\n      storage: this.storage,\n      client: this.client,\n      tabManager: this.tabManager,\n      getState: () => this.state.dialingPlan,\n    }));\n    this.addModule('extensionPhoneNumber', new ExtensionPhoneNumber({\n      ...options,\n      auth: this.auth,\n      storage: this.storage,\n      client: this.client,\n      tabManager: this.tabManager,\n      getState: () => this.state.extensionPhoneNumber,\n    }));\n    this.addModule('forwardingNumber', new ForwardingNumber({\n      ...options,\n      auth: this.auth,\n      storage: this.storage,\n      client: this.client,\n      tabManager: this.tabManager,\n      getState: () => this.state.forwardingNumber,\n    }));\n    this.addModule('blockedNumber', new BlockedNumber({\n      ...options,\n      auth: this.auth,\n      storage: this.storage,\n      client: this.client,\n      getState: () => this.state.blockedNumber,\n    }));\n    this.addModule('regionSettings', new RegionSettings({\n      ...options,\n      storage: this.storage,\n      alert: this.alert,\n      extensionInfo: this.extensionInfo,\n      dialingPlan: this.dialingPlan,\n      tabManager: this.tabManager,\n      getState: () => this.state.regionSettings,\n    }));\n    this.addModule('rateLimiter', new RateLimiter({\n      ...options,\n      alert: this.alert,\n      client: this.client,\n      environment: this.environment,\n      globalStorage: this.globalStorage,\n      getState: () => this.state.rateLimiter,\n    }));\n\n    this.addModule('contactMatcher', new ContactMatcher({\n      ...options,\n      auth: this.auth,\n      storage: this.storage,\n      getState: () => this.state.contactMatcher,\n    }));\n    this.addModule('activityMatcher', new ActivityMatcher({\n      ...options,\n      auth: this.auth,\n      storage: this.storage,\n      getState: () => this.state.activityMatcher,\n    }));\n    // this.addModule('callLog', new CallLog({\n    //   ...options,\n    //   auth: this.auth,\n    //   client: this.client,\n    //   storage: this.storage,\n    //   regionSettings: this.regionSettings,\n    //   onFetchSuccess: () => {\n    //     this.contactMatcher.triggerMatch();\n    //     this.activityMatcher.triggerMatch();\n    //   },\n    //   getState: () => this.state.callLog,\n    // }));\n    // this.contactMatcher.addQuerySource({\n    //   sourceName: 'callLog',\n    //   getQueriesFn: this.callLog.getSelector('normalizedPhoneNumbers'),\n    //   readyCheckFn: () => this.callLog.ready,\n    // });\n    // this.contactMatcher.addSearchSource({\n    //   sourceName: 'dynamics',\n    //   searchFn: async ({ queries }) => this.adapter.matchEntities({ phoneNumbers: queries }),\n    //   readyCheckFn: () => this.adapter.ready,\n    // });\n    // this.activityMatcher.addQuerySource({\n    //   sourceName: 'callLog',\n    //   getQueriesFn: this.callLog.getSelector('callLogSessionIds'),\n    //   readyCheckFn: () => this.callLog.ready,\n    // });\n    // this.activityMatcher.addSearchSource({\n    //   sourceName: 'dynamics',\n    //   searchFn: async ({ queries }) => this.adapter.matchPhoneCalls({ sessionIds: queries }),\n    //   readyCheckFn: () => this.adapter.ready,\n    // });\n    this.addModule('callingSettings', new CallingSettings({\n      ...options,\n      alert: this.alert,\n      brand: this.brand,\n      client: this.client,\n      storage: this.storage,\n      extensionInfo: this.extensionInfo,\n      extensionPhoneNumber: this.extensionPhoneNumber,\n      forwardingNumber: this.forwardingNumber,\n      rolesAndPermissions: this.rolesAndPermissions,\n      onFirstLogin: () => {\n        this.router.history.push('/settings'); // TODO find a better solution\n      },\n      getState: () => this.state.callingSettings,\n    }));\n    this.addModule('softphone', new Softphone({\n      ...options,\n      getState: () => this.state.softphone,\n      brand: this.brand,\n    }));\n    this.addModule('ringout', new Ringout({\n      ...options,\n      auth: this.auth,\n      client: this.client,\n      getState: () => this.state.ringout,\n    }));\n    this.addModule('numberValidate', new NumberValidate({\n      ...options,\n      client: this.client,\n      accountExtension: this.accountExtension,\n      regionSettings: this.regionSettings,\n      accountInfo: this.accountInfo,\n      getState: () => this.state.numberValidate,\n    }));\n    this.addModule('call', new Call({\n      ...options,\n      alert: this.alert,\n      client: this.client,\n      callingSettings: this.callingSettings,\n      softphone: this.softphone,\n      storage: this.storage,\n      ringout: this.ringout,\n      numberValidate: this.numberValidate,\n      getState: () => this.state.call,\n    }));\n    // this.addModule('autoLogger', new AutoLogger({\n    //   ...options,\n    //   storage: this.storage,\n    //   getState: () => this.state.autoLogger,\n    // }));\n    // this.autoLogger.addLogHandler({\n    //   sourceName: 'dynamics',\n    //   handlerFn: async args => this.adapter.logCallBatch(args),\n    //   readyCheckFn: () => this.adapter.ready,\n    // });\n\n    this.addModule('dateTimeIntl', new DateTimeIntl({\n      ...options,\n      auth: this.auth,\n      locale: this.locale,\n      storage: this.storage,\n      getState: () => this.state.dateTimeIntl,\n    }));\n\n    this.addModule('contactSearch', new ContactSearch({\n      ...options,\n      auth: this.auth,\n      storage: this.storage,\n      getState: () => this.state.contactSearch,\n    }));\n    this.contactSearch.addSearchSource({\n      sourceName: 'test',\n      searchFn: ({ searchString }) => [{\n        entityType: 'account',\n        name: searchString,\n        phoneNumber: '+1234567890',\n        phoneType: 'phone',\n      }],\n      formatFn: entities => entities,\n      readyCheckFn: () => true,\n    });\n\n    this.addModule('messageSender', new MessageSender({\n      ...options,\n      alert: this.alert,\n      client: this.client,\n      getState: () => this.state.messageSender,\n      extensionPhoneNumber: this.extensionPhoneNumber,\n      extensionInfo: this.extensionInfo,\n      numberValidate: this.numberValidate,\n    }));\n\n    this.addModule('composeText', new ComposeText({\n      ...options,\n      alert: this.alert,\n      storage: this.storage,\n      getState: () => this.state.composeText,\n      messageSender: this.messageSender,\n      numberValidate: this.numberValidate,\n    }));\n\n    this.addModule('messageStore', new MessageStore({\n      ...options,\n      alert: this.alert,\n      auth: this.auth,\n      client: this.client,\n      storage: this.storage,\n      subscription: this.subscription,\n      getState: () => this.state.messageStore,\n    }));\n\n    this.addModule('conversation', new Conversation({\n      ...options,\n      auth: this.auth,\n      messageSender: this.messageSender,\n      extensionInfo: this.extensionInfo,\n      messageStore: this.messageStore,\n      getState: () => this.state.conversation,\n    }));\n\n    this.addModule('messages', new Messages({\n      ...options,\n      messageStore: this.messageStore,\n      getState: () => this.state.messages,\n    }));\n\n    // this.addModule('adapter', new DynamicsAdapter({\n    //   ...options,\n    //   auth: this.auth,\n    //   call: this.call,\n    //   composeText: this.composeText,\n    //   locale: this.locale,\n    //   router: this.router,\n    //   presence: this.presence,\n    //   storage: this.storage,\n    //   globalStorage: this.globalStorage,\n    //   regionSettings: this.regionSettings,\n    //   dateTimeIntl: this.dateTimeIntl,\n    //   getState: () => this.state.adapter,\n    // }));\n\n    this._reducer = combineReducers({\n      app: (state = {\n        name: appName,\n        version: appVersion,\n      }) => state,\n      tabManager: this.tabManager.reducer,\n      alert: this.alert.reducer,\n      auth: this.auth.reducer,\n      brand: this.brand.reducer,\n      connectivityMonitor: this.connectivityMonitor.reducer,\n      locale: this.locale.reducer,\n      subscription: this.subscription.reducer,\n      // router: this.router.reducer,\n      accountExtension: this.accountExtension.reducer,\n      accountInfo: this.accountInfo.reducer,\n      rolesAndPermissions: this.rolesAndPermissions.reducer,\n      extensionInfo: this.extensionInfo.reducer,\n      dialingPlan: this.dialingPlan.reducer,\n      extensionPhoneNumber: this.extensionPhoneNumber.reducer,\n      forwardingNumber: this.forwardingNumber.reducer,\n      blockedNumber: this.blockedNumber.reducer,\n      regionSettings: this.regionSettings.reducer,\n      callingSettings: this.callingSettings.reducer,\n      call: this.call.reducer,\n      rateLimiter: this.rateLimiter.reducer,\n      ringout: this.ringout.reducer,\n      softphone: this.softphone.reducer,\n      // callLog: this.callLog.reducer,\n      // callMonitor: callMonitorReducer,\n      environment: this.environment.reducer,\n      presence: this.presence.reducer,\n      contactMatcher: this.contactMatcher.reducer,\n      activityMatcher: this.activityMatcher.reducer,\n      storage: this.storage.reducer,\n      // autoLogger: this.autoLogger.reducer,\n      globalStorage: this.globalStorage.reducer,\n      dateTimeIntl: this.dateTimeIntl.reducer,\n      contactSearch: this.contactSearch.reducer,\n      numberValidate: this.numberValidate.reducer,\n      messageSender: this.messageSender.reducer,\n      composeText: this.composeText.reducer,\n      messageStore: this.messageStore.reducer,\n      conversation: this.conversation.reducer,\n      messages: this.messages.reducer,\n      // adapter: this.adapter.reducer,\n    });\n  }\n\n  get name() {\n    return this.state.app.name;\n  }\n\n  get version() {\n    return this.state.app.version;\n  }\n}\n"]}