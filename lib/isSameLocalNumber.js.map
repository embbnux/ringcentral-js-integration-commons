{"version":3,"sources":["lib/isSameLocalNumber.js"],"names":["isSameLocalNumber","a","b","replace"],"mappings":";;;;;kBAMwBA,iB;;AANxB;;AAMe,SAASA,iBAAT,CAA2BC,CAA3B,EAA8BC,CAA9B,EAAiC;AAC9C,MAAID,MAAMC,CAAV,EAAa,OAAO,IAAP;AACb,MAAI,gCAAcD,CAAd,CAAJ,EAAsB;AACpB,WAAO,8BAAY,uCAAqBA,CAArB,CAAZ,EAAqCA,CAArC,EAAwCE,OAAxC,CAAgD,QAAhD,EAA0D,EAA1D,MAAkED,CAAzE;AACD;AACD,MAAI,gCAAcA,CAAd,CAAJ,EAAsB;AACpB,WAAO,8BAAY,uCAAqBA,CAArB,CAAZ,EAAqCA,CAArC,EAAwCC,OAAxC,CAAgD,QAAhD,EAA0D,EAA1D,MAAkEF,CAAzE;AACD;AACD,SAAO,KAAP;AACD","file":"isSameLocalNumber.js","sourcesContent":["import {\n  isValidNumber,\n  formatLocal,\n  countryForE164Number,\n} from 'phoneformat.js';\n\nexport default function isSameLocalNumber(a, b) {\n  if (a === b) return true;\n  if (isValidNumber(a)) {\n    return formatLocal(countryForE164Number(a), a).replace(/[^\\d]/g, '') === b;\n  }\n  if (isValidNumber(b)) {\n    return formatLocal(countryForE164Number(b), b).replace(/[^\\d]/g, '') === a;\n  }\n  return false;\n}\n"]}