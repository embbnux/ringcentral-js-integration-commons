{"version":3,"sources":["lib/I18n/index.js"],"names":["locale","RUNTIME","instances","i","_load","setLocale","DEFAULT_LOCALE","PSEUDO_LOCALE","I18n","loadLocale","Error","_loadLocale","_cache","add","data","key","Object","prototype","hasOwnProperty","_getString"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA;;;;;;;wEAMA,iBAAyBA,MAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACEC,oBAAQD,MAAR,GAAiBA,MAAjB;AADF;AAAA;AAAA;AAAA;AAAA,mDAEkBC,QAAQC,SAF1B;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEaC,aAFb;AAAA;AAAA,mBAGUA,EAAEC,KAAF,CAAQJ,MAAR,CAHV;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeK,S;;;;;AAOf;;;;;;AAtBA;;;;;;AAEO,IAAMC,0CAAiB,OAAvB;AACA,IAAMC,wCAAgB,OAAtB;AACA,IAAMN,4BAAU;AACrBD,UAAQM,cADa;AAErBJ,aAAW;AAFU,CAAhB;IAsBcM,I;AACnB;;;;;;AAMA,gBAAYC,UAAZ,EAAwB;AAAA;;AACtB,QAAI,OAAOA,UAAP,KAAsB,UAA1B,EAAsC;AACpC,YAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACD;AACD,SAAKC,WAAL,GAAmBF,UAAnB;AACA,SAAKG,MAAL,GAAc,EAAd;AACAX,YAAQC,SAAR,CAAkBW,GAAlB,CAAsB,IAAtB;AACA,SAAKT,KAAL,CAAWE,cAAX;AACA,SAAKF,KAAL,CAAWH,QAAQD,MAAnB;AACD;;;;;+FACWA,M;;;;;;;;sBACNA,WAAWO,aAAX,IAA4B,CAAC,KAAKK,MAAL,CAAYZ,MAAZ,C;;;;;AAC3Bc,oB;;;uBAEW,2DAAC;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAY,MAAKH,WAAL,CAAiBX,MAAjB,CAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAD,I;;;AAAbc,oB;;;;;;;;AAEA;AACAA,uBAAO,EAAP;;;AAEF,qBAAKF,MAAL,CAAYZ,MAAZ,IAAsBc,IAAtB;;;;;;;;;;;;;;;;;;+BAGOC,G,EAAKf,M,EAAQ;AAAA;;AACtB,UACE,KAAKY,MAAL,CAAYZ,MAAZ,KACA,kBAAKY,MAAL,CAAYZ,MAAZ,GAAqBgB,OAAOC,SAAP,CAAiBC,cAAtC,kBAAqDH,GAArD,CAFF,EAGE;AACA,eAAO,KAAKH,MAAL,CAAYZ,MAAZ,EAAoBe,GAApB,CAAP;AACD;AACD,UACE,KAAKH,MAAL,CAAYN,cAAZ,KACA,kBAAKM,MAAL,CAAYN,cAAZ,GAA6BU,OAAOC,SAAP,CAAiBC,cAA9C,kBAA6DH,GAA7D,CAFF,EAGE;AACA,eAAO,KAAKH,MAAL,CAAYN,cAAZ,EAA4BS,GAA5B,CAAP;AACD;AACD,aAAOA,GAAP;AACD;;;8BACSA,G,EAA8B;AAAA,UAAzBf,MAAyB,uEAAhBC,QAAQD,MAAQ;;AACtC,UAAIA,WAAWO,aAAf,EAA8B;AAC5B,eAAO,8BAAe,KAAKY,UAAL,CAAgBJ,GAAhB,EAAqBT,cAArB,CAAf,CAAP;AACD;AACD,aAAO,KAAKa,UAAL,CAAgBJ,GAAhB,EAAqBf,MAArB,CAAP;AACD;;AAED;;;;wBACoB;AAClB,aAAOC,QAAQD,MAAf;AACD;AACD;;;;wBACgB;AACd,aAAOK,SAAP;AACD;;;wBAE0B;AACzB,aAAOJ,QAAQD,MAAf;AACD;;;wBAEsB;AACrB,aAAOK,SAAP;AACD;;;;;kBAlEkBG,I","file":"index.js","sourcesContent":["import toPseudoString from './toPseudoString';\n\nexport const DEFAULT_LOCALE = 'en-US';\nexport const PSEUDO_LOCALE = 'en-ZZ';\nexport const RUNTIME = {\n  locale: DEFAULT_LOCALE,\n  instances: new Set(),\n};\n\n/**\n * @function\n * @description Set currrent runtime locale and load the locale files accordingly\n * @param {String} locale - The desired locale.\n * @return Promise<undefined>\n */\nasync function setLocale(locale) {\n  RUNTIME.locale = locale;\n  for (const i of RUNTIME.instances) {\n    await i._load(locale);\n  }\n}\n\n/**\n * @class\n * @description I18n is a simple localizations helper class that represents a set of locale files.\n */\nexport default class I18n {\n  /**\n   * @constructor\n   * @description Accepts a loadLocale function that should be async and resolve to the locale\n   *  object when invoked.\n   * @param {String => Promise<Object>} loadLocale - Asynchronous locale loader function.\n   */\n  constructor(loadLocale) {\n    if (typeof loadLocale !== 'function') {\n      throw new Error('loadLocale must be a function');\n    }\n    this._loadLocale = loadLocale;\n    this._cache = {};\n    RUNTIME.instances.add(this);\n    this._load(DEFAULT_LOCALE);\n    this._load(RUNTIME.locale);\n  }\n  async _load(locale) {\n    if (locale !== PSEUDO_LOCALE && !this._cache[locale]) {\n      let data;\n      try {\n        data = await (async () => this._loadLocale(locale))();\n      } catch (error) {\n        /* ignore error */\n        data = {};\n      }\n      this._cache[locale] = data;\n    }\n  }\n  _getString(key, locale) {\n    if (\n      this._cache[locale] &&\n      this._cache[locale]::Object.prototype.hasOwnProperty(key)\n    ) {\n      return this._cache[locale][key];\n    }\n    if (\n      this._cache[DEFAULT_LOCALE] &&\n      this._cache[DEFAULT_LOCALE]::Object.prototype.hasOwnProperty(key)\n    ) {\n      return this._cache[DEFAULT_LOCALE][key];\n    }\n    return key;\n  }\n  getString(key, locale = RUNTIME.locale) {\n    if (locale === PSEUDO_LOCALE) {\n      return toPseudoString(this._getString(key, DEFAULT_LOCALE));\n    }\n    return this._getString(key, locale);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  get currentLocale() {\n    return RUNTIME.locale;\n  }\n  // eslint-disable-next-line class-methods-use-this\n  get setLocale() {\n    return setLocale;\n  }\n\n  static get currentLocale() {\n    return RUNTIME.locale;\n  }\n\n  static get setLocale() {\n    return setLocale;\n  }\n}\n\n\n"]}