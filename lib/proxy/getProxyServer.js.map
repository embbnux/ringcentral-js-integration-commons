{"version":3,"sources":["lib/proxy/getProxyServer.js"],"names":["getProxyServer","Target","transport","options","actionTypes","_target","getState","state","target","subModule","Object","prototype","hasOwnProperty","configurable","enumerable","get","_transport","_reducer","moduleReducer","reducer","prefix","on","events","request","requestId","payload","type","functionPath","args","execute","sync","split","slice","pathTokens","fnName","pop","forEach","token","result","response","error","Error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAKwBA,c;;AALxB;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,cAAT,CAAwBC,MAAxB,EAAgC;AAC7C;AAAA;;AACE,0BAAuC;AAAA;;AAAA,UAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,UAAXC,OAAW;AAAA;;AAAA,mKAEhCA,OAFgC;AAGnCC;AAHmC;;AAKrC,YAAKC,OAAL,GAAe,IAAIJ,MAAJ,4BACVE,OADU;AAEbG,kBAAU;AAAA,iBAAM,MAAKC,KAAL,CAAWC,MAAjB;AAAA;AAFG,SAAf;;AALqC,iCAU1BC,SAV0B;AAAA;;AAWnC,YACE,mBAAKJ,OAAL,EAAcK,OAAOC,SAAP,CAAiBC,cAA/B,kBAA8CH,SAA9C,KACE,MAAKJ,OAAL,CAAaI,SAAb,+BAFJ,EAGE;AACA,+CAA4BA,SAA5B,EAAuC;AACrCI,0BAAc,KADuB;AAErCC,wBAAY,IAFyB;AAGrCC,eAHqC,iBAG/B;AACJ,qBAAO,KAAKV,OAAL,CAAaI,SAAb,CAAP;AACD;AALoC,WAAvC;AAOD;AAtBkC;;AAUrC,WAAK,IAAMA,SAAX,IAAwB,MAAKJ,OAA7B,EAAsC;AAAA,cAA3BI,SAA2B;AAarC;;AAED,YAAKO,UAAL,GAAkB,kCAAkBd,SAAlB,EAA6B,WAA7B,CAAlB;AACA,YAAKe,QAAL,GAAgB,qCAAsB;AACpCC,uBAAe,MAAKb,OAAL,CAAac,OADQ;AAEpCjB,4BAFoC;AAGpCkB,gBAAQ,MAAKA;AAHuB,OAAtB,CAAhB;;AAMAlB,gBAAUmB,EAAV,CACEnB,UAAUoB,MAAV,CAAiBC,OADnB;AAAA,+EAEE;AAAA,cACEC,SADF,SACEA,SADF;AAAA,oCAEEC,OAFF;AAAA,cAGIC,IAHJ,iBAGIA,IAHJ;AAAA,cAIIC,YAJJ,iBAIIA,YAJJ;AAAA,cAKIC,IALJ,iBAKIA,IALJ;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gCAQUF,IARV;AAAA,kDASS,MAAKtB,WAAL,CAAiByB,OAT1B,uBA8BS,MAAKzB,WAAL,CAAiB0B,IA9B1B;AAAA;;AAAA;AAAA,0CAU8BH,aAAaI,KAAb,CAAmB,GAAnB,EAAwBC,KAAxB,CAA8B,CAA9B,CAV9B,0EAUgBC,UAVhB;AAWYC,wBAXZ,GAWqBD,WAAWE,GAAX,EAXrB;AAYU3B,wBAZV,GAYmB,MAAKH,OAZxB;;AAaM4B,6BAAWG,OAAX,CAAmB,UAACC,KAAD,EAAW;AAC5B7B,6BAASA,OAAO6B,KAAP,CAAT;AACD,mBAFD;AAbN;AAAA;AAAA,yBAiB6B,mBAAOH,MAAP,kDAAkBN,IAAlB,EAjB7B;;AAAA;AAiBcU,wBAjBd;;AAkBQpC,4BAAUqC,QAAV,CAAmB;AACjBf,wCADiB;AAEjBc;AAFiB,mBAAnB;AAlBR;AAAA;;AAAA;AAAA;AAAA;;AAuBQpC,4BAAUqC,QAAV,CAAmB;AACjBf,wCADiB;AAEjBgB;AAFiB,mBAAnB;;AAvBR;AAAA;;AAAA;AA+BMtC,4BAAUqC,QAAV,CAAmB;AACjBf,wCADiB;AAEjBc,4BAAQ,MAAK/B;AAFI,mBAAnB;AA/BN;;AAAA;AAqCML,4BAAUqC,QAAV,CAAmB;AACjBf,wCADiB;AAEjBgB,2BAAO,IAAIC,KAAJ,6BAAmCf,IAAnC;AAFU,mBAAnB;AArCN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF;;AAAA;AAAA;AAAA;AAAA;AAhCqC;AA+EtC;;AAhFH;AAAA;AAkFD","file":"getProxyServer.js","sourcesContent":["import RcModule from '../RcModule';\r\nimport baseActionTypes from './baseActionTypes';\r\nimport getProxyServerReducer from './getProxyServerReducer';\r\nimport ensureExist from '../ensureExist';\r\n\r\nexport default function getProxyServer(Target) {\r\n  return class extends RcModule {\r\n    constructor({ transport, ...options }) {\r\n      super({\r\n        ...options,\r\n        actionTypes: baseActionTypes,\r\n      });\r\n      this._target = new Target({\r\n        ...options,\r\n        getState: () => this.state.target,\r\n      });\r\n\r\n      for (const subModule in this._target) {\r\n        if (\r\n          this._target::Object.prototype.hasOwnProperty(subModule) &&\r\n            this._target[subModule] instanceof RcModule\r\n        ) {\r\n          Object.defineProperty(this, subModule, {\r\n            configurable: false,\r\n            enumerable: true,\r\n            get() {\r\n              return this._target[subModule];\r\n            },\r\n          });\r\n        }\r\n      }\r\n\r\n      this._transport = this::ensureExist(transport, 'transport');\r\n      this._reducer = getProxyServerReducer({\r\n        moduleReducer: this._target.reducer,\r\n        transport,\r\n        prefix: this.prefix,\r\n      });\r\n\r\n      transport.on(\r\n        transport.events.request,\r\n        async ({\r\n          requestId,\r\n          payload: {\r\n            type,\r\n            functionPath,\r\n            args,\r\n          },\r\n        }) => {\r\n          switch (type) {\r\n            case this.actionTypes.execute: {\r\n              const [...pathTokens] = functionPath.split('.').slice(1);\r\n              const fnName = pathTokens.pop();\r\n              let target = this._target;\r\n              pathTokens.forEach((token) => {\r\n                target = target[token];\r\n              });\r\n              try {\r\n                const result = await target[fnName](...args);\r\n                transport.response({\r\n                  requestId,\r\n                  result,\r\n                });\r\n              } catch (error) {\r\n                transport.response({\r\n                  requestId,\r\n                  error,\r\n                });\r\n              }\r\n            }\r\n              break;\r\n            case this.actionTypes.sync:\r\n              transport.response({\r\n                requestId,\r\n                result: this.state,\r\n              });\r\n              break;\r\n            default:\r\n              transport.response({\r\n                requestId,\r\n                error: new Error(`Invalid request type '${type}'.`)\r\n              });\r\n              break;\r\n          }\r\n        },\r\n      );\r\n    }\r\n  };\r\n}\r\n"]}