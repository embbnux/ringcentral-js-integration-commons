{"version":3,"sources":["lib/DataMatcher/index.js"],"names":["checkName","getQueryKey","name","Error","query","DEFAULT_TTL","DEFAULT_NO_MATCH_TTL","DataMatcher","storage","ttl","noMatchTtl","actionTypes","base","prefix","storageKey","getReducer","getDataReducer","options","_querySources","_searchProviders","_matchPromises","_storage","_ttl","_noMatchTtl","_storageKey","_reducer","registerReducer","key","reducer","data","addSelector","getItem","state","_selectors","dataMap","forEach","queryResult","matchesList","providerName","length","concat","_requestCounter","store","subscribe","_onStateChange","output","querySourcesReady","_","getQueriesFn","add","dispatch","type","cleanUp","queries","_getQueries","timestamp","Date","now","_shouldInit","init","_cleanUp","initSuccess","_shouldReset","reset","resetSuccess","pending","ready","searchProvidersReady","searchFn","readyCheckFn","constructor","has","set","match","ignoreCache","all","keys","map","_matchSource","requestId","provider","get","promise","queryKey","delete","matchSuccess","matchError","error","promises","filteredQueries","push","_t","_fetchMatchResult","values","every","status","dataMapping"],"mappings":"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","file":"index.js","sourcesContent":["import 'core-js/fn/array/every';\nimport RcModule from '../RcModule';\nimport { prefixEnum } from '../Enum';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport baseActionTypes from './baseActionTypes';\nimport getDefaultReducer from './getDefaultReducer';\nimport getDefaultDataReducer from './getDefaultDataReducer';\n\nexport function checkName(name) {\n  if (!name) {\n    throw new Error('DataMatcher: \"name\" is required.');\n  }\n  if (typeof name !== 'string') {\n    throw new Error('DataMatcher: \"name\" must be a string.');\n  }\n}\n\nexport function getQueryKey(name, query) {\n  return `${name}-${query}`;\n}\n\nconst DEFAULT_TTL = 30 * 1000;\nconst DEFAULT_NO_MATCH_TTL = 30 * 1000;\n\nexport default class DataMatcher extends RcModule {\n  constructor({\n    name,\n    storage,\n    ttl = DEFAULT_TTL,\n    noMatchTtl = DEFAULT_NO_MATCH_TTL,\n    actionTypes = prefixEnum({ base: baseActionTypes, prefix: name }),\n    storageKey = `${name}Data`,\n    getReducer = getDefaultReducer,\n    getDataReducer = getDefaultDataReducer,\n    ...options,\n  } = {}) {\n    checkName(name);\n    super({\n      ...options,\n      actionTypes,\n    });\n\n    this._querySources = new Map();\n    this._searchProviders = new Map();\n    this._matchPromises = new Map();\n    this._storage = storage;\n    this._ttl = ttl;\n    this._noMatchTtl = noMatchTtl;\n\n    this._storageKey = storageKey;\n\n    if (this._storage) {\n      this._reducer = getReducer(this.actionTypes);\n      this._storage.registerReducer({\n        key: this._storageKey,\n        reducer: getDataReducer(this.actionTypes)\n      });\n    } else {\n      this._reducer = getReducer(this.actionTypes, {\n        data: getDataReducer(this.actionTypes),\n      });\n    }\n\n    this.addSelector('data',\n      () => (\n        this._storage ?\n          this._storage.getItem(this._storageKey) :\n          this.state.data\n      ),\n      data => (data || {}),\n    );\n\n    this.addSelector('dataMapping',\n      this._selectors.data,\n      (data) => {\n        const dataMap = {};\n        Object.keys(data).forEach((query) => {\n          const queryResult = data[query];\n          if (!queryResult) {\n            return;\n          }\n          let matchesList = [];\n          Object.keys(queryResult).forEach((providerName) => {\n            if (queryResult[providerName] && queryResult[providerName].data.length > 0) {\n              matchesList = matchesList.concat(queryResult[providerName].data);\n            }\n          });\n          if (matchesList.length > 0) {\n            dataMap[query] = matchesList;\n          }\n        });\n        return dataMap;\n      }\n    );\n    this._requestCounter = 0;\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n  _getQueries() {\n    const output = new Set();\n    if (this.querySourcesReady) {\n      this._querySources.forEach((_, getQueriesFn) => {\n        getQueriesFn().forEach((query) => {\n          output.add(query);\n        });\n      });\n    }\n    return [...output];\n  }\n  _cleanUp() {\n    this.store.dispatch({\n      type: this.actionTypes.cleanUp,\n      queries: this._getQueries(),\n      timestamp: Date.now(),\n      ttl: this._ttl,\n    });\n  }\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      this._cleanUp();\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.reset,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n  }\n\n  _shouldInit() {\n    return !!(\n      this.pending &&\n      (!this._storage || this._storage.ready) &&\n      this.searchProvidersReady &&\n      this.querySourcesReady\n    );\n  }\n\n  _shouldReset() {\n    return !!(\n      this.ready &&\n      (\n        (!!this._storage && !this._storage.ready) ||\n        !this.searchProvidersReady ||\n        !this.querySourcesReady\n      )\n    );\n  }\n\n  get searchProvidersReady() {\n    return [...this._searchProviders.values()]\n      .every(({ readyCheckFn }) => readyCheckFn());\n  }\n  get querySourcesReady() {\n    return [...this._querySources.values()]\n      .every(readyCheckFn => readyCheckFn());\n  }\n\n  addSearchProvider({ name, searchFn, readyCheckFn }) {\n    if (!name) {\n      throw new Error(\n        `${this.constructor.name}: \"name\" is required.`\n      );\n    }\n    if (this._searchProviders.has(name)) {\n      throw new Error(\n        `${this.constructor.name}: A provider named \"${name}\" already exists.`\n      );\n    }\n    if (typeof searchFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"searchFn\" must be a function.`\n      );\n    }\n    if (typeof readyCheckFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"readyCheckFn\" must be a function.`\n      );\n    }\n    this._searchProviders.set(name, {\n      searchFn,\n      readyCheckFn,\n    });\n  }\n\n  addQuerySource({ getQueriesFn, readyCheckFn }) {\n    if (typeof getQueriesFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"getQueriesFn\" must be a function.`\n      );\n    }\n    if (typeof readyCheckFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"readyCheckFn\" must be a function.`\n      );\n    }\n    if (this._querySources.has(getQueriesFn)) {\n      throw new Error(\n        `${this.constructor.name}: this getQueryFn has already been added.`\n      );\n    }\n    this._querySources.set(getQueriesFn, readyCheckFn);\n  }\n  async triggerMatch() {\n    if (this.ready) {\n      this._cleanUp();\n      await this.match({\n        queries: this._getQueries(),\n      });\n    }\n  }\n\n  async match({\n    queries,\n    ignoreCache = false\n  }) {\n    await Promise.all([...this._searchProviders.keys()]\n      .map(name => (\n        this._matchSource({\n          name,\n          queries,\n          ignoreCache,\n        })\n      )));\n  }\n  async _fetchMatchResult({\n    name,\n    queries,\n  }) {\n    const requestId = this._requestCounter;\n    this._requestCounter += 1;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.match,\n        queries,\n        name,\n      });\n      const provider = this._searchProviders.get(name);\n      if (!provider) {\n        throw new Error(\n          `${this.constructor.name}: provider named \"${name} does not exist`\n        );\n      }\n      const promise = provider\n        .searchFn({\n          queries,\n        });\n      queries.forEach((query) => {\n        // cache the promise\n        const queryKey = getQueryKey(name, query);\n        this._matchPromises.set(queryKey, {\n          promise,\n          requestId,\n        });\n      });\n      const data = await promise;\n      queries.forEach((query) => {\n        // clear the cached promise\n        const queryKey = getQueryKey(name, query);\n        if (\n          this._matchPromises.get(queryKey) &&\n          this._matchPromises.get(queryKey).requestId === requestId\n        ) {\n          this._matchPromises.delete(queryKey);\n        }\n      });\n      this.store.dispatch({\n        type: this.actionTypes.matchSuccess,\n        name,\n        queries,\n        data,\n        timestamp: Date.now(),\n      });\n    } catch (error) {\n      queries.forEach((query) => {\n        // clear the cached promise\n        const queryKey = getQueryKey(name, query);\n        if (\n          this._matchPromises.get(queryKey) &&\n          this._matchPromises.get(queryKey).requestId === requestId\n        ) {\n          this._matchPromises.delete(queryKey);\n        }\n      });\n      this.store.dispatch({\n        type: this.actionTypes.matchError,\n        name,\n        queries,\n        error,\n        timestamp: Date.now(),\n      });\n      throw error;\n    }\n  }\n  async _matchSource({\n    name,\n    queries,\n    ignoreCache\n  }) {\n    const now = Date.now();\n    const promises = [];\n    const filteredQueries = [];\n    const data = this.data;\n    queries.forEach((query) => {\n      const queryKey = getQueryKey(name, query);\n      if (this._matchPromises.has(queryKey)) {\n        promises.push(this._matchPromises.get(queryKey));\n      } else if (\n        ignoreCache ||\n        !data[query] ||\n        !data[query][name] ||\n        now - data[query][name]._t > this._noMatchTtl\n      ) {\n        filteredQueries.push(query);\n      }\n    });\n    if (filteredQueries.length) {\n      promises.push(this._fetchMatchResult({\n        name,\n        queries,\n      }));\n    }\n\n    if (promises.length) {\n      await Promise.all(promises);\n    }\n  }\n\n  get status() {\n    return this.state.status;\n  }\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get data() {\n    return this._selectors.data();\n  }\n\n  get dataMapping() {\n    return this._selectors.dataMapping();\n  }\n}\n"]}