{"version":3,"sources":["lib/DataMatcher/index.js"],"names":["checkName","name","Error","DEFAULT_TTL","DEFAULT_NO_MATCHER_TTL","DataMatcher","auth","storage","ttl","noMatchTtl","actionTypes","enumMap","prefix","storageKey","getReducer","getDataReducer","options","_querySources","_searchSource","_auth","_storage","_ttl","_noMatchTtl","_storageKey","_reducer","registerReducer","key","reducer","cache","store","subscribe","_onStateChange","_shouldInit","_initModuleStatus","triggerMatch","_shouldReset","_resetModuleStatus","ready","loggedIn","_readyCheck","dispatch","type","initSuccess","expiredKeys","_getExpiredKeys","resetSuccess","every","sourceName","readyCheckFn","values","now","Date","matchRecord","forEach","result","notFound","timestamp","push","searchFn","getQueriesFn","has","set","queries","_","concat","length","match","ignoreCache","quiet","all","map","_matchSource","filter","query","cacheKey","state","matching","indexOf","filteredQueries","_filterQueriesFromCache","_startMatch","data","_finishMatch","_onMatchError","error","quietMatch","matchSuccess","matchError","_matcherStatus","status","getItem","dataMap"],"mappings":"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","file":"index.js","sourcesContent":["import 'core-js/fn/array/every';\nimport RcModule from '../RcModule';\nimport { prefixEnum } from '../Enum';\nimport moduleStatus from '../../enums/moduleStatus';\n\nimport actionTypesBase from './actionTypesBase';\nimport getMatcherReducer from './getMatcherReducer';\nimport getCacheReducer from './getCacheReducer';\n\nimport { getCacheKey, matchResult } from './helpers';\n\nexport function checkName(name) {\n  if (!name) {\n    throw new Error('DataMatcher: \"name\" is required.');\n  }\n  if (typeof name !== 'string') {\n    throw new Error('DataMatcher: \"name\" must be a string.');\n  }\n}\n\nconst DEFAULT_TTL = 30 * 60 * 1000;\nconst DEFAULT_NO_MATCHER_TTL = 30 * 1000;\n\nexport default class DataMatcher extends RcModule {\n  constructor({\n    name,\n    auth,\n    storage,\n    ttl = DEFAULT_TTL,\n    noMatchTtl = DEFAULT_NO_MATCHER_TTL,\n    actionTypes = prefixEnum({ enumMap: actionTypesBase, prefix: name }),\n    storageKey = `${name}Data`,\n    getReducer = getMatcherReducer,\n    getDataReducer = getCacheReducer,\n    ...options,\n  }) {\n    checkName(name);\n    super({\n      ...options,\n      actionTypes,\n    });\n\n    this._querySources = new Map();\n    this._searchSource = {};\n\n    this._auth = auth;\n    this._storage = storage;\n    this._ttl = ttl;\n    this._noMatchTtl = noMatchTtl;\n\n    this._storageKey = storageKey;\n\n    if (this._storage) {\n      this._reducer = getReducer(this.actionTypes);\n      this._storage.registerReducer({\n        key: this._storageKey,\n        reducer: getDataReducer(this.actionTypes)\n      });\n    } else {\n      this._reducer = getReducer(this.actionTypes, {\n        cache: getDataReducer(this.actionTypes),\n      });\n    }\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this._initModuleStatus();\n      this.triggerMatch();\n    } else if (this._shouldReset()) {\n      this._resetModuleStatus();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      !this.ready &&\n      this._auth.loggedIn &&\n      (!this._storage || this._storage.ready) &&\n      this._readyCheck()\n    );\n  }\n\n  _shouldReset() {\n    return (\n      this.ready &&\n      (\n        !this._auth.loggedIn ||\n        ((!!this._storage) && !this._storage.ready)\n      )\n    );\n  }\n\n  _initModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n      expiredKeys: this._getExpiredKeys(),\n    });\n  }\n\n  _resetModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  _readyCheck() {\n    return Object.keys(this._searchSource)\n      .every(sourceName => this._searchSource[sourceName].readyCheckFn()) &&\n      [...this._querySources.values()].every(readyCheckFn => readyCheckFn());\n  }\n\n  _getExpiredKeys() {\n    const expiredKeys = [];\n    const now = Date.now();\n    const matchRecord = this.cache.matchRecord;\n    Object.keys(matchRecord).forEach((key) => {\n      const ttl =\n        matchRecord[key].result === matchResult.notFound ? this._noMatchTtl : this._ttl;\n      if (now - matchRecord[key].timestamp > ttl) {\n        expiredKeys.push(key);\n      }\n    });\n    return expiredKeys;\n  }\n\n  addSearchSource({ sourceName, searchFn, readyCheckFn }) {\n    if (!sourceName) {\n      throw new Error('DataMatcher: \"sourceName\" is required.');\n    }\n    if (this._searchSource[sourceName]) {\n      throw new Error(`DataMatcher: A source named \"${sourceName}\" already exists.`);\n    }\n    if (typeof searchFn !== 'function') {\n      throw new Error('DataMatcher: \"searchFn\" must be a function.');\n    }\n    if (typeof readyCheckFn !== 'function') {\n      throw new Error('DataMatcher: \"readyCheckFn\" must be a function.');\n    }\n    this._searchSource[sourceName] = {\n      searchFn,\n      readyCheckFn,\n    };\n  }\n\n  addQuerySource({ getQueriesFn, readyCheckFn }) {\n    if (typeof getQueriesFn !== 'function') {\n      throw new Error('DataMatcher: \"getQueriesFn\" must be a function.');\n    }\n    if (typeof readyCheckFn !== 'function') {\n      throw new Error('DataMatcher: \"readyCheckFn\" must be a function.');\n    }\n    if (this._querySources.has(getQueriesFn)) {\n      throw new Error('DataMatcher: \"getQueriesFn\" is already added.');\n    }\n    this._querySources.set(getQueriesFn, readyCheckFn);\n  }\n\n  async triggerMatch() {\n    if (!this.ready) {\n      return;\n    }\n\n    let queries = [];\n    this._querySources.forEach((_, getQueriesFn) => {\n      queries = queries.concat(getQueriesFn());\n    });\n    queries = [...(new Set(queries))];\n    if (queries.length) {\n      await this.match({ queries });\n    }\n  }\n\n  match({ queries, ignoreCache = false, quiet = false }) {\n    return Promise.all(Object.keys(this._searchSource).map(sourceName => (\n      this._matchSource({\n        sourceName,\n        queries: [...new Set(queries)], // new Set for making unique\n        ignoreCache,\n        quiet,\n      })\n    )));\n  }\n\n  _filterQueriesFromCache({ sourceName, queries }) {\n    const now = Date.now();\n    return queries.filter((query) => {\n      const cacheKey = getCacheKey(sourceName, query);\n      const cache = this.cache;\n      return !(\n        (cache.matchRecord[cacheKey] &&\n        (now - cache.matchRecord[cacheKey].timestamp) < (\n          cache.matchRecord[cacheKey].result === matchResult.notFound ?\n            this._noMatchTtl : this._ttl\n        )) ||\n        this.state.matching.indexOf(cacheKey) !== -1\n      );\n    });\n  }\n\n  async _matchSource({ sourceName, queries, ignoreCache, quiet }) {\n    const filteredQueries =\n      ignoreCache ? queries : this._filterQueriesFromCache({ sourceName, queries });\n    if (filteredQueries.length) {\n      this._startMatch({\n        sourceName,\n        queries: filteredQueries,\n        quiet,\n      });\n      try {\n        const data = await this._searchSource[sourceName].searchFn({\n          queries: filteredQueries,\n        });\n        this._finishMatch({\n          sourceName,\n          queries: filteredQueries,\n          data,\n        });\n      } catch (error) {\n        this._onMatchError({\n          sourceName,\n          queries: filteredQueries,\n          error,\n        });\n      }\n    }\n  }\n\n  _startMatch({ sourceName, queries, quiet }) {\n    this.store.dispatch({\n      type: quiet ? this.actionTypes.quietMatch : this.actionTypes.match,\n      sourceName,\n      queries,\n    });\n  }\n\n  _finishMatch({ sourceName, queries, data }) {\n    this.store.dispatch({\n      type: this.actionTypes.matchSuccess,\n      sourceName,\n      queries,\n      data,\n    });\n  }\n\n  _onMatchError({ sourceName, queries, error }) {\n    this.store.dispatch({\n      type: this.actionTypes.matchError,\n      sourceName,\n      queries,\n      error,\n    });\n  }\n\n  get matcherStatus() {\n    return this._matcherStatus;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatus.ready;\n  }\n\n  get cache() {\n    return this._storage ?\n      this._storage.getItem(this._storageKey) :\n      this.state.cache;\n  }\n\n  get dataMapping() {\n    return (this.cache && this.cache.dataMap) || {};\n  }\n}\n"]}