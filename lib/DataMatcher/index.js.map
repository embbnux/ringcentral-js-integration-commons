{"version":3,"sources":["lib/DataMatcher/index.js"],"names":["checkName","name","Error","DEFAULT_TTL","DEFAULT_NO_MATCH_TTL","DataMatcher","storage","ttl","noMatchTtl","actionTypes","base","prefix","storageKey","getReducer","getDataReducer","options","_querySources","_searchProviders","_matchPromises","_matchQueues","_storage","_ttl","_noMatchTtl","_storageKey","_reducer","registerReducer","key","reducer","data","addSelector","getItem","state","_selectors","dataMap","forEach","query","queryResult","matchesList","_providerValue","providerName","length","concat","_lastCleanUp","store","subscribe","_onStateChange","output","readyCheckFn","getQueriesFn","add","now","Date","dispatch","type","cleanUp","queries","_getQueries","timestamp","_shouldInit","init","_cleanUp","initSuccess","_shouldReset","reset","resetSuccess","pending","ready","searchProvidersReady","searchFn","constructor","has","set","match","ignoreCache","all","keys","map","_matchSource","provider","get","promise","delete","matchSuccess","matchError","error","queuedItems","promises","queue","matching","push","item","filteredQueries","filter","_t","_fetchMatchResult","values","every","status","dataMapping"],"mappings":"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","file":"index.js","sourcesContent":["import 'core-js/fn/array/every';\nimport RcModule from '../RcModule';\nimport { prefixEnum } from '../Enum';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport baseActionTypes from './baseActionTypes';\nimport getDefaultReducer from './getDefaultReducer';\nimport getDefaultDataReducer from './getDefaultDataReducer';\nimport proxify from '../../lib/proxy/proxify';\n\nexport function checkName(name) {\n  if (!name) {\n    throw new Error('DataMatcher: \"name\" is required.');\n  }\n  if (typeof name !== 'string') {\n    throw new Error('DataMatcher: \"name\" must be a string.');\n  }\n}\n\nconst DEFAULT_TTL = 30 * 1000;\nconst DEFAULT_NO_MATCH_TTL = 30 * 1000;\n\nexport default class DataMatcher extends RcModule {\n  constructor({\n    name,\n    storage,\n    ttl = DEFAULT_TTL,\n    noMatchTtl = DEFAULT_NO_MATCH_TTL,\n    actionTypes = prefixEnum({ base: baseActionTypes, prefix: name }),\n    storageKey = `${name}Data`,\n    getReducer = getDefaultReducer,\n    getDataReducer = getDefaultDataReducer,\n    ...options,\n  } = {}) {\n    checkName(name);\n    super({\n      ...options,\n      actionTypes,\n    });\n\n    this._querySources = new Map();\n    this._searchProviders = new Map();\n    this._matchPromises = new Map();\n    this._matchQueues = new Map();\n    this._storage = storage;\n    this._ttl = ttl;\n    this._noMatchTtl = noMatchTtl;\n\n    this._storageKey = storageKey;\n\n    if (this._storage) {\n      this._reducer = getReducer(this.actionTypes);\n      this._storage.registerReducer({\n        key: this._storageKey,\n        reducer: getDataReducer(this.actionTypes)\n      });\n    } else {\n      this._reducer = getReducer(this.actionTypes, {\n        data: getDataReducer(this.actionTypes),\n      });\n    }\n\n    this.addSelector('data',\n      () => (\n        this._storage ?\n          this._storage.getItem(this._storageKey) :\n          this.state.data\n      ),\n      data => (data || {}),\n    );\n\n    this.addSelector('dataMapping',\n      this._selectors.data,\n      (data) => {\n        const dataMap = {};\n        Object.keys(data).forEach((query) => {\n          const queryResult = data[query];\n          if (!queryResult) {\n            return;\n          }\n          let matchesList = [];\n          this._searchProviders.forEach((_providerValue, providerName) => {\n            if (queryResult[providerName] && queryResult[providerName].data.length > 0) {\n              matchesList = matchesList.concat(queryResult[providerName].data);\n            }\n          });\n          if (matchesList.length > 0) {\n            dataMap[query] = matchesList;\n          }\n        });\n        return dataMap;\n      }\n    );\n    this._lastCleanUp = 0;\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n  _getQueries() {\n    const output = new Set();\n    this._querySources.forEach((readyCheckFn, getQueriesFn) => {\n      if (readyCheckFn()) {\n        getQueriesFn().forEach((query) => {\n          output.add(query);\n        });\n      }\n    });\n    return [...output];\n  }\n  _cleanUp() {\n    // throttle clean up to only run once every 100ms\n    const now = Date.now();\n    if (now - this._lastCleanUp > 100) {\n      this._lastCleanUp = now;\n      this.store.dispatch({\n        type: this.actionTypes.cleanUp,\n        queries: this._getQueries(),\n        timestamp: Date.now(),\n        ttl: this._ttl,\n      });\n    }\n  }\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      this._cleanUp();\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.reset,\n      });\n      this._lastCleanUp = 0;\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n  }\n\n  _shouldInit() {\n    return !!(\n      this.pending &&\n      (!this._storage || this._storage.ready) &&\n      this.searchProvidersReady\n    );\n  }\n\n  _shouldReset() {\n    return !!(\n      this.ready &&\n      (\n        (!!this._storage && !this._storage.ready) ||\n        !this.searchProvidersReady\n      )\n    );\n  }\n\n  get searchProvidersReady() {\n    return [...this._searchProviders.values()]\n      .every(({ readyCheckFn }) => readyCheckFn());\n  }\n\n  addSearchProvider({ name, searchFn, readyCheckFn }) {\n    if (!name) {\n      throw new Error(\n        `${this.constructor.name}: \"name\" is required.`\n      );\n    }\n    if (this._searchProviders.has(name)) {\n      throw new Error(\n        `${this.constructor.name}: A provider named \"${name}\" already exists.`\n      );\n    }\n    if (typeof searchFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"searchFn\" must be a function.`\n      );\n    }\n    if (typeof readyCheckFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"readyCheckFn\" must be a function.`\n      );\n    }\n    this._searchProviders.set(name, {\n      searchFn,\n      readyCheckFn,\n    });\n  }\n\n  addQuerySource({ getQueriesFn, readyCheckFn }) {\n    if (typeof getQueriesFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"getQueriesFn\" must be a function.`\n      );\n    }\n    if (typeof readyCheckFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"readyCheckFn\" must be a function.`\n      );\n    }\n    if (this._querySources.has(getQueriesFn)) {\n      throw new Error(\n        `${this.constructor.name}: this getQueryFn has already been added.`\n      );\n    }\n    this._querySources.set(getQueriesFn, readyCheckFn);\n  }\n\n  @proxify\n  async triggerMatch() {\n    if (this.ready) {\n      this._cleanUp();\n      await this.match({\n        queries: this._getQueries(),\n      });\n    }\n  }\n\n  @proxify\n  async match({\n    queries,\n    ignoreCache = false\n  }) {\n    await Promise.all([...this._searchProviders.keys()]\n      .map(name => (\n        this._matchSource({\n          name,\n          queries,\n          ignoreCache,\n        })\n      )));\n  }\n\n  async _fetchMatchResult({\n    name,\n    queries,\n  }) {\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.match,\n        queries,\n        name,\n      });\n      const provider = this._searchProviders.get(name);\n      if (!provider) {\n        throw new Error(\n          `${this.constructor.name}: provider named \"${name} does not exist`\n        );\n      }\n      const promise = provider\n        .searchFn({\n          queries,\n        });\n      this._matchPromises.set(name, {\n        promise,\n        queries,\n      });\n      const data = await promise;\n      this._matchPromises.delete(name);\n\n      this.store.dispatch({\n        type: this.actionTypes.matchSuccess,\n        name,\n        queries,\n        data,\n        timestamp: Date.now(),\n      });\n    } catch (error) {\n      this._matchPromises.delete(name);\n      this.store.dispatch({\n        type: this.actionTypes.matchError,\n        name,\n        queries,\n        error,\n        timestamp: Date.now(),\n      });\n      throw error;\n    }\n  }\n\n  @proxify\n  async _matchSource({\n    name,\n    queries,\n    ignoreCache\n  }) {\n    const now = Date.now();\n    const queuedItems = {};\n    const promises = [];\n    let queue;\n    let matching;\n    if (this._matchPromises.has(name)) {\n      matching = this._matchPromises.get(name);\n      promises.push(matching.promise);\n      matching.queries.forEach((item) => {\n        queuedItems[item] = true;\n      });\n    }\n\n    if (this._matchQueues.has(name)) {\n      queue = this._matchQueues.get(name);\n      promises.push(queue.promise);\n      queue.queries.forEach((item) => {\n        queuedItems[item] = true;\n      });\n    }\n    const data = this.data;\n    const filteredQueries = ignoreCache ?\n      queries :\n      queries.filter(query => (\n        !queuedItems[query] &&\n        (\n          !data[query] ||\n          !data[query][name] ||\n          now - data[query][name]._t > this._noMatchTtl\n        )\n      ));\n\n    if (filteredQueries.length) {\n      if (!matching) {\n        matching = this._fetchMatchResult({\n          name,\n          queries: filteredQueries,\n        });\n        promises.push(matching);\n      } else if (!queue) {\n        queue = {\n          queries: filteredQueries,\n        };\n        queue.promise = (async () => {\n          await matching.promise;\n          const promise = this._fetchMatchResult({\n            name,\n            queries: queue.queries,\n          });\n          this._matchQueues.delete(name);\n          await promise;\n        })();\n        this._matchQueues.set(name, queue);\n        promises.push(queue.promise);\n      } else {\n        queue.queries = queue.queries.concat(filteredQueries);\n      }\n    }\n    await Promise.all(promises);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get data() {\n    return this._selectors.data();\n  }\n\n  get dataMapping() {\n    return this._selectors.dataMapping();\n  }\n}\n"]}