{"version":3,"sources":["lib/DataMatcher/getMatcherReducer.js"],"names":["getMatchingReducer","getMatcherReducer","actionTypes","state","type","sourceName","queries","deleteKeys","match","concat","map","query","matchSuccess","matchError","filter","indexOf","key","resetSuccess","reducers","status","matching"],"mappings":";;;;;;;;;;QAIgBA,kB,GAAAA,kB;kBAoBQC,iB;;AAxBxB;;AACA;;;;AACA;;;;AAEO,SAASD,kBAAT,CAA4BE,WAA5B,EAAyC;AAC9C,SAAO,YAA+C;AAAA,QAA9CC,KAA8C,uEAAtC,EAAsC;AAAA;AAAA,QAAhCC,IAAgC,QAAhCA,IAAgC;AAAA,QAA1BC,UAA0B,QAA1BA,UAA0B;AAAA,QAAdC,OAAc,QAAdA,OAAc;;AACpD,QAAIC,mBAAJ;AACA,YAAQH,IAAR;AACE,WAAKF,YAAYM,KAAjB;AACE,eAAOL,MAAMM,MAAN,CAAaH,QAAQI,GAAR,CAAY;AAAA,iBAAS,0BAAYL,UAAZ,EAAwBM,KAAxB,CAAT;AAAA,SAAZ,CAAb,CAAP;;AAEF,WAAKT,YAAYU,YAAjB;AACA,WAAKV,YAAYW,UAAjB;AACEN,qBAAaD,QAAQI,GAAR,CAAY;AAAA,iBAAS,0BAAYL,UAAZ,EAAwBM,KAAxB,CAAT;AAAA,SAAZ,CAAb;AACA,eAAOR,MAAMW,MAAN,CAAa;AAAA,iBAAOP,WAAWQ,OAAX,CAAmBC,GAAnB,MAA4B,CAAC,CAApC;AAAA,SAAb,CAAP;;AAEF,WAAKd,YAAYe,YAAjB;AACE,eAAO,EAAP;AACF;AACE,eAAOd,KAAP;AAZJ;AAcD,GAhBD;AAiBD;;AAEc,SAASF,iBAAT,CAA2BC,WAA3B,EAAuD;AAAA,MAAfgB,QAAe,uEAAJ,EAAI;;AACpE,SAAO,uDACFA,QADE;AAELC,YAAQ,sCAAuBjB,WAAvB,CAFH;AAGLkB,cAAUpB,mBAAmBE,WAAnB;AAHL,KAAP;AAKD","file":"getMatcherReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../getModuleStatusReducer';\nimport { getCacheKey } from './helpers';\n\nexport function getMatchingReducer(actionTypes) {\n  return (state = [], { type, sourceName, queries }) => {\n    let deleteKeys;\n    switch (type) {\n      case actionTypes.match:\n        return state.concat(queries.map(query => getCacheKey(sourceName, query)));\n\n      case actionTypes.matchSuccess:\n      case actionTypes.matchError:\n        deleteKeys = queries.map(query => getCacheKey(sourceName, query));\n        return state.filter(key => deleteKeys.indexOf(key) === -1);\n\n      case actionTypes.resetSuccess:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getMatcherReducer(actionTypes, reducers = {}) {\n  return combineReducers({\n    ...reducers,\n    status: getModuleStatusReducer(actionTypes),\n    matching: getMatchingReducer(actionTypes),\n  });\n}\n"]}