{"version":3,"sources":["lib/formatNumber/index.js"],"names":["formatNumber","SWITCH_US_CA","US","CA","phoneNumber","removeExtension","countryCode","areaCode","hasPlus","number","extension","isServiceNumber","length","formattedNumber","numberWithAreaCode","switchedFormat"],"mappings":";;;;;kBAiBwBA,Y;;AAjBxB;;AACA;;;;;;AAEA,IAAMC,eAAe;AACnBC,MAAI,IADe;AAEnBC,MAAI;AAFe,CAArB;;AAKA;;;;;;;;;AASe,SAASH,YAAT,OAKZ;AAAA,MAJDI,WAIC,QAJDA,WAIC;AAAA,kCAHDC,eAGC;AAAA,MAHDA,eAGC,wCAHiB,KAGjB;AAAA,8BAFDC,WAEC;AAAA,MAFDA,WAEC,oCAFa,IAEb;AAAA,2BADDC,QACC;AAAA,MADDA,QACC,iCADU,EACV;;AAAA,qBAMG,2BAAYH,WAAZ,CANH;AAAA,MAECI,OAFD,gBAECA,OAFD;AAAA,MAGCC,MAHD,gBAGCA,MAHD;AAAA,MAICC,SAJD,gBAICA,SAJD;AAAA,MAKCC,eALD,gBAKCA,eALD;;AAQD,MAAIA,eAAJ,EAAqB,aAAWF,MAAX;AACrB;AACA,MAAIA,WAAW,EAAX,IAAiBA,OAAOG,MAAP,IAAiB,CAAtC,EAAyC,OAAOH,MAAP;;AAEzC,MAAII,wBAAJ;AACA,MAAIP,gBAAgB,IAAhB,IAAwBA,gBAAgB,IAA5C,EAAkD;AAChD,QAAMQ,qBAAsB,CAACN,OAAD,IAAYC,OAAOG,MAAP,KAAkB,CAA9B,IAAmCL,aAAa,EAAjD,GACxBA,WAAWE,MADa,GAEzBA,MAFF;AAGAI,sBAAkB,8BAAYP,WAAZ,QAA4BE,UAAU,GAAV,GAAgB,EAA5C,IAAiDM,kBAAjD,CAAlB;AACA,QAAID,gBAAgB,CAAhB,MAAuB,GAAvB,IAA8BJ,OAAO,CAAP,MAAc,GAAhD,EAAqD;AACnD,UAAMM,iBAAiB,8BACrBd,aAAaK,WAAb,CADqB,QAEjBQ,kBAFiB,CAAvB;AAIA,UAAIC,eAAe,CAAf,MAAsB,GAA1B,EAA+BF,kBAAkBE,cAAlB;AAChC;AACF,GAZD,MAYO;AACLF,sBAAkB,8BAAYP,WAAZ,QAA4BE,UAAU,GAAV,GAAgB,EAA5C,IAAiDC,MAAjD,CAAlB;AACD;;AAED,SAAOC,aAAa,CAACL,eAAd,GACFQ,eADE,WACmBH,SADnB,GAELG,eAFF;AAGD","file":"index.js","sourcesContent":["import { formatLocal } from 'phoneformat.js';\nimport parseNumber from '../parseNumber';\n\nconst SWITCH_US_CA = {\n  US: 'CA',\n  CA: 'US',\n};\n\n/**\n * @function\n * @description Format phone numbers\n * @param {String} params.phoneNumber\n * @param {Boolean} params.removeExtension\n * @param {String} params.countryCode\n * @param {String} params.areaCode\n * @return {String}\n */\nexport default function formatNumber({\n  phoneNumber,\n  removeExtension = false,\n  countryCode = 'US',\n  areaCode = '',\n}) {\n  const {\n    hasPlus,\n    number,\n    extension,\n    isServiceNumber,\n  } = parseNumber(phoneNumber);\n\n  if (isServiceNumber) return `*${number}`;\n  // extension or special number\n  if (number === '' || number.length <= 5) return number;\n\n  let formattedNumber;\n  if (countryCode === 'CA' || countryCode === 'US') {\n    const numberWithAreaCode = (!hasPlus && number.length === 7 && areaCode !== '') ?\n      (areaCode + number) :\n      number;\n    formattedNumber = formatLocal(countryCode, `${hasPlus ? '+' : ''}${numberWithAreaCode}`);\n    if (formattedNumber[0] === '+' && number[0] === '1') {\n      const switchedFormat = formatLocal(\n        SWITCH_US_CA[countryCode],\n        `+${numberWithAreaCode}`\n      );\n      if (switchedFormat[0] !== '+') formattedNumber = switchedFormat;\n    }\n  } else {\n    formattedNumber = formatLocal(countryCode, `${hasPlus ? '+' : ''}${number}`);\n  }\n\n  return extension && !removeExtension ?\n    `${formattedNumber} * ${extension}` :\n    formattedNumber;\n}\n"]}