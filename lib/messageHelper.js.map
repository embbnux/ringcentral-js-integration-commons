{"version":3,"sources":["lib/messageHelper.js"],"names":["filterNumbers","messageIsDeleted","messaageIsTextMessage","messageIsAcceptable","getMyNumberFromMessage","uniqueRecipients","getRecipientNumbersFromMessage","getRecipients","numbers","filterNumber","filter","number","phoneNumber","extensionNumber","message","availability","type","myExtensionNumber","direction","from","myNumber","to","find","recipients","recipientMap","forEach","recipient","allRecipients","concat","length","push"],"mappings":"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","file":"messageHelper.js","sourcesContent":["export function filterNumbers(numbers, filterNumber) {\n  return numbers.filter((number) => {\n    if (filterNumber.phoneNumber) {\n      return filterNumber.phoneNumber !== number.phoneNumber;\n    }\n    return filterNumber.extensionNumber !== number.extensionNumber;\n  });\n}\n\nexport function messageIsDeleted(message) {\n  return message.availability === 'Deleted';\n}\n\nexport function messaageIsTextMessage(message) {\n  return (message.type !== 'Fax' && message.type !== 'VoiceMail');\n}\n\nexport function messageIsAcceptable(message) {\n  return messaageIsTextMessage(message) && (!messageIsDeleted(message));\n}\n\nexport function getMyNumberFromMessage({ message, myExtensionNumber }) {\n  if (!message) {\n    return null;\n  }\n  if (message.direction === 'Outbound') {\n    return message.from;\n  }\n  if (message.type === 'Pager') {\n    const myNumber = message.to.find(number => (\n      number.extensionNumber === myExtensionNumber\n    ));\n    if (myNumber) {\n      return myNumber;\n    }\n    return { extensionNumber: myExtensionNumber };\n  }\n  return message.to[0];\n}\n\nexport function uniqueRecipients(recipients) {\n  const recipientMap = {};\n  recipients.forEach((recipient) => {\n    recipientMap[JSON.stringify(recipient)] = recipient;\n  });\n  return Object.values(recipientMap);\n}\n\nexport function getRecipientNumbersFromMessage({ message, myNumber }) {\n  if (!message) {\n    return [];\n  }\n  if (message.type === 'SMS') {\n    if (message.direction === 'Outbound') {\n      return message.to;\n    }\n    return [message.from];\n  }\n  const allRecipients = [message.from].concat(message.to);\n  const recipients = filterNumbers(allRecipients, myNumber);\n  if (recipients.length === 0) {\n    recipients.push(myNumber);\n  }\n  return uniqueRecipients(recipients);\n}\n\nexport function getRecipients({ message, myExtensionNumber }) {\n  const myNumber = getMyNumberFromMessage({\n    message,\n    myExtensionNumber,\n  });\n  return getRecipientNumbersFromMessage({\n    message,\n    myNumber,\n  });\n}\n"]}