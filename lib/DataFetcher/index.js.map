{"version":3,"sources":["lib/DataFetcher/index.js"],"names":["DEFAULT_TTL","DEFAULT_RETRY","DataFetcher","auth","client","storage","subscription","tabManager","timeToRetry","ttl","polling","name","actionTypes","enumMap","prefix","getReducer","getDataReducer","getTimestampReducer","dataStorageKey","timestampStorageKey","fetchFunction","subscriptionFilters","subscriptionHandler","readyCheckFn","options","Error","_auth","_client","_storage","_subscription","_tabManager","_ttl","_timeToRetry","_polling","_fetchFunction","_subscriptionFilters","_subscriptionHandler","_readyCheckFn","_dataStorageKey","_timestampStorageKey","_reducer","registerReducer","key","reducer","timestamp","data","_promise","_lastMessage","store","subscribe","_onStateChange","_shouldInit","dispatch","type","init","_init","_isDataReady","initSuccess","_shouldReset","_clearTimeout","resetSuccess","_shouldSubscribe","_processSubscription","loggedIn","ready","pending","message","active","isFreshLogin","Date","now","status","initializing","_shouldFetch","fetchData","console","error","_startPolling","_retry","fetch","ownerId","fetchSuccess","fetchError","_fetchData","getItem","state"],"mappings":"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","file":"index.js","sourcesContent":["import Pollable from '../Pollable';\nimport { prefixEnum } from '../Enum';\nimport getDataFetcherReducer, {\n  getDefaultDataReducer,\n  getDefaultTimestampReducer,\n} from './getDataFetcherReducer';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport baseActionTypes from './baseActionTypes';\nimport proxify from '../proxy/proxify';\nimport ensureExist from '../ensureExist';\n\nconst DEFAULT_TTL = 30 * 60 * 1000;\nconst DEFAULT_RETRY = 62 * 1000;\n\nexport default class DataFetcher extends Pollable {\n  constructor({\n    auth,\n    client,\n    storage,\n    subscription,\n    tabManager,\n    timeToRetry = DEFAULT_RETRY,\n    ttl = DEFAULT_TTL,\n    polling = false,\n    name,\n    actionTypes = prefixEnum({ enumMap: baseActionTypes, prefix: name }),\n    getReducer = getDataFetcherReducer,\n    getDataReducer = getDefaultDataReducer,\n    getTimestampReducer = getDefaultTimestampReducer,\n    dataStorageKey = `${name}Data`,\n    timestampStorageKey = `${name}Timestamp`,\n    fetchFunction,\n    subscriptionFilters,\n    subscriptionHandler,\n    readyCheckFn,\n    ...options\n  }) {\n    if (!name) {\n      throw new Error('name must be defined');\n    }\n    if (typeof fetchFunction !== 'function') {\n      throw new Error('fetchFunction must be a asynchronous function');\n    }\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._auth = this::ensureExist(auth, 'auth');\n    this._client = this::ensureExist(client, 'client');\n    this._storage = storage;\n    this._subscription = subscription;\n    this._tabManager = tabManager;\n    this._ttl = ttl;\n    this._timeToRetry = timeToRetry;\n    this._polling = polling;\n    this._fetchFunction = fetchFunction;\n    this._subscriptionFilters = subscriptionFilters;\n    this._subscriptionHandler = subscriptionHandler;\n    this._readyCheckFn = readyCheckFn;\n\n    this._dataStorageKey = dataStorageKey;\n    this._timestampStorageKey = timestampStorageKey;\n\n    if (this._storage) {\n      this._reducer = getReducer(this.actionTypes);\n\n      this._storage.registerReducer({\n        key: this._dataStorageKey,\n        reducer: getDataReducer(this.actionTypes),\n      });\n      this._storage.registerReducer({\n        key: this._timestampStorageKey,\n        reducer: getTimestampReducer(this.actionTypes),\n      });\n    } else {\n      this._reducer = getReducer(this.actionTypes, {\n        timestamp: getTimestampReducer(this.actionTypes),\n        data: getDataReducer(this.actionTypes),\n      });\n    }\n\n    this._promise = null;\n    this._lastMessage = null;\n  }\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      await this._init();\n    } else if (this._isDataReady()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this._clearTimeout();\n      this._promise = null;\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    } else if (this._shouldSubscribe()) {\n      this._processSubscription();\n    }\n  }\n  _shouldInit() {\n    return !!(\n      this._auth.loggedIn &&\n      (!this._storage || this._storage.ready) &&\n      (!this._readyCheckFn || this._readyCheckFn()) &&\n      (!this._subscription || this._subscription.ready) &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this.pending\n    );\n  }\n  _shouldReset() {\n    return !!(\n      (\n        !this._auth.loggedIn ||\n        (this._storage && !this._storage.ready) ||\n        (this._readyCheckFn && !this._readyCheckFn()) ||\n        (this._subscription && !this._subscription.ready) ||\n        (this._tabManager && !this._tabManager.ready)\n      ) &&\n      this.ready\n    );\n  }\n  _shouldSubscribe() {\n    return !!(\n      this.ready &&\n      this._subscription &&\n      this._subscription.ready &&\n      this._subscriptionHandler &&\n      this._subscription.message &&\n      this._subscription.message !== this._lastMessage\n    );\n  }\n  _shouldFetch() {\n    return (\n      (!this._tabManager || this._tabManager.active) &&\n      (\n        this._auth.isFreshLogin ||\n        !this.timestamp ||\n        Date.now() - this.timestamp > this.ttl\n      )\n    );\n  }\n  _isDataReady() {\n    // only turns ready when data has been fetched\n    // (could be from other tabs)\n    return this.status === moduleStatuses.initializing &&\n      this.data !== null;\n  }\n  async _init() {\n    if (this._shouldFetch()) {\n      try {\n        await this.fetchData();\n      } catch (e) {\n        console.error('fetchData error:', e);\n      }\n    } else if (this._polling) {\n      this._startPolling();\n    } else {\n      this._retry();\n    }\n    if (this._subscription && this._subscriptionFilters) {\n      this._subscription.subscribe(this._subscriptionFilters);\n    }\n  }\n  _processSubscription() {\n    this._lastMessage = this._subscription.message;\n    this._subscriptionHandler(this._lastMessage);\n  }\n  get data() {\n    return this._storage ?\n      this._storage.getItem(this._dataStorageKey) :\n      this.state.data;\n  }\n\n  get timestamp() {\n    return this._storage ?\n      this._storage.getItem(this._timestampStorageKey) :\n      this.state.timestamp;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get ttl() {\n    return this._ttl;\n  }\n\n  get timeToRetry() {\n    return this._timeToRetry;\n  }\n\n  @proxify\n  async _fetchData() {\n    this.store.dispatch({\n      type: this.actionTypes.fetch,\n    });\n    const ownerId = this._auth.ownerId;\n    try {\n      const data = await this._fetchFunction();\n      if (this._auth.ownerId === ownerId) {\n        this.store.dispatch({\n          type: this.actionTypes.fetchSuccess,\n          data,\n          timestamp: Date.now(),\n        });\n        if (this._polling) {\n          this._startPolling();\n        }\n        this._promise = null;\n      }\n    } catch (error) {\n      if (this._auth.ownerId === ownerId) {\n        this._promise = null;\n        this.store.dispatch({\n          type: this.actionTypes.fetchError,\n          error,\n        });\n        if (this._polling) {\n          this._startPolling(this.timeToRetry);\n        } else {\n          this._retry();\n        }\n        throw error;\n      }\n    }\n  }\n  @proxify\n  async fetchData() {\n    if (!this._promise) {\n      this._promise = this._fetchData();\n    }\n    return this._promise;\n  }\n}\n"]}