{"version":3,"sources":["lib/Analytics/segment.js"],"names":["init","analytics","window","initialize","console","log","invoked","error","methods","factory","method","pushMethod","args","unshift","push","forEach","load","key","document","undefined","script","createElement","type","async","src","first","getElementsByTagName","parentNode","insertBefore","SNIPPET_VERSION"],"mappings":";;;;;kBAAwBA,I;AAAT,SAASA,IAAT,GAAgB;AAC7B,MAAIC,YAAY,EAAhB;AACA,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCD,gBAAYC,OAAOD,SAAP,GAAmBC,OAAOD,SAAP,IAAoB,EAAnD;AACA,QAAIA,UAAUE,UAAd,EAA0B;AACxB,UAAID,OAAOE,OAAP,IAAkBA,QAAQC,GAA9B,EAAmC;AACjCD,gBAAQC,GAAR,CAAY,sBAAZ;AACD;AACF,KAJD,MAIO,IAAIJ,UAAUK,OAAd,EAAuB;AAC9B;AACE,UAAIJ,OAAOE,OAAP,IAAkBA,QAAQG,KAA9B,EAAqC;AACnCH,gBAAQG,KAAR,CAAc,iCAAd;AACD;AACF,KALM,MAKA;AACL;AACA;AACAN,gBAAUK,OAAV,GAAoB,IAApB;;AAEA;AACAL,gBAAUO,OAAV,GAAoB,CAClB,aADkB,EAElB,YAFkB,EAGlB,WAHkB,EAIlB,WAJkB,EAKlB,UALkB,EAMlB,UANkB,EAOlB,OAPkB,EAQlB,OARkB,EASlB,OATkB,EAUlB,OAVkB,EAWlB,OAXkB,EAYlB,OAZkB,EAalB,MAbkB,EAclB,MAdkB,EAelB,KAfkB,EAgBlB,IAhBkB,CAApB;;AAmBAP,gBAAUQ,OAAV,GAAoB,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AAC3C;AACA,eAAO,SAASC,UAAT,GAA6B;AAAA,4CAANC,IAAM;AAANA,gBAAM;AAAA;;AAClCA,eAAKC,OAAL,CAAaH,MAAb;AACAT,oBAAUa,IAAV,CAAeF,IAAf;AACA,iBAAOX,SAAP;AACD,SAJD;AAKD,OAPD;;AASAA,gBAAUO,OAAV,CAAkBO,OAAlB,CAA0B,UAACL,MAAD,EAAY;AACpCT,kBAAUS,MAAV,IAAoBT,UAAUQ,OAAV,CAAkBC,MAAlB,CAApB;AACD,OAFD;;AAIAT,gBAAUe,IAAV,GAAiB,SAASA,IAAT,CAAcC,GAAd,EAAmB;AAClC,YAAIC,aAAaC,SAAjB,EAA4B;AAC1B,cAAMC,SAASF,SAASG,aAAT,CAAuB,QAAvB,CAAf;AACAD,iBAAOE,IAAP,GAAc,iBAAd;AACAF,iBAAOG,KAAP,GAAe,IAAf;AACAH,iBAAOI,GAAP,gDAAwDP,GAAxD;AACA;AACA,cAAMQ,QAAQP,SAASQ,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAd;AACAD,gBAAME,UAAN,CAAiBC,YAAjB,CAA8BR,MAA9B,EAAsCK,KAAtC;AACD;AACF,OAVD;;AAYAxB,gBAAU4B,eAAV,GAA4B,OAA5B;AACD;AACF;AACD,SAAO5B,SAAP;AACD","file":"segment.js","sourcesContent":["export default function init() {\n  let analytics = [];\n  if (typeof window !== 'undefined') {\n    analytics = window.analytics = window.analytics || [];\n    if (analytics.initialize) {\n      if (window.console && console.log) {\n        console.log('Segment initialized!');\n      }\n    } else if (analytics.invoked) {\n    // If the snippet was invoked already show an error.\n      if (window.console && console.error) {\n        console.error('Segment snippet included twice.');\n      }\n    } else {\n      // Invoked flag, to make sure the snippet\n      // is never invoked twice.\n      analytics.invoked = true;\n\n      // A list of the methods in Analytics.js to stub.\n      analytics.methods = [\n        'trackSubmit',\n        'trackClick',\n        'trackLink',\n        'trackForm',\n        'pageview',\n        'identify',\n        'reset',\n        'group',\n        'track',\n        'ready',\n        'alias',\n        'debug',\n        'page',\n        'once',\n        'off',\n        'on'\n      ];\n\n      analytics.factory = function factory(method) {\n        // console.debug(method);\n        return function pushMethod(...args) {\n          args.unshift(method);\n          analytics.push(args);\n          return analytics;\n        };\n      };\n\n      analytics.methods.forEach((method) => {\n        analytics[method] = analytics.factory(method);\n      });\n\n      analytics.load = function load(key) {\n        if (document !== undefined) {\n          const script = document.createElement('script');\n          script.type = 'text/javascript';\n          script.async = true;\n          script.src = `https://cdn.segment.com/analytics.js/v1/${key}/analytics.min.js`;\n          // Insert our script next to the first script element.\n          const first = document.getElementsByTagName('meta')[0];\n          first.parentNode.insertBefore(script, first);\n        }\n      };\n\n      analytics.SNIPPET_VERSION = '4.0.0';\n    }\n  }\n  return analytics;\n}\n"]}