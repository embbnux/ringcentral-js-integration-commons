{"version":3,"sources":["lib/normalizeNumber/index.js"],"names":["normalizeNumber","phoneNumber","removeExtension","countryCode","areaCode","hasPlus","number","extension","isServiceNumber","length","normalizedNumber"],"mappings":";;;;;kBAYwBA,e;;AAZxB;;AACA;;;;;;AAEA;;;;;;;;;AASe,SAASA,eAAT,OAKZ;AAAA,MAJDC,WAIC,QAJDA,WAIC;AAAA,kCAHDC,eAGC;AAAA,MAHDA,eAGC,wCAHiB,KAGjB;AAAA,8BAFDC,WAEC;AAAA,MAFDA,WAEC,oCAFa,IAEb;AAAA,2BADDC,QACC;AAAA,MADDA,QACC,iCADU,EACV;;AAAA,qBAMG,2BAAYH,WAAZ,CANH;AAAA,MAECI,OAFD,gBAECA,OAFD;AAAA,MAGCC,MAHD,gBAGCA,MAHD;AAAA,MAICC,SAJD,gBAICA,SAJD;AAAA,MAKCC,eALD,gBAKCA,eALD;;AAQD;;;AACA,MAAIA,eAAJ,EAAqB,aAAWF,MAAX;AACrB;AACA,MAAIA,WAAW,EAAX,IAAiBA,OAAOG,MAAP,IAAiB,CAAtC,EAAyC,OAAOH,MAAP;;AAEzC,MAAII,yBAAJ;AACA,MACE,CAACL,OAAD,IACAC,OAAOG,MAAP,KAAkB,CADlB,KAECN,gBAAgB,IAAhB,IAAwBA,gBAAgB,IAFzC,KAGAC,aAAa,EAJf,EAKE;AACAM,uBAAmB,6BAAWP,WAAX,QAA2BC,WAAWE,MAAtC,EAAnB;AACD,GAPD,MAOO;AACLI,uBAAmB,6BAAWP,WAAX,QAA2BE,UAAU,GAAV,GAAgB,EAA3C,IAAgDC,MAAhD,CAAnB;AACD;;AAED,SAAOC,aAAa,CAACL,eAAd,GACFQ,gBADE,SACkBH,SADlB,GAELG,gBAFF;AAGD","file":"index.js","sourcesContent":["import { formatE164 } from 'phoneformat.js';\nimport parseNumber from '../parseNumber';\n\n/**\n * @function\n * @description Normalize phone numbers into E164 format\n * @param {String} params.phoneNumber\n * @param {Boolean} params.removeExtension\n * @param {String} params.countryCode\n * @param {String} params.areaCode\n * @return {String}\n */\nexport default function normalizeNumber({\n  phoneNumber,\n  removeExtension = false,\n  countryCode = 'US',\n  areaCode = '',\n}) {\n  const {\n    hasPlus,\n    number,\n    extension,\n    isServiceNumber,\n  } = parseNumber(phoneNumber);\n\n  // service number\n  if (isServiceNumber) return `*${number}`;\n  // extension or special number or empty string\n  if (number === '' || number.length <= 6) return number;\n\n  let normalizedNumber;\n  if (\n    !hasPlus &&\n    number.length === 7 &&\n    (countryCode === 'CA' || countryCode === 'US') &&\n    areaCode !== ''\n  ) {\n    normalizedNumber = formatE164(countryCode, `${areaCode + number}`);\n  } else {\n    normalizedNumber = formatE164(countryCode, `${hasPlus ? '+' : ''}${number}`);\n  }\n\n  return extension && !removeExtension ?\n    `${normalizedNumber}*${extension}` :\n    normalizedNumber;\n}\n"]}