{"version":3,"sources":["lib/callLogHelpers.js"],"names":["isInbound","isOutbound","isRinging","isMissed","hasRingingCalls","isEnded","hasEndedCalls","isOnHold","isIntermediateCall","isSelfCall","sortBySessionId","sortByStartTime","normalizeStartTime","normalizeFromTo","areTwoLegs","removeInboundRingOutLegs","removeDuplicateIntermediateCalls","removeDuplicateSelfCalls","call","direction","inbound","outbound","telephonyStatus","ringing","callResultsToMissedMap","fromSet","set","map","key","getValue","missed","hangUp","busy","voicemail","rejected","indexOf","result","calls","find","noCall","terminationType","final","onHold","intermediate","to","from","phoneNumber","a","b","sessionId","startTime","Date","getTime","Math","abs","action","phoneCall","ringOutWeb","ringOutPC","ringOutMobile","extensionNumber","output","outbounds","filter","forEach","outboundIndex","findIndex","splice","outboundLeg","inboundLeg","push","concat","resultCalls","indexMap","isIntermediate","sessionid","index","length","isSelf"],"mappings":"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","file":"callLogHelpers.js","sourcesContent":["import 'core-js/fn/array/find';\nimport {\n  isValidNumber,\n} from 'phoneformat.js';\nimport HashMap from './HashMap';\nimport callActions from '../enums/callActions';\nimport callDirections from '../enums/callDirections';\nimport callResults from '../enums/callResults';\nimport telephonyStatuses from '../enums/telephonyStatuses';\nimport terminationTypes from '../enums/terminationTypes';\nimport isSameLocalNumber from './isSameLocalNumber';\n\n/* call direction helpers */\nexport function isInbound(call = {}) {\n  return call.direction === callDirections.inbound;\n}\n\nexport function isOutbound(call = {}) {\n  return call.direction === callDirections.outbound;\n}\n\n/* status helpers */\nexport function isRinging(call = {}) {\n  return call.telephonyStatus === telephonyStatuses.ringing;\n}\n\nconst callResultsToMissedMap = HashMap.fromSet({\n  set: Object.keys(callResults).map(key => callResults[key]),\n  getValue: result => (\n    [\n      callResults.missed,\n      callResults.hangUp,\n      callResults.busy,\n      callResults.voicemail,\n      callResults.rejected,\n    ].indexOf(result) > -1\n  ),\n});\nexport function isMissed(call = {}) {\n  return !!callResultsToMissedMap[call.result];\n}\n\nexport function hasRingingCalls(calls = []) {\n  return !!calls.find(isRinging);\n}\n\nexport function isEnded(call = {}) {\n  return call.telephonyStatus === telephonyStatuses.noCall &&\n    call.terminationType === terminationTypes.final;\n}\n\nexport function hasEndedCalls(calls) {\n  return !!calls.find(isEnded);\n}\n\nexport function isOnHold(call = {}) {\n  return call.telephonyStatus === telephonyStatuses.onHold;\n}\n\nexport function isIntermediateCall(call = {}) {\n  return call.terminationType === terminationTypes.intermediate;\n}\n\nexport function isSelfCall(call = {}) {\n  if (call.to && call.from) {\n    return call.to.phoneNumber === call.from.phoneNumber;\n  }\n  return false;\n}\n\n/* sort functions */\n\nexport function sortBySessionId(a, b) {\n  if (a.sessionId === b.sessionId) return 0;\n  return a.sessionId > b.sessionId ?\n    1 :\n    -1;\n}\nexport function sortByStartTime(a, b) {\n  if (a.startTime === b.startTime) return 0;\n  return a.startTime > b.startTime ?\n    -1 :\n    1;\n}\n\nexport function normalizeStartTime(call) {\n  const result = {\n    ...call,\n  };\n  if (call.startTime) {\n    result.startTime = (new Date(call.startTime)).getTime();\n  }\n  return result;\n}\n\nexport function normalizeFromTo(call) {\n  return {\n    ...call,\n    from: typeof call.from === 'object' ?\n      call.from :\n      { phoneNumber: call.from },\n    to: typeof call.to === 'object' ?\n      call.to :\n      { phoneNumber: call.to },\n  };\n}\n\n/* ringout leg helpers */\nexport function areTwoLegs(inbound, outbound) {\n  if (isInbound(inbound) && isOutbound(outbound)) {\n    switch (Math.abs(inbound.sessionId - outbound.sessionId)) {\n      case 1000:\n      case 2000:\n      case 3000:\n      case 4000: {\n        // presence\n        if (\n          inbound.from && inbound.to &&\n          outbound.from && outbound.to &&\n          isSameLocalNumber(inbound.from.phoneNumber, outbound.to.phoneNumber) &&\n          isSameLocalNumber(inbound.to.phoneNumber, outbound.from.phoneNumber)\n        ) {\n          return true;\n        }\n        // call-log\n        if (\n          inbound.from && inbound.to &&\n          outbound.from && outbound.to &&\n          inbound.action === callActions.phoneCall &&\n          (\n            outbound.action === callActions.ringOutWeb ||\n            outbound.action === callActions.ringOutPC ||\n            outbound.action === callActions.ringOutMobile\n          ) &&\n          (\n            inbound.from.phoneNumber === outbound.from.phoneNumber ||\n            inbound.from.extensionNumber === outbound.from.extensionNumber\n          ) &&\n          inbound.to.phoneNumber === outbound.to.phoneNumber\n        ) {\n          return true;\n        }\n        break;\n      }\n      default:\n        return false;\n    }\n  }\n  return false;\n}\n\nexport function removeInboundRingOutLegs(calls) {\n  const output = [];\n  const outbounds = calls.filter(isOutbound);\n  calls.filter(isInbound).forEach((inbound) => {\n    const outboundIndex = outbounds.findIndex(call => areTwoLegs(inbound, call));\n    if (outboundIndex > -1) {\n      const outbound = outbounds.splice(outboundIndex, 1)[0];\n\n      if (inbound.action && outbound.action) {\n        // from call-log\n        const call = {\n          ...outbound,\n          outboundLeg: outbound,\n          inboundLeg: inbound,\n          from: {\n            ...inbound.to,\n          },\n          to: {\n            ...inbound.from,\n          },\n          result: inbound.result,\n        };\n        output.push(call);\n      } else {\n        const call = {\n          ...outbound,\n          outboundLeg: outbound,\n          inboundLeg: inbound,\n        };\n        // Handle inboundLeg.from is '+19072028624', but outboundLeg.to is '9072028624'\n        // https://jira.ringcentral.com/browse/RCINT-3127\n        if (\n          isValidNumber(inbound.from && inbound.from.phoneNumber) &&\n          isSameLocalNumber(inbound.from.phoneNumber, outbound.to && outbound.to.phoneNumber)\n        ) {\n          call.to = {\n            ...outbound.to,\n            phoneNumber: inbound.from.phoneNumber,\n          };\n          outbound.to.phoneNumber = inbound.from.phoneNumber;\n        }\n        if (isOnHold(inbound)) {\n          call.telephonyStatus = telephonyStatuses.onHold;\n        }\n        output.push(call);\n      }\n\n      // output.push(outbound);\n    } else {\n      output.push(inbound);\n    }\n  });\n  return output.concat(outbounds);\n}\n\n\nexport function removeDuplicateIntermediateCalls(calls) {\n  const resultCalls = [];\n  const indexMap = {};\n  calls.forEach((call) => {\n    const isIntermediate = isIntermediateCall(call);\n    if (!indexMap[call.sessionId]) {\n      indexMap[call.sessionid] = {\n        index: resultCalls.length,\n        isIntermediate,\n      };\n      resultCalls.push(call);\n    } else if (!isIntermediate) {\n      indexMap[call.sessionId].isIntermediate = false;\n      resultCalls[indexMap[call.sessionId].index] = call;\n    }\n  });\n  return resultCalls;\n}\n\n// there are two active calls with same sessionId when user call self.\nexport function removeDuplicateSelfCalls(calls) {\n  const resultCalls = [];\n  const indexMap = {};\n  calls.forEach((call) => {\n    const isSelf = isSelfCall(call);\n    if (!indexMap[call.sessionId]) {\n      indexMap[call.sessionid] = {\n        index: resultCalls.length,\n        isSelf,\n      };\n      resultCalls.push(call);\n    } else if (!isSelf) {\n      indexMap[call.sessionId].isSelf = false;\n      resultCalls[indexMap[call.sessionId].index] = call;\n    }\n  });\n  return resultCalls;\n}\n"]}