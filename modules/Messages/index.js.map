{"version":3,"sources":["modules/Messages/index.js"],"names":["Messages","messageStore","perPage","options","actionTypes","_messageStore","_perPage","_reducer","loadNextPageMessages","bind","updateSearchingString","updateSearchResults","store","subscribe","_onStateChange","_shouldInit","dispatch","type","init","_initMessages","initSuccess","_shouldReset","_resetModuleStatus","_shouldReload","_reloadMessages","ready","pending","messageStoreUpdatedAt","messagesTimestamp","messages","_getCurrnetPageMessages","updateMessageStoreUpdateAt","updatedAt","resetPage","_updateMessages","resetSuccess","page","currentPage","allMessages","bottomIndex","length","newMessages","slice","reverse","updateMessages","updateLastUpdatedAt","Date","now","maxIndex","topIndex","pushMessages","nextPage","searchingString","searchResults","state","status","lastUpdatedAt","searchingResults"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport moduleStatus from '../../enums/moduleStatus';\n\nimport messagesActionTypes from './messagesActionTypes';\nimport getMessagesReducer from './getMessagesReducer';\n\nexport default class Messages extends RcModule {\n  constructor({\n    messageStore,\n    perPage = 10,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: messagesActionTypes,\n    });\n    this._messageStore = messageStore;\n    this._perPage = perPage;\n    this._reducer = getMessagesReducer(this.actionTypes);\n    this.loadNextPageMessages = this.loadNextPageMessages.bind(this);\n    this.updateSearchingString = this.updateSearchingString.bind(this);\n    this.updateSearchResults = this.updateSearchResults.bind(this);\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      this._initMessages();\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this._resetModuleStatus();\n    } else if (this._shouldReload()) {\n      this._reloadMessages();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._messageStore.ready &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (!this._messageStore.ready) &&\n      this.ready\n    );\n  }\n\n  _shouldReload() {\n    return (\n      this.ready &&\n      this.messageStoreUpdatedAt !== this._messageStore.messagesTimestamp\n    );\n  }\n\n  _initMessages() {\n    const messages = this._getCurrnetPageMessages(1);\n    this.store.dispatch({\n      type: this.actionTypes.updateMessageStoreUpdateAt,\n      updatedAt: this._messageStore.messagesTimestamp,\n    });\n    this.store.dispatch({\n      type: this.actionTypes.resetPage,\n    });\n    this._updateMessages(messages);\n  }\n\n  _resetModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  _reloadMessages() {\n    this.store.dispatch({\n      type: this.actionTypes.updateMessageStoreUpdateAt,\n      updatedAt: this._messageStore.messagesTimestamp,\n    });\n    const page = this.currentPage;\n    const allMessages = this._messageStore.messages;\n    let bottomIndex = allMessages.length - (this._perPage * page);\n    if (bottomIndex < 0) {\n      bottomIndex = 0;\n    }\n    const newMessages = allMessages.slice(bottomIndex, allMessages.length).reverse();\n    this._updateMessages(newMessages);\n  }\n\n  _updateMessages(messages) {\n    this.store.dispatch({\n      type: this.actionTypes.updateMessages,\n      messages,\n    });\n    this.store.dispatch({\n      type: this.actionTypes.updateLastUpdatedAt,\n      updatedAt: Date.now(),\n    });\n  }\n\n  _getCurrnetPageMessages(page) {\n    const allMessages = this._messageStore.messages;\n    const maxIndex = allMessages.length - 1;\n    if (maxIndex < 0) {\n      return [];\n    }\n    if (page < 1) {\n      page = 1;\n    }\n    const topIndex = maxIndex - (this._perPage * (page - 1));\n    if (topIndex < 0) {\n      return [];\n    }\n    let bottomIndex = (topIndex - this._perPage) + 1;\n    if (bottomIndex < 0) {\n      bottomIndex = 0;\n    }\n    return allMessages.slice(bottomIndex, topIndex + 1).reverse();\n  }\n\n  loadNextPageMessages() {\n    const page = this.currentPage + 1;\n    const messages = this._getCurrnetPageMessages(page);\n    if (messages.length === 0) {\n      return;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.pushMessages,\n      messages,\n    });\n    this.store.dispatch({\n      type: this.actionTypes.nextPage,\n    });\n    this.store.dispatch({\n      type: this.actionTypes.updateLastUpdatedAt,\n      updatedAt: Date.now(),\n    });\n  }\n\n  updateSearchingString(searchingString) {\n    this.store.dispatch({\n      type: this.actionTypes.updateSearchingString,\n      searchingString,\n    });\n  }\n\n  updateSearchResults(searchResults) {\n    this.store.dispatch({\n      type: this.actionTypes.updateSearchResults,\n      searchResults,\n    });\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.status === moduleStatus.ready;\n  }\n\n  get pending() {\n    return this.status === moduleStatus.pending;\n  }\n\n  get messages() {\n    return this.state.messages;\n  }\n\n  get currentPage() {\n    return this.state.currentPage;\n  }\n\n  get loading() {\n    const allMessages = this._messageStore.messages;\n    return this.messages.length < allMessages.length;\n  }\n\n  get lastUpdatedAt() {\n    return this.state.lastUpdatedAt;\n  }\n\n  get messageStoreUpdatedAt() {\n    return this.state.messageStoreUpdatedAt;\n  }\n\n  get searchingString() {\n    return this.state.searchingString;\n  }\n\n  get searchingResults() {\n    return this.state.searchingResults;\n  }\n}\n"]}