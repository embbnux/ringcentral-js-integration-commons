{"version":3,"sources":["modules/Messages/getMessagesReducer.js"],"names":["getCurrentMessagesReducer","getCurrentPageReducer","getLastUpdatedAtReducer","getMessageStoreUpdatedAt","getSearingStringReducer","getSearchingResultsReducer","getMessagesReducer","types","state","type","messages","updateMessages","pushMessages","concat","nextPage","resetPage","Date","now","messagesTimestamp","searchingString","updateSearchingString","cleanSearchingString","searchResults","updateSearchResults","status","currentPage","lastUpdatedAt","messageStoreUpdatedAt","searchingResults"],"mappings":"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","file":"getMessagesReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\n\nexport function getCurrentMessagesReducer(types) {\n  return (state = [], { type, messages }) => {\n    switch (type) {\n      case types.updateMessages:\n        return messages;\n      case types.pushMessages:\n        return state.concat(messages);\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getCurrentPageReducer(types) {\n  return (state = 1, { type }) => {\n    switch (type) {\n      case types.nextPage:\n        return state + 1;\n      case types.resetPage:\n        return 1;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getLastUpdatedAtReducer(types) {\n  return (state = null, { type }) => {\n    switch (type) {\n      case types.pushMessages:\n      case types.updateMessages:\n        return Date.now();\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getMessageStoreUpdatedAt(types) {\n  return (state = null, { type, messagesTimestamp }) => {\n    switch (type) {\n      case types.pushMessages:\n      case types.updateMessages:\n        return messagesTimestamp;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSearingStringReducer(types) {\n  return (state = '', { type, searchingString }) => {\n    switch (type) {\n      case types.updateSearchingString:\n        return searchingString;\n      case types.cleanSearchingString:\n        return '';\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSearchingResultsReducer(types) {\n  return (state = [], { type, searchResults }) => {\n    switch (type) {\n      case types.updateSearchResults:\n        return searchResults;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getMessagesReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    messages: getCurrentMessagesReducer(types),\n    currentPage: getCurrentPageReducer(types),\n    lastUpdatedAt: getLastUpdatedAtReducer(types),\n    messageStoreUpdatedAt: getMessageStoreUpdatedAt(types),\n    searchingString: getSearingStringReducer(types),\n    searchingResults: getSearchingResultsReducer(types),\n  });\n}\n"]}