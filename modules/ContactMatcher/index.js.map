{"version":3,"sources":["modules/ContactMatcher/index.js"],"names":["ContactMatcher","options","name","phoneNumber","ignoreCache","match","queries","dataMapping","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,c;;;AACnB,gCAEG;AAAA,QADEC,OACF;AAAA;AAAA;AAECC,YAAM;AAFP,OAGID,OAHJ;AAKF;;;;;;YAGsBE,W,SAAAA,W;sCAAaC,W;YAAAA,W,qCAAc,K;;;;;;uBAC1C,KAAKC,KAAL,CAAW;AACfC,2BAAS,CAACH,WAAD,CADM;AAEfC;AAFe,iBAAX,C;;;iDAIC,CAAC,CAAC,KAAKG,WAAL,CAAiBJ,WAAjB,CAAF,IAAmC,KAAKI,WAAL,CAAiBJ,WAAjB,EAA8BK,MAA9B,GAAuC,C;;;;;;;;;;;;;;;;;;;;YAI1DL,W,SAAAA,W;;;;;;uBACjB,KAAKE,KAAL,CAAW;AACfC,2BAAS,CAACH,WAAD,CADM;AAEfC,+BAAa;AAFE,iBAAX,C;;;;;;;;;;;;;;;;;;;kBArBWJ,c","file":"index.js","sourcesContent":["import DataMatcher from '../../lib/DataMatcher';\nimport proxify from '../../lib/proxy/proxify';\n\nexport default class ContactMatcher extends DataMatcher {\n  constructor({\n    ...options\n  }) {\n    super({\n      name: 'contactMatcher',\n      ...options\n    });\n  }\n\n  @proxify\n  async hasMatchNumber({ phoneNumber, ignoreCache = false }) {\n    await this.match({\n      queries: [phoneNumber],\n      ignoreCache\n    });\n    return !!this.dataMapping[phoneNumber] && this.dataMapping[phoneNumber].length > 0;\n  }\n\n  @proxify\n  async forceMatchNumber({ phoneNumber }) {\n    await this.match({\n      queries: [phoneNumber],\n      ignoreCache: true\n    });\n  }\n}\n"]}