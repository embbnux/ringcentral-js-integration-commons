{"version":3,"sources":["modules/AccountInfo/index.js"],"names":["DEFAULT_MASK","join","AccountInfo","client","options","name","fetchFunction","account","get","addSelector","data","_selectors","info","id","serviceInfo","brand","homeCountry","country","isoCode","mainNumber"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,eAAe,CACnB,sBADmB,EAEnB,8BAFmB,EAGnB,6CAHmB,wBAIC,CAClB,wBADkB,EAElB,iBAFkB,EAGlB,sBAHkB,EAIlB,8BAJkB,EAKlB,YALkB,EAMlBC,IANkB,CAMb,GANa,CAJD,QAWnBA,IAXmB,CAWd,GAXc,CAArB;;AAaA;;;;;IAIqBC,W;;;AACnB;;;;;AAKA,6BAGG;AAAA;;AAAA,QAFDC,MAEC,QAFDA,MAEC;AAAA,QADEC,OACF;AAAA;;AAAA;AAECC,YAAM,aAFP;AAGCF,oBAHD;AAICG;AAAA,+EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAuBH,OAAOI,OAAP,GAAiBC,GAAjB,EAAvB;;AAAA;AAAA;AAAA,gCAA+CR,YAA/C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;;AAAA;AAAA;AAAA;AAAA;AAJD,OAKII,OALJ;;AAOD,UAAKK,WAAL,CACE,MADF,EAEE;AAAA,aAAM,MAAKC,IAAX;AAAA,KAFF,EAGE;AAAA,aAAQA,QAAQ,EAAhB;AAAA,KAHF;AAPC;AAYF;;;;wBAEU;AACT,aAAO,KAAKC,UAAL,CAAgBC,IAAhB,EAAP;AACD;;;wBAEQ;AACP,aAAO,KAAKA,IAAL,CAAUC,EAAjB;AACD;;;wBAEa;AACZ,aAAO,KAAKD,IAAL,CAAUE,WAAV,IAAyB,KAAKF,IAAL,CAAUE,WAAV,CAAsBC,KAAtB,CAA4BC,WAA5D;AACD;;;wBAEiB;AAChB,aAAQ,KAAKC,OAAL,IAAgB,KAAKA,OAAL,CAAaC,OAA9B,IAA0C,IAAjD;AACD;;;wBAEuB;AACtB,aAAO,KAAKN,IAAL,CAAUO,UAAjB;AACD;;;;;kBAzCkBjB,W","file":"index.js","sourcesContent":["import mask from 'json-mask';\nimport DataFetcher from '../../lib/DataFetcher';\n\nconst DEFAULT_MASK = [\n  'id,mainNumber,status',\n  'operator(id,extensionNumber)',\n  'serviceInfo(brand(id,homeCountry(isoCode)))',\n  `regionalSettings(${[\n    'timezone(id,name,bias)',\n    'homeCountry(id)',\n    'language(localeCode)',\n    'formattingLocale(localeCode)',\n    'timeFormat',\n  ].join(',')})`,\n].join(',');\n\n/**\n * @class\n * @description Accound info managing module.\n */\nexport default class AccountInfo extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({\n    client,\n    ...options\n  }) {\n    super({\n      name: 'accountInfo',\n      client,\n      fetchFunction: async () => mask(await client.account().get(), DEFAULT_MASK),\n      ...options,\n    });\n    this.addSelector(\n      'info',\n      () => this.data,\n      data => data || {},\n    );\n  }\n\n  get info() {\n    return this._selectors.info();\n  }\n\n  get id() {\n    return this.info.id;\n  }\n\n  get country() {\n    return this.info.serviceInfo && this.info.serviceInfo.brand.homeCountry;\n  }\n\n  get countryCode() {\n    return (this.country && this.country.isoCode) || 'US';\n  }\n\n  get mainCompanyNumber() {\n    return this.info.mainNumber;\n  }\n}\n"]}