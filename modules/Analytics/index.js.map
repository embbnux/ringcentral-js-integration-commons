{"version":3,"sources":["modules/Analytics/index.js"],"names":["Analytics","auth","call","webphone","contacts","messageSender","adapter","router","analyticsKey","appName","appVersion","brandCode","options","actionTypes","_auth","_call","_webphone","_contacts","_messageSender","_adapter","_router","_analyticsKey","_appName","_appVersion","_brandCode","_reducer","_segment","load","page","store","subscribe","_onStateChange","userId","name","global","analytics","identify","event","properties","trackProps","brand","track","eventPostfix","ready","lastActions","forEach","action","key","length","dispatch","type","clear","loginSuccess","ownerId","logout","connect","callSettingMode","connectSuccess","registered","send","sendOver","createCallLog","createSMSLog","clickToDial","clickToSMS","viewEntity","createEntity","editCallLog","editSMSLog","locationChange","path","payload","pathname","target","_getTrackTarget","trackNavigation","routes","split","firstRoute","targets","find","undefined","state","lastAction"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport actionTypes from './actionTypes';\nimport getAnalyticsReducer from './getAnalyticsReducer';\n\nimport { Segment } from '../../lib/Analytics';\n\n\nexport default class Analytics extends RcModule {\n  constructor({\n    auth,\n    call,\n    webphone,\n    contacts,\n    messageSender,\n    adapter,\n    router,\n    analyticsKey,\n    appName,\n    appVersion,\n    brandCode,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes\n    });\n    this._auth = auth;\n    this._call = call;\n    this._webphone = webphone;\n    this._contacts = contacts;\n    this._messageSender = messageSender;\n    this._adapter = adapter;\n    this._router = router;\n    this._analyticsKey = analyticsKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._brandCode = brandCode;\n    this._reducer = getAnalyticsReducer(this.actionTypes);\n    this._segment = Segment();\n    this._segment.load(this._analyticsKey);\n    this._segment.page();\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  identify({\n    userId,\n    name,\n  }) {\n    global.analytics.identify(userId, {\n      name\n    });\n  }\n\n  track(event, {\n    ...properties\n  }) {\n    const trackProps = {\n      appName: this._appName,\n      appVersion: this._appVersion,\n      brand: this._brandCode,\n      ...properties,\n    };\n    global.analytics.track(event, trackProps);\n  }\n\n  trackNavigation({ router, eventPostfix }) {\n    const trackProps = {\n      router,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      brand: this._brandCode,\n    };\n    this.track(`Navigator Clicked (${eventPostfix})`, trackProps);\n  }\n\n  async _onStateChange() {\n    if (this.ready) {\n      this.lastActions.forEach((action) => {\n        [\n          '_authentication',\n          '_logout',\n          '_callAttempt',\n          '_callConnected',\n          '_webRTCRegistration',\n          '_smsAttempt',\n          '_smsSent',\n          '_logCall',\n          '_logSMS',\n          '_clickToDial',\n          '_clickToSMS',\n          '_viewEntity',\n          '_createEntity',\n          '_editCallLog',\n          '_editSMSLog',\n          '_navigate',\n        ].forEach((key) => {\n          this[key](action);\n        });\n      });\n      if (this.lastActions.length !== 0) {\n        this.store.dispatch({\n          type: this.actionTypes.clear,\n        });\n      }\n    }\n  }\n\n  _authentication(action) {\n    if (this._auth && this._auth.actionTypes.loginSuccess === action.type) {\n      this.identify({\n        userId: this._auth.ownerId,\n      });\n      this.track('Authentication');\n    }\n  }\n\n  _logout(action) {\n    if (this._auth && this._auth.actionTypes.logout === action.type) {\n      this.track('Logout');\n    }\n  }\n\n  _callAttempt(action) {\n    if (this._call && this._call.actionTypes.connect === action.type) {\n      this.track('Call Attempt', {\n        callSettingMode: action.callSettingMode\n      });\n    }\n  }\n\n  _callConnected(action) {\n    if (this._call && this._call.actionTypes.connectSuccess === action.type) {\n      this.track('Outbound Call Connected');\n    }\n  }\n\n  _webRTCRegistration(action) {\n    if (this._webphone && this._webphone.actionTypes.registered === action.type) {\n      this.track('WebRTC registration');\n    }\n  }\n\n  _smsAttempt(action) {\n    if (this._messageSender && this._messageSender.actionTypes.send === action.type) {\n      this.track('SMS Attempt');\n    }\n  }\n\n  _smsSent(action) {\n    if (this._messageSender && this._messageSender.actionTypes.sendOver === action.type) {\n      this.track('SMS Sent');\n    }\n  }\n\n  _logCall(action) {\n    if (this._adapter && this._adapter.actionTypes.createCallLog === action.type) {\n      this.track('Log Call');\n    }\n  }\n\n  _logSMS(action) {\n    if (this._adapter && this._adapter.actionTypes.createSMSLog === action.type) {\n      this.track('Log SMS');\n    }\n  }\n\n  _clickToDial(action) {\n    if (this._adapter && this._adapter.actionTypes.clickToDial === action.type) {\n      this.track('Click To Dial');\n    }\n  }\n\n  _clickToSMS(action) {\n    if (this._adapter && this._adapter.actionTypes.clickToSMS === action.type) {\n      this.track('Click To SMS');\n    }\n  }\n\n  _viewEntity(action) {\n    if (this._adapter && this._adapter.actionTypes.viewEntity === action.type) {\n      this.track('View Entity Details');\n    }\n  }\n\n  _createEntity(action) {\n    if (this._adapter && this._adapter.actionTypes.createEntity === action.type) {\n      this.track('Add Entity');\n    }\n  }\n\n  _editCallLog(action) {\n    if (this._adapter && this._adapter.actionTypes.editCallLog === action.type) {\n      this.track('Edit Call Log');\n    }\n  }\n\n  _editSMSLog(action) {\n    if (this._adapter && this._adapter.actionTypes.editSMSLog === action.type) {\n      this.track('Edit SMS Log');\n    }\n  }\n\n  _navigate(action) {\n    if (this._router && this._router.actionTypes.locationChange === action.type) {\n      const path = action.payload && action.payload.pathname;\n      const target = this._getTrackTarget(path);\n      if (target) {\n        this.trackNavigation({\n          ...target\n        });\n      }\n    }\n  }\n\n  _getTrackTarget(path) {\n    if (path) {\n      const routes = path.split('/');\n      const firstRoute = routes.length > 1 ? `/${routes[1]}` : '';\n\n      const targets = [{\n        eventPostfix: 'Dialer',\n        router: '/',\n      }, {\n        eventPostfix: 'Compose SMS',\n        router: '/composeText',\n      }, {\n        eventPostfix: 'Messages',\n        router: '/messages',\n      }, {\n        eventPostfix: 'Conversation',\n        router: '/conversations',\n      }, {\n        eventPostfix: 'Call History',\n        router: '/history',\n      }, {\n        eventPostfix: 'Settings',\n        router: '/settings',\n      }];\n      return targets.find(target => firstRoute === target.router);\n    }\n    return undefined;\n  }\n\n  get analytics() {\n    return global.analytics;\n  }\n\n  get lastActions() {\n    return this.state.lastAction;\n  }\n\n  get status() {\n    return moduleStatuses.ready;\n  }\n\n  get ready() {\n    return true;\n  }\n\n  get pending() {\n    return false;\n  }\n}\n"]}