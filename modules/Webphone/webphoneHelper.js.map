{"version":3,"sources":["modules/Webphone/webphoneHelper.js"],"names":["isSupportWebSocket","isBrowserSupport","isChromeBrowser","normalizeSession","isRing","isOnHold","window","WebSocket","WebRTC","isSupported","navigator","isChrome","userAgent","match","chromeVersion","parseInt","session","id","direction","callStatus","to","request","uri","user","toUserName","displayName","from","fromUserName","startTime","Date","getTime","creationTime","local","isOnMute","isOnFlip","isOnTransfer","isToVoicemail","isForwarded","isReplied","recordStatus","idle","contactMatch","minimized","inbound","connecting","onHold"],"mappings":";;;;;QAMgBA,kB,GAAAA,kB;QAOAC,gB,GAAAA,gB;QAIAC,e,GAAAA,e;QAgBAC,gB,GAAAA,gB;QAwBAC,M,GAAAA,M;QAQAC,Q,GAAAA,Q;;AAjEhB;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEO,SAASL,kBAAT,GAA8B;AACnC,MAAI,OAAOM,MAAP,KAAkB,WAAtB,EAAmC;AACjC,WAAO,KAAP;AACD;AACD,SAAO,CAAC,CAACA,OAAOC,SAAhB;AACD;AARD;AAUO,SAASN,gBAAT,GAA4B;AACjC,SAAO,cAAIO,MAAJ,CAAWC,WAAX,MAA4BT,oBAAnC;AACD;;AAEM,SAASE,eAAT,GAA2B;AAChC,MAAI,OAAOQ,SAAP,KAAqB,WAAzB,EAAsC;AACpC,WAAO,KAAP;AACD;AACD,MAAMC,WAAW,CAAC,CAAED,UAAUE,SAAV,CAAoBC,KAApB,CAA0B,cAA1B,CAApB;AACA,MAAI,CAACF,QAAL,EAAe;AACb,WAAO,KAAP;AACD;AACD,MAAMG,gBACJC,SAASL,UAAUE,SAAV,CAAoBC,KAApB,CAA0B,0BAA1B,EAAsD,CAAtD,CAAT,EAAmE,EAAnE,CADF;AAEA,MAAIC,iBAAiB,EAArB,EAAyB;AACvB,WAAO,IAAP;AACD;AACD,SAAO,KAAP;AACD;;AAEM,SAASX,gBAAT,CAA0Ba,OAA1B,EAAmC;AACxC,SAAO;AACLC,QAAID,QAAQC,EADP;AAELC,eAAWF,QAAQE,SAFd;AAGLC,gBAAYH,QAAQG,UAHf;AAILC,QAAIJ,QAAQK,OAAR,CAAgBD,EAAhB,CAAmBE,GAAnB,CAAuBC,IAJtB;AAKLC,gBAAYR,QAAQK,OAAR,CAAgBD,EAAhB,CAAmBK,WAL1B;AAMLC,UAAMV,QAAQK,OAAR,CAAgBK,IAAhB,CAAqBJ,GAArB,CAAyBC,IAN1B;AAOLI,kBAAcX,QAAQK,OAAR,CAAgBK,IAAhB,CAAqBD,WAP9B;AAQLG,eAAWZ,QAAQY,SAAR,IAAsB,IAAIC,IAAJ,CAASb,QAAQY,SAAjB,CAAD,CAA8BE,OAA9B,EAR3B;AASLC,kBAAcf,QAAQe,YATjB;AAUL1B,cAAU,CAAC,CAACW,QAAQX,QAAR,GAAmB2B,KAV1B;AAWLC,cAAU,CAAC,CAACjB,QAAQiB,QAXf;AAYLC,cAAU,CAAC,CAAClB,QAAQkB,QAZf;AAaLC,kBAAc,CAAC,CAACnB,QAAQmB,YAbnB;AAcLC,mBAAe,CAAC,CAACpB,QAAQoB,aAdpB;AAeLC,iBAAa,CAAC,CAACrB,QAAQqB,WAflB;AAgBLC,eAAW,CAAC,CAACtB,QAAQqB,WAhBhB;AAiBLE,kBAAcvB,QAAQuB,YAAR,IAAwB,uBAAaC,IAjB9C;AAkBLC,kBAAczB,QAAQyB,YAlBjB;AAmBLC,eAAW,CAAC,CAAC1B,QAAQ0B;AAnBhB,GAAP;AAqBD;;AAEM,SAAStC,MAAT,CAAgBY,OAAhB,EAAyB;AAC9B,SAAO,CAAC,EACNA,WACAA,QAAQE,SAAR,KAAsB,yBAAeyB,OADrC,IAEA3B,QAAQG,UAAR,KAAuB,wBAAcyB,UAH/B,CAAR;AAKD;;AAEM,SAASvC,QAAT,CAAkBW,OAAlB,EAA2B;AAChC,SAAO,CAAC,EAAEA,WAAWA,QAAQG,UAAR,KAAuB,wBAAc0B,MAAlD,CAAR;AACD","file":"webphoneHelper.js","sourcesContent":["import recordStatus from './recordStatus';\nimport sessionStatus from './sessionStatus';\nimport callDirections from '../../enums/callDirections';\n// eslint-disable-next-line\nimport SIP from 'sip.js';\n\nexport function isSupportWebSocket() {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n  return !!window.WebSocket;\n}\n\nexport function isBrowserSupport() {\n  return SIP.WebRTC.isSupported() && isSupportWebSocket();\n}\n\nexport function isChromeBrowser() {\n  if (typeof navigator === 'undefined') {\n    return false;\n  }\n  const isChrome = !!(navigator.userAgent.match(/Chrom(e|ium)/));\n  if (!isChrome) {\n    return false;\n  }\n  const chromeVersion =\n    parseInt(navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./)[2], 10);\n  if (chromeVersion >= 51) {\n    return true;\n  }\n  return false;\n}\n\nexport function normalizeSession(session) {\n  return {\n    id: session.id,\n    direction: session.direction,\n    callStatus: session.callStatus,\n    to: session.request.to.uri.user,\n    toUserName: session.request.to.displayName,\n    from: session.request.from.uri.user,\n    fromUserName: session.request.from.displayName,\n    startTime: session.startTime && (new Date(session.startTime)).getTime(),\n    creationTime: session.creationTime,\n    isOnHold: !!session.isOnHold().local,\n    isOnMute: !!session.isOnMute,\n    isOnFlip: !!session.isOnFlip,\n    isOnTransfer: !!session.isOnTransfer,\n    isToVoicemail: !!session.isToVoicemail,\n    isForwarded: !!session.isForwarded,\n    isReplied: !!session.isForwarded,\n    recordStatus: session.recordStatus || recordStatus.idle,\n    contactMatch: session.contactMatch,\n    minimized: !!session.minimized,\n  };\n}\n\nexport function isRing(session) {\n  return !!(\n    session &&\n    session.direction === callDirections.inbound &&\n    session.callStatus === sessionStatus.connecting\n  );\n}\n\nexport function isOnHold(session) {\n  return !!(session && session.callStatus === sessionStatus.onHold);\n}\n"]}