{"version":3,"sources":["modules/Webphone/index.js"],"names":["FIRST_THREE_RETRIES_DELAY","FOURTH_RETRIES_DELAY","FIFTH_RETRIES_DELAY","MAX_RETRIES_DELAY","Webphone","appKey","appName","appVersion","alert","auth","client","rolesAndPermissions","webphoneLogLevel","storage","globalStorage","contactMatcher","extensionDevice","numberValidate","onCallEnd","onCallRing","onCallStart","options","actionTypes","_appKey","_appName","_appVersion","_alert","_webphoneLogLevel","_auth","_client","_rolesAndPermissions","_extensionDevice","_storage","_globalStorage","_numberValidate","_userMediaStorageKey","_contactMatcher","_onCallEndFunc","_onCallRingFunc","_onCallStartFunc","_webphone","_remoteVideo","_localVideo","_sessions","_reducer","registerReducer","key","reducer","addSelector","sessions","outputs","forEach","session","push","to","from","ringSessionId","ringSession","find","id","activeSessionId","activeSession","filter","addQuerySource","getQueriesFn","_selectors","sessionPhoneNumbers","readyCheckFn","ready","_isFirstRegister","document","createElement","setAttribute","body","appendChild","store","dispatch","type","videoElementPrepared","window","readyState","addEventListener","_prepareVideoElement","_disconnect","subscribe","_onStateChange","userMedia","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","audio","stream","_onGetUserMediaSuccess","stop","getTracks","track","error","_onGetUserMediaError","_shouldInit","initSuccess","_shouldReset","resetSuccess","disconnect","loggedIn","service","platform","post","sipInfo","transport","response","json","account","extension","device","list","devices","records","phoneLines","length","concat","userAgent","unregister","removeAllListeners","provisionData","_removeWebphone","uuid","endpoingId","logLevel","audioHelper","enabled","incoming","outgoing","onRegistered","registered","info","message","connected","onUnregistered","unregistered","onRegistrationFailed","cause","errorCode","needToReconnect","console","status_code","webphoneCountOverLimit","warning","registrationFailed","_connect","setVolume","on","once","debug","_onInvite","reconnect","_retrySleep","connectionStatus","connecting","connectFailed","resetRetryCounts","connect","_sipProvision","sipProvision","disconnecting","_createWebphone","ttl","allowDuplicates","indexOf","refreshServiceFeatures","notWebphonePermission","connectError","disconnected","browserNotSupported","_fetchDL","notOutboundCallWithoutDL","log","checkDLError","hangup","_updateSessions","callStatus","_onCallStart","finished","_onCallEnd","newSession","replaced","direction","inbound","_addSession","_onAccepted","isOnMute","onMute","onHold","creationTime","Date","now","_onCallRing","sessionId","get","_holdOtherSession","accept","acceptOptions","_removeSession","reject","unhold","forwardNumber","validateNumbers","validatedResult","result","errors","payload","phoneNumber","validPhoneNumber","numbers","e164","isForwarded","forward","forwardError","_sessionHandleWithId","ua","volume","mute","muteError","unmute","hold","holdError","currentSessionId","isOnHold","local","recordStatus","pending","startRecord","recording","idle","code","danger","recordDisabled","recordError","stopRecord","park","transferNumber","isOnTransfer","transfer","transferError","invite","media","warmTransfer","flipValue","flip","isOnFlip","flipError","dtmfValue","dtmf","terminate","isToVoicemail","toVoicemail","toVoiceMailError","replyOptions","isReplied","replyWithMessage","func","toNumber","fromNumber","homeCountryId","outbound","contact","contactMatch","updateSessions","values","map","set","delete","minimized","normalizedSession","callStart","triggerMatch","callRing","playIncoming","callEnd","connectRetryCounts","getUserMediaSuccess","getUserMediaError","state","status","ringSessions","onHoldSessions","lastEndedSessions","webphoneEnabled","getItem","render","remote"],"mappings":"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","file":"index.js","sourcesContent":["import RingCentralWebphone from 'ringcentral-web-phone';\nimport incomingAudio from 'ringcentral-web-phone/audio/incoming.ogg';\nimport outgoingAudio from 'ringcentral-web-phone/audio/outgoing.ogg';\n\nimport RcModule from '../../lib/RcModule';\nimport sleep from '../../lib/sleep';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport connectionStatus from './connectionStatus';\nimport sessionStatus from './sessionStatus';\nimport recordStatus from './recordStatus';\nimport actionTypes from './actionTypes';\nimport callDirections from '../../enums/callDirections';\nimport webphoneErrors from './webphoneErrors';\nimport callErrors from '../Call/callErrors';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\nimport {\n  isBrowerSupport,\n  normalizeSession,\n  isRing,\n  isOnHold,\n} from './webphoneHelper';\nimport getWebphoneReducer, { getUserMediaReducer } from './getWebphoneReducer';\n\nconst FIRST_THREE_RETRIES_DELAY = 10 * 1000;\nconst FOURTH_RETRIES_DELAY = 30 * 1000;\nconst FIFTH_RETRIES_DELAY = 60 * 1000;\nconst MAX_RETRIES_DELAY = 2 * 60 * 1000;\n\n/**\n * Web phone module to handle phone interaction with WebRTC.\n * @param {appKey} appKey\n * @param {appName} appName\n * @param {appVersion} appVersion\n * @param {webphoneLogLevel} log Level\n * @param {alert} alert module instance\n * @param {auth} auth module instance\n * @param {client} client module instance\n * @param {rolesAndPermissions} rolesAndPermissions module instance\n * @param {storage} storage module instance\n * @param {globalStorage} globalStorage module instance\n * @param {extensionDevice} extensionDevice module instance\n * @param {numberValidate} numberValidate module instance\n * @param {contactMatcher} contactMatcher module instance, optional\n * @param {onCallEnd} callback on a call end\n * @param {onCallRing} callback on a call ring\n * @param {onCallStart} callback on a call start\n */\nexport default class Webphone extends RcModule {\n  constructor({\n    appKey,\n    appName,\n    appVersion,\n    alert,\n    auth,\n    client,\n    rolesAndPermissions,\n    webphoneLogLevel = 3,\n    storage,\n    globalStorage,\n    contactMatcher,\n    extensionDevice,\n    numberValidate,\n    onCallEnd,\n    onCallRing,\n    onCallStart,\n    ...options,\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._appKey = appKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._alert = alert;\n    this._webphoneLogLevel = webphoneLogLevel;\n    this._auth = this::ensureExist(auth, 'auth');\n    this._client = this::ensureExist(client, 'client');\n    this._rolesAndPermissions = this::ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n    this._extensionDevice = this::ensureExist(extensionDevice, 'extensionDevice');\n    this._storage = this::ensureExist(storage, 'storage');\n    this._globalStorage = this::ensureExist(globalStorage, 'globalStorage');\n    this._numberValidate = this::ensureExist(numberValidate, 'numberValidate');\n    this._userMediaStorageKey = 'userMadia';\n    this._contactMatcher = contactMatcher;\n    this._onCallEndFunc = onCallEnd;\n    this._onCallRingFunc = onCallRing;\n    this._onCallStartFunc = onCallStart;\n    this._webphone = null;\n    this._remoteVideo = null;\n    this._localVideo = null;\n\n    this._sessions = new Map();\n\n    this._reducer = getWebphoneReducer(this.actionTypes);\n\n    globalStorage.registerReducer({\n      key: this._userMediaStorageKey,\n      reducer: getUserMediaReducer(this.actionTypes),\n    });\n\n    this.addSelector('sessionPhoneNumbers',\n      () => this.sessions,\n      (sessions) => {\n        const outputs = [];\n        sessions.forEach((session) => {\n          outputs.push(session.to);\n          outputs.push(session.from);\n        });\n        return outputs;\n      }\n    );\n\n    this.addSelector('ringSession',\n      () => this.ringSessionId,\n      () => this.sessions,\n      (ringSessionId, sessions) => {\n        if (!ringSessionId) {\n          return null;\n        }\n        const ringSession = sessions.find(\n          session => session.id === ringSessionId\n        );\n        return ringSession;\n      }\n    );\n\n    this.addSelector('activeSession',\n      () => this.activeSessionId,\n      () => this.sessions,\n      (activeSessionId, sessions) => {\n        if (!activeSessionId) {\n          return null;\n        }\n        const activeSession = sessions.find(\n          session => session.id === activeSessionId\n        );\n        return activeSession;\n      }\n    );\n\n    this.addSelector('ringSessions',\n      () => this.sessions,\n      sessions => sessions.filter(session => isRing(session))\n    );\n\n    this.addSelector('onHoldSessions',\n      () => this.sessions,\n      sessions => sessions.filter(session => isOnHold(session))\n    );\n\n    if (this._contactMatcher) {\n      this._contactMatcher.addQuerySource({\n        getQueriesFn: this._selectors.sessionPhoneNumbers,\n        readyCheckFn: () => (\n          this.ready\n        ),\n      });\n    }\n\n    this._isFirstRegister = true;\n  }\n\n  _prepareVideoElement() {\n    this._remoteVideo = document.createElement('video');\n    this._remoteVideo.setAttribute('hidden', 'hidden');\n    this._localVideo = document.createElement('video');\n    this._localVideo.setAttribute('hidden', 'hidden');\n    this._localVideo.setAttribute('muted', 'muted');\n    document.body.appendChild(this._remoteVideo);\n    document.body.appendChild(this._localVideo);\n\n    this.store.dispatch({\n      type: this.actionTypes.videoElementPrepared,\n    });\n  }\n\n  initialize() {\n    if (\n      typeof window !== 'undefined' &&\n      typeof document !== 'undefined'\n    ) {\n      if (document.readyState === 'loading') {\n        window.addEventListener('load', () => {\n          this._prepareVideoElement();\n        });\n      } else {\n        this._prepareVideoElement();\n      }\n      window.addEventListener('unload', () => {\n        this._disconnect();\n      });\n    }\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  initializeProxy() {\n    if (\n      !this.userMedia\n    ) {\n      navigator.getUserMedia = navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia;\n      if (navigator.getUserMedia) {\n        navigator.getUserMedia({\n          audio: true,\n        }, (stream) => {\n          this._onGetUserMediaSuccess();\n          if (typeof stream.stop === 'function') {\n            stream.stop();\n          } else {\n            stream.getTracks().forEach((track) => {\n              track.stop();\n            });\n          }\n        }, (error) => {\n          this._onGetUserMediaError(error);\n        });\n      }\n    }\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n      this.disconnect();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      this._rolesAndPermissions.ready &&\n      this._extensionDevice.ready &&\n      this._storage.ready &&\n      this._globalStorage.ready &&\n      this._numberValidate.ready &&\n      !this.ready\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._auth.loggedIn ||\n        !this._rolesAndPermissions.ready ||\n        !this._storage.ready ||\n        !this._globalStorage.ready ||\n        !this._numberValidate.ready ||\n        !this._extensionDevice.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  @proxify\n  async _sipProvision() {\n    const response = await this._client.service.platform()\n      .post('/client-info/sip-provision', {\n        sipInfo: [{ transport: 'WSS' }]\n      });\n    return response.json();\n  }\n\n  async _fetchDL() {\n    const response = await this._client.account().extension().device().list();\n    const devices = response.records;\n    let phoneLines = [];\n    devices.forEach((device) => {\n      if (!device.phoneLines || device.phoneLines.length === 0) {\n        return;\n      }\n      phoneLines = phoneLines.concat(device.phoneLines);\n    });\n    return phoneLines;\n  }\n\n  _removeWebphone() {\n    if (!this._webphone || !this._webphone.userAgent) {\n      return;\n    }\n    this._webphone.userAgent.stop();\n    this._webphone.userAgent.unregister();\n    this._webphone.userAgent.removeAllListeners();\n    this._webphone = null;\n  }\n\n  _createWebphone(provisionData) {\n    this._removeWebphone();\n    this._webphone = new RingCentralWebphone(provisionData, {\n      appKey: this._appKey,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      uuid: this._auth.endpoingId,\n      logLevel: this._webphoneLogLevel, // error 0, warn 1, log: 2, debug: 3\n      audioHelper: {\n        enabled: true, // enables audio feedback when web phone is ringing or making a call\n        incoming: incomingAudio, // path to audio file for incoming call\n        outgoing: outgoingAudio, // path to aduotfile for outgoing call\n      }\n    });\n    this._isFirstRegister = true;\n    const onRegistered = () => {\n      if (this._isFirstRegister) {\n        this.store.dispatch({\n          type: this.actionTypes.registered,\n        });\n        this._alert.info({\n          message: webphoneErrors.connected,\n        });\n      }\n      this._isFirstRegister = false;\n    };\n    const onUnregistered = () => {\n      this._isFirstRegister = true;\n      this.store.dispatch({\n        type: this.actionTypes.unregistered,\n      });\n    };\n    const onRegistrationFailed = (response, cause) => {\n      this._isFirstRegister = true;\n      let errorCode;\n      let needToReconnect = false;\n      console.error(response);\n      console.error(`webphone register failed: ${cause}`);\n      if (response && response.status_code === 503) {\n        errorCode = webphoneErrors.webphoneCountOverLimit;\n        this._alert.warning({\n          message: errorCode,\n        });\n        needToReconnect = true;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.registrationFailed,\n        errorCode,\n      });\n      if (cause === 'Request Timeout') {\n        needToReconnect = true;\n      }\n      if (needToReconnect) {\n        this._removeWebphone();\n        this._connect(needToReconnect);\n      }\n    };\n    this._webphone.userAgent.audioHelper.setVolume(0.3);\n    this._webphone.userAgent.on('registered', onRegistered);\n    this._webphone.userAgent.on('unregistered', onUnregistered);\n    this._webphone.userAgent.once('registrationFailed', onRegistrationFailed);\n    this._webphone.userAgent.on('invite', (session) => {\n      console.debug('UA invite');\n      this._onInvite(session);\n    });\n  }\n\n  @proxify\n  async _connect(reconnect = false) {\n    try {\n      if (reconnect) {\n        await this._retrySleep();\n      }\n\n      if (!this._auth.loggedIn) {\n        return;\n      }\n\n      // do not connect if it is connecting\n      if (this.connectionStatus === connectionStatus.connecting) {\n        return;\n      }\n\n      // when reconnect is break by disconnect\n      if (reconnect && this.connectionStatus !== connectionStatus.connectFailed) {\n        this.store.dispatch({\n          type: this.actionTypes.resetRetryCounts,\n        });\n        return;\n      }\n\n      this.store.dispatch({\n        type: (\n          reconnect ?\n            this.actionTypes.reconnect : this.actionTypes.connect\n        )\n      });\n\n      const sipProvision = await this._sipProvision();\n\n      // do not continue if it is disconnecting\n      if (this.disconnecting) {\n        return;\n      }\n      this._createWebphone(sipProvision);\n    } catch (error) {\n      console.error(error);\n      this._alert.warning({\n        message: webphoneErrors.connectFailed,\n        ttl: 0,\n        allowDuplicates: false,\n      });\n      let needToReconnect = true;\n      let errorCode;\n      if (\n        error && error.message &&\n        (error.message.indexOf('Feature [WebPhone] is not available') > -1)\n      ) {\n        this._rolesAndPermissions.refreshServiceFeatures();\n        needToReconnect = false;\n        errorCode = webphoneErrors.notWebphonePermission;\n        return;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n        errorCode,\n        error,\n      });\n      if (needToReconnect) {\n        await this._connect(needToReconnect);\n      }\n    }\n  }\n\n  /**\n   * connect a web phone.\n   */\n  @proxify\n  async connect() {\n    if (\n      this._auth.loggedIn &&\n      this.enabled &&\n      this.connectionStatus === connectionStatus.disconnected\n    ) {\n      if (!isBrowerSupport()) {\n        this.store.dispatch({\n          type: this.actionTypes.connectError,\n          errorCode: webphoneErrors.browserNotSupported,\n        });\n        this._alert.warning({\n          message: webphoneErrors.browserNotSupported,\n          ttl: 0,\n        });\n        return;\n      }\n      try {\n        const phoneLines = await this._fetchDL();\n        if (phoneLines.length === 0) {\n          this.store.dispatch({\n            type: this.actionTypes.connectError,\n            errorCode: webphoneErrors.notOutboundCallWithoutDL,\n          });\n          this._alert.warning({\n            message: webphoneErrors.notOutboundCallWithoutDL,\n          });\n        }\n      } catch (error) {\n        console.log(error);\n        this.store.dispatch({\n          type: this.actionTypes.connectError,\n          errorCode: webphoneErrors.checkDLError,\n        });\n        this._alert.warning({\n          message: webphoneErrors.checkDLError,\n        });\n      }\n      await this._connect();\n    }\n  }\n\n  _disconnect() {\n    if (\n      this.connectionStatus === connectionStatus.connected ||\n      this.connectionStatus === connectionStatus.connecting ||\n      this.connectionStatus === connectionStatus.connectFailed\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.disconnect,\n      });\n      if (this._webphone) {\n        this._sessions.forEach((session) => {\n          this.hangup(session);\n        });\n        this._removeWebphone();\n        this._sessions = new Map();\n        this._updateSessions();\n      }\n      this.store.dispatch({\n        type: this.actionTypes.unregistered,\n      });\n    }\n  }\n\n  @proxify\n  async disconnect() {\n    this._disconnect();\n  }\n\n  _onAccepted(session) {\n    session.on('accepted', () => {\n      console.log('accepted');\n      session.callStatus = sessionStatus.connected;\n      this._onCallStart(session);\n    });\n    session.on('progress', () => {\n      console.log('progress...');\n      session.callStatus = sessionStatus.connecting;\n      this._updateSessions();\n    });\n    session.on('rejected', () => {\n      console.log('rejected');\n      session.callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('failed', (response, cause) => {\n      console.log('Event: Failed');\n      console.log(cause);\n      session.callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      session.callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('cancel', () => {\n      console.log('Event: Cancel');\n      session.callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('refer', () => {\n      console.log('Event: Refer');\n    });\n    session.on('replaced', (newSession) => {\n      session.callStatus = sessionStatus.replaced;\n      newSession.callStatus = sessionStatus.connected;\n      newSession.direction = callDirections.inbound;\n      this._addSession(newSession);\n      this._onAccepted(newSession);\n    });\n    session.on('muted', () => {\n      console.log('Event: Muted');\n      session.isOnMute = true;\n      session.callStatus = sessionStatus.onMute;\n      this._updateSessions();\n    });\n    session.on('unmuted', () => {\n      console.log('Event: Unmuted');\n      session.isOnMute = false;\n      session.callStatus = sessionStatus.connected;\n      this._updateSessions();\n    });\n    session.on('hold', () => {\n      console.log('Event: hold');\n      session.callStatus = sessionStatus.onHold;\n      this._updateSessions();\n    });\n    session.on('unhold', () => {\n      console.log('Event: unhold');\n      session.callStatus = sessionStatus.connected;\n      this._updateSessions();\n    });\n  }\n\n  _onInvite(session) {\n    session.creationTime = Date.now();\n    session.direction = callDirections.inbound;\n    session.callStatus = sessionStatus.connecting;\n    session.on('rejected', () => {\n      console.log('Event: Rejected');\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      this._onCallEnd(session);\n    });\n    this._onCallRing(session);\n  }\n\n  @proxify\n  async answer(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      this._holdOtherSession(session.id);\n      this._onAccepted(session, 'inbound');\n      await session.accept(this.acceptOptions);\n      this._onCallStart(session);\n    } catch (e) {\n      console.log('Accept failed');\n      console.error(e);\n      this._removeSession(session);\n    }\n  }\n\n  @proxify\n  async reject(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.reject();\n    } catch (e) {\n      console.error(e);\n      this._removeSession(session);\n    }\n  }\n\n  @proxify\n  async resume(sessionId) {\n    await this.unhold(sessionId);\n  }\n\n  @proxify\n  async forward(sessionId, forwardNumber) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    try {\n      const validatedResult\n        = await this._numberValidate.validateNumbers([forwardNumber]);\n      if (!validatedResult.result) {\n        validatedResult.errors.forEach((error) => {\n          this._alert.warning({\n            message: callErrors[error.type],\n            payload: {\n              phoneNumber: error.phoneNumber\n            }\n          });\n        });\n        return false;\n      }\n      const validPhoneNumber =\n        validatedResult.numbers[0] && validatedResult.numbers[0].e164;\n      session.isForwarded = true;\n      await session.forward(validPhoneNumber, this.acceptOptions);\n      console.log('Forwarded');\n      this._onCallEnd(session);\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.forwardError\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async increaseVolume(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.ua.audioHelper.setVolume(\n        (session.ua.audioHelper.volume != null ? session.ua.audioHelper.volume : 0.5) + 0.1\n      );\n    });\n  }\n\n  @proxify\n  async decreaseVolume(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.ua.audioHelper.setVolume(\n        (session.ua.audioHelper.volume != null ? session.ua.audioHelper.volume : 0.5) - 0.1\n      );\n    });\n  }\n\n  @proxify\n  async mute(sessionId) {\n    try {\n      this._sessionHandleWithId(sessionId, (session) => {\n        session.isOnMute = true;\n        session.mute();\n        this._updateSessions();\n      });\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.muteError\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async unmute(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.isOnMute = false;\n      session.unmute();\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  async hold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    try {\n      await session.hold();\n      this._updateSessions();\n      return true;\n    } catch (e) {\n      console.log(e);\n      this._alert.warning({\n        message: webphoneErrors.holdError\n      });\n      return false;\n    }\n  }\n\n  _holdOtherSession(currentSessionId) {\n    this._sessions.forEach((session, sessionId) => {\n      if (currentSessionId === sessionId) {\n        return;\n      }\n      if (session.isOnHold().local) {\n        return;\n      }\n      session.hold();\n    });\n  }\n\n  @proxify\n  async unhold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      if (session.isOnHold().local) {\n        this._holdOtherSession(session.id);\n        await session.unhold();\n        this._onCallStart(session);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  @proxify\n  async startRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    // If the status of current session is not connected,\n    // the recording process can not be started.\n    if (session.callStatus === sessionStatus.connecting) {\n      return;\n    }\n    try {\n      session.recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.startRecord();\n      session.recordStatus = recordStatus.recording;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.recordStatus = recordStatus.idle;\n      this._updateSessions();\n      // Recording has been disabled\n      if (e && e.code === -5) {\n        this._alert.danger({\n          message: webphoneErrors.recordDisabled\n        });\n        // Disabled phone recording\n        session.recordStatus = recordStatus.pending;\n        this._updateSessions();\n        return;\n      }\n      this._alert.danger({\n        message: webphoneErrors.recordError,\n        payload: {\n          errorCode: e.code\n        }\n      });\n    }\n  }\n\n  @proxify\n  async stopRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.stopRecord();\n      session.recordStatus = recordStatus.idle;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.recordStatus = recordStatus.recording;\n      this._updateSessions();\n    }\n  }\n\n  @proxify\n  async park(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.park();\n      console.log('Parked');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async transfer(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.isOnTransfer = true;\n      this._updateSessions();\n      const validatedResult\n        = await this._numberValidate.validateNumbers([transferNumber]);\n      if (!validatedResult.result) {\n        validatedResult.errors.forEach((error) => {\n          this._alert.warning({\n            message: callErrors[error.type],\n            payload: {\n              phoneNumber: error.phoneNumber\n            }\n          });\n        });\n        session.isOnTransfer = false;\n        this._updateSessions();\n        return;\n      }\n      const validPhoneNumber =\n        validatedResult.numbers[0] && validatedResult.numbers[0].e164;\n      await session.transfer(validPhoneNumber);\n      session.isOnTransfer = false;\n      this._updateSessions();\n      this._onCallEnd(session);\n    } catch (e) {\n      console.error(e);\n      session.isOnTransfer = false;\n      this._updateSessions();\n      this._alert.danger({\n        message: webphoneErrors.transferError\n      });\n    }\n  }\n\n  @proxify\n  async transferWarm(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.hold();\n      const newSession = session.ua.invite(transferNumber, {\n        media: this.acceptOptions.media\n      });\n      newSession.once('accepted', async () => {\n        try {\n          await session.warmTransfer(newSession);\n          console.log('Transferred');\n          this._onCallEnd(session);\n        } catch (e) {\n          console.error(e);\n        }\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async flip(flipValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.flip(flipValue);\n      // this._onCallEnd(session);\n      session.isOnFlip = true;\n      console.log('Flipped');\n    } catch (e) {\n      session.isOnFlip = false;\n      this._alert.warning({\n        message: webphoneErrors.flipError\n      });\n      console.error(e);\n    }\n    this._updateSessions();\n  }\n\n  @proxify\n  async sendDTMF(dtmfValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.dtmf(dtmfValue);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async hangup(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.terminate();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async toVoiceMail(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.isToVoicemail = true;\n      await session.toVoicemail();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n      this._alert.warning({\n        message: webphoneErrors.toVoiceMailError\n      });\n    }\n  }\n\n  @proxify\n  async replyWithMessage(sessionId, replyOptions) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.isReplied = true;\n      await session.replyWithMessage(replyOptions);\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  _sessionHandleWithId(sessionId, func) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return null;\n    }\n    return func(session);\n  }\n\n  /**\n   * start a outbound call.\n   * @param {toNumber} recipient number\n   * @param {fromNumber} call Id\n   * @param {homeCountryId} homeCountry Id\n   */\n  @proxify\n  async makeCall({ toNumber, fromNumber, homeCountryId }) {\n    if (!this._webphone) {\n      this._alert.warning({\n        message: this.errorCode,\n      });\n      return null;\n    }\n    const phoneLines = await this._fetchDL();\n    if (phoneLines.length === 0) {\n      this._alert.warning({\n        message: webphoneErrors.notOutboundCallWithoutDL,\n      });\n      return null;\n    }\n    const session = this._webphone.userAgent.invite(toNumber, {\n      media: this.acceptOptions.media,\n      fromNumber,\n      homeCountryId,\n    });\n    session.direction = callDirections.outbound;\n    session.callStatus = sessionStatus.connecting;\n    session.creationTime = Date.now();\n    this._onAccepted(session);\n    this._holdOtherSession(session.id);\n    this._onCallStart(session);\n    return session;\n  }\n\n  @proxify\n  async updateSessionMatchedContact(sessionId, contact) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.contactMatch = contact;\n      this._updateSessions();\n    });\n  }\n\n  _updateSessions() {\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _addSession(session) {\n    this._sessions.set(session.id, session);\n    this._updateSessions();\n  }\n\n  _removeSession(session) {\n    this._sessions.delete(session.id);\n    this._updateSessions();\n  }\n\n  @proxify\n  async toggleMinimized(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.minimized = !session.minimized;\n      this._updateSessions();\n    });\n  }\n\n  _onCallStart(session) {\n    this._addSession(session);\n    const normalizedSession = normalizeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.callStart,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (this._contactMatcher) {\n      this._contactMatcher.triggerMatch();\n    }\n    if (typeof this._onCallStartFunc === 'function') {\n      this._onCallStartFunc(normalizedSession, this.activeSession);\n    }\n  }\n\n  _onCallRing(session) {\n    this._addSession(session);\n    const normalizedSession = normalizeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.callRing,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (this._contactMatcher) {\n      this._contactMatcher.triggerMatch();\n    }\n    if (this.activeSession && !isOnHold(this.activeSession)) {\n      this._webphone.userAgent.audioHelper.playIncoming(false);\n    }\n    if (typeof this._onCallRingFunc === 'function') {\n      this._onCallRingFunc(normalizedSession, this.ringSession);\n    }\n  }\n\n  _onCallEnd(session) {\n    this._removeSession(session);\n    const normalizedSession = normalizeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.callEnd,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (typeof this._onCallEndFunc === 'function') {\n      this._onCallEndFunc(normalizedSession, this.activeSession);\n    }\n  }\n\n  async _retrySleep() {\n    if (this.connectRetryCounts < 3) {\n      await sleep(FIRST_THREE_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 3) {\n      await sleep(FOURTH_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 4) {\n      await sleep(FIFTH_RETRIES_DELAY); // sleep 30 seconds\n    }\n    if (this.connectRetryCounts > 4) {\n      await sleep(MAX_RETRIES_DELAY); // sleep 30 seconds\n    }\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get originalSessions() {\n    return this._sessions;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get ringSessionId() {\n    return this.state.ringSessionId;\n  }\n\n  get activeSessionId() {\n    return this.state.activeSessionId;\n  }\n\n  /**\n   * Current active session(Outbound and InBound that answered)\n   */\n  get activeSession() {\n    return this._selectors.activeSession();\n  }\n\n  /**\n   * Current ring session(inbound)\n   */\n  get ringSession() {\n    return this._selectors.ringSession();\n  }\n\n  get sessions() {\n    return this.state.sessions;\n  }\n\n  get ringSessions() {\n    return this._selectors.ringSessions();\n  }\n\n  get onHoldSessions() {\n    return this._selectors.onHoldSessions();\n  }\n\n  get lastEndedSessions() {\n    return this.state.lastEndedSessions;\n  }\n\n  get videoElementPrepared() {\n    return this.state.videoElementPrepared;\n  }\n\n  get enabled() {\n    return this._rolesAndPermissions.webphoneEnabled;\n  }\n\n  get connectionStatus() {\n    return this.state.connectionStatus;\n  }\n\n  get userMedia() {\n    return this._globalStorage.getItem(this._userMediaStorageKey);\n  }\n\n  @proxify\n  async _onGetUserMediaSuccess() {\n    this.store.dispatch({\n      type: this.actionTypes.getUserMediaSuccess,\n    });\n  }\n\n  @proxify\n  async _onGetUserMediaError(error) {\n    this.store.dispatch({\n      type: this.actionTypes.getUserMediaError,\n      error,\n    });\n  }\n\n  get connectRetryCounts() {\n    return this.state.connectRetryCounts;\n  }\n\n  get acceptOptions() {\n    return {\n      media: {\n        render: {\n          remote: this._remoteVideo,\n          local: this._localVideo,\n        }\n      }\n    };\n  }\n\n  get errorCode() {\n    return this.state.errorCode;\n  }\n\n  get disconnecting() {\n    return this.connectionStatus === connectionStatus.disconnecting;\n  }\n\n  get connecting() {\n    return this.connectionStatus === connectionStatus.connecting;\n  }\n\n  get connected() {\n    return this.connectionStatus === connectionStatus.connected;\n  }\n\n  get connectFailed() {\n    return this.connectionStatus === connectionStatus.connectFailed;\n  }\n}\n"]}