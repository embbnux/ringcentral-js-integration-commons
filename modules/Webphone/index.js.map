{"version":3,"sources":["modules/Webphone/index.js"],"names":["FIRST_THREE_RETRIES_DELAY","FOURTH_RETRIES_DELAY","FIFTH_RETRIES_DELAY","MAX_RETRIES_DELAY","Webphone","appKey","appName","appVersion","alert","auth","client","rolesAndPermissions","webphoneLogLevel","storage","options","actionTypes","_appKey","_appName","_appVersion","_alert","_webphoneLogLevel","_auth","_client","_rolesAndPermissions","_storage","_storageWebphoneCountsKey","_webphone","_remoteVideo","_localVideo","_activeSession","_sessions","_reducer","registerReducer","key","reducer","toggleMinimized","bind","window","document","createElement","setAttribute","body","appendChild","onbeforeunload","disconnect","then","console","log","store","dispatch","type","init","videoElementPrepared","subscribe","_onStateChange","_shouldInit","initSuccess","_shouldReset","resetSuccess","loggedIn","ready","service","platform","post","sipInfo","transport","response","json","error","Error","getSipProvisionError","provisionData","uuid","endpoingId","logLevel","audioHelper","enabled","incoming","outgoing","onRegistered","registered","onUnregistered","unregistered","userAgent","removeAllListeners","onRegistrationFailed","registrationFailed","_connect","setVolume","on","once","session","_onInvite","reconnect","_retrySleep","connectionStatus","connecting","connectFailed","resetRetryCounts","connect","_sipProvision","sipProvision","disconnecting","_createWebphone","connectError","warning","message","ttl","allowDuplicates","hasFromNumber","checkIsLoggedIn","disconnected","browserNotSupported","webphoneCounts","webphoneCountOverLimit","notOutboundCallWithoutDL","connected","stop","unregister","forEach","hangup","callStatus","_updateCurrentSessionAnsSessions","finished","_removeSession","cause","newSession","replaced","direction","inbound","_addSession","onAccepted","isOnMute","onMute","onHold","updateCurrentSession","isOnHold","local","hold","_setActiveSession","_onAccepted","accept","acceptOptions","_removeActiveSession","reject","forwardNumber","forward","ua","volume","mute","unmute","_cleanActiveSession","unhold","sessions","sessionItem","sessionId","id","startRecord","isOnRecord","stopRecord","park","transferNumber","transfer","invite","media","warmTransfer","flipValue","flip","dtmfValue","dtmf","terminate","e","toNumber","fromNumber","homeCountryId","outbound","set","updateSessions","delete","destroyCurrentSession","_updateCurrentSession","_updateSessions","connectRetryCounts","state","status","minimized","webphoneEnabled","getItem","render","remote"],"mappings":"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","file":"index.js","sourcesContent":["import RingCentralWebphone from 'ringcentral-web-phone';\nimport incomingAudio from 'ringcentral-web-phone/audio/incoming.ogg';\nimport outgoingAudio from 'ringcentral-web-phone/audio/outgoing.ogg';\n\nimport RcModule from '../../lib/RcModule';\nimport sleep from '../../lib/sleep';\nimport moduleStatus from '../../enums/moduleStatus';\nimport connectionStatus from './connectionStatus';\nimport sessionStatus from './sessionStatus';\nimport actionTypes from './actionTypes';\nimport callDirections from '../../enums/callDirections';\nimport webphoneErrors from './webphoneErrors';\n\nimport { isBrowerSupport } from './webphoneHelper';\nimport getWebphoneReducer, { getWebphoneCountsReducer } from './getWebphoneReducer';\n\nconst FIRST_THREE_RETRIES_DELAY = 10 * 1000;\nconst FOURTH_RETRIES_DELAY = 30 * 1000;\nconst FIFTH_RETRIES_DELAY = 60 * 1000;\nconst MAX_RETRIES_DELAY = 2 * 60 * 1000;\n\nexport default class Webphone extends RcModule {\n  constructor({\n    appKey,\n    appName,\n    appVersion,\n    alert,\n    auth,\n    client,\n    rolesAndPermissions,\n    webphoneLogLevel = 3,\n    storage,\n    ...options,\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._appKey = appKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._alert = alert;\n    this._webphoneLogLevel = webphoneLogLevel;\n    this._auth = auth;\n    this._client = client;\n    this._rolesAndPermissions = rolesAndPermissions;\n    this._storage = storage;\n    this._storageWebphoneCountsKey = 'webphoneCounts';\n    this._webphone = null;\n    this._remoteVideo = null;\n    this._localVideo = null;\n\n    this._activeSession = null;\n    this._sessions = new Map();\n\n    this._reducer = getWebphoneReducer(this.actionTypes);\n\n    storage.registerReducer({\n      key: this._storageWebphoneCountsKey,\n      reducer: getWebphoneCountsReducer(this.actionTypes),\n    });\n\n    this.toggleMinimized = this.toggleMinimized.bind(this);\n  }\n\n  initialize() {\n    if (\n      typeof window !== 'undefined' &&\n      typeof document !== 'undefined'\n    ) {\n      this._remoteVideo = document.createElement('video');\n      this._remoteVideo.setAttribute('hidden', 'hidden');\n      this._localVideo = document.createElement('video');\n      this._localVideo.setAttribute('hidden', 'hidden');\n      this._localVideo.setAttribute('muted', 'muted');\n      document.body.appendChild(this._remoteVideo);\n      document.body.appendChild(this._localVideo);\n      window.onbeforeunload = () => {\n        this.disconnect().then(() => {\n          console.log('closed webrtc');\n        });\n      };\n      this.store.dispatch({\n        type: this.actionTypes.init,\n        videoElementPrepared: true,\n      });\n    } else {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n        videoElementPrepared: false,\n      });\n    }\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n      this.disconnect();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      this._rolesAndPermissions.ready &&\n      !this.ready\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._auth.loggedIn ||\n        !this._rolesAndPermissions.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  async _sipProvision() {\n    try {\n      const response = await this._client.service.platform()\n        .post('/client-info/sip-provision', {\n          sipInfo: [{ transport: 'WSS' }]\n        });\n      return response.json();\n    } catch (error) {\n      console.error(error);\n      throw new Error(webphoneErrors.getSipProvisionError);\n    }\n  }\n\n  _createWebphone(provisionData) {\n    this._webphone = new RingCentralWebphone(provisionData, {\n      appKey: this._appKey,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      uuid: this._auth.endpoingId,\n      logLevel: this._webphoneLogLevel, // error 0, warn 1, log: 2, debug: 3\n      audioHelper: {\n        enabled: true, // enables audio feedback when web phone is ringing or making a call\n        incoming: incomingAudio, // path to audio file for incoming call\n        outgoing: outgoingAudio, // path to aduotfile for outgoing call\n      }\n    });\n\n    const onRegistered = () => {\n      this.store.dispatch({\n        type: this.actionTypes.registered,\n      });\n    };\n    const onUnregistered = () => {\n      this.store.dispatch({\n        type: this.actionTypes.unregistered,\n      });\n      this._webphone.userAgent.removeAllListeners();\n      this._webphone = null;\n    };\n    const onRegistrationFailed = (error) => {\n      this.store.dispatch({\n        type: this.actionTypes.registrationFailed,\n        error,\n      });\n      this._webphone.userAgent.removeAllListeners();\n      this._connect(true);\n    };\n    this._webphone.userAgent.audioHelper.setVolume(0.3);\n    this._webphone.userAgent.on('registered', onRegistered);\n    this._webphone.userAgent.on('unregistered', onUnregistered);\n    this._webphone.userAgent.once('registrationFailed', onRegistrationFailed);\n    this._webphone.userAgent.on('invite', (session) => {\n      console.log('UA invite');\n      this._onInvite(session);\n    });\n  }\n\n  async _connect(reconnect = false) {\n    try {\n      if (reconnect) {\n        await this._retrySleep();\n      }\n\n      // do not connect if it is connecting\n      if (this.connectionStatus === connectionStatus.connecting) {\n        return;\n      }\n\n      // when reconnect is break by disconnect\n      if (reconnect && this.connectionStatus !== connectionStatus.connectFailed) {\n        this.store.dispatch({\n          type: this.actionTypes.resetRetryCounts,\n        });\n        return;\n      }\n\n      this.store.dispatch({\n        type: (\n          reconnect ?\n            this.actionTypes.reconnect : this.actionTypes.connect\n        )\n      });\n\n      const sipProvision = await this._sipProvision();\n\n      // do not continue if it is disconnecting\n      if (this.connectionStatus === connectionStatus.disconnecting) {\n        return;\n      }\n      this._createWebphone(sipProvision);\n    } catch (error) {\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n        error,\n      });\n      this._alert.warning({\n        message: webphoneErrors.connectFailed,\n        ttl: 0,\n        allowDuplicates: false,\n      });\n      await this._connect(true);\n    }\n  }\n\n  async connect(hasFromNumber) {\n    if (\n      (await this._auth.checkIsLoggedIn()) &&\n      this.enabled &&\n      this.connectionStatus === connectionStatus.disconnected\n    ) {\n      if (!isBrowerSupport()) {\n        this._alert.warning({\n          message: webphoneErrors.browserNotSupported,\n          ttl: 0,\n        });\n        return;\n      }\n      if (this.webphoneCounts >= 5) {\n        this._alert.warning({\n          message: webphoneErrors.webphoneCountOverLimit,\n        });\n        return;\n      }\n      if (!hasFromNumber) {\n        this._alert.warning({\n          message: webphoneErrors.notOutboundCallWithoutDL,\n        });\n        return;\n      }\n      await this._connect();\n    }\n  }\n\n  async disconnect() {\n    if (\n      this.connectionStatus === connectionStatus.connected ||\n      this.connectionStatus === connectionStatus.connecting ||\n      this.connectionStatus === connectionStatus.connectFailed\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.disconnect,\n      });\n      if (this._webphone) {\n        this._webphone.userAgent.stop();\n        this._webphone.userAgent.unregister();\n        this._sessions.forEach((session) => {\n          this.hangup(session);\n        });\n      }\n    }\n  }\n\n  _onAccepted(session) {\n    session.on('accepted', () => {\n      console.log('accepted');\n      session.callStatus = sessionStatus.connected;\n      this._updateCurrentSessionAnsSessions(session);\n    });\n    session.on('progress', () => {\n      console.log('progress...');\n      session.callStatus = sessionStatus.connecting;\n      this._updateCurrentSessionAnsSessions(session);\n    });\n    session.on('rejected', () => {\n      console.log('rejected');\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n    });\n    session.on('failed', (response, cause) => {\n      console.log('Event: Failed');\n      console.log(cause);\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n    });\n    session.on('cancel', () => {\n      console.log('Event: Cancel');\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n    });\n    session.on('refer', () => {\n      console.log('Event: Refer');\n    });\n    session.on('replaced', (newSession) => {\n      session.callStatus = sessionStatus.replaced;\n      newSession.callStatus = sessionStatus.connected;\n      newSession.direction = callDirections.inbound;\n      this._addSession(newSession);\n      this.onAccepted(newSession);\n    });\n    session.on('muted', () => {\n      console.log('Event: Muted');\n      session.isOnMute = true;\n      session.callStatus = sessionStatus.onMute;\n    });\n    session.on('unmuted', () => {\n      console.log('Event: Unmuted');\n      session.isOnMute = false;\n      session.callStatus = sessionStatus.connected;\n    });\n    session.on('hold', () => {\n      console.log('Event: hold');\n      session.callStatus = sessionStatus.onHold;\n    });\n    session.on('unhold', () => {\n      console.log('Event: unhold');\n      session.callStatus = sessionStatus.connected;\n    });\n  }\n\n  _onInvite(session) {\n    session.direction = callDirections.inbound;\n    session.callStatus = sessionStatus.connecting;\n    if (!this._activeSession) {\n      this._activeSession = session;\n      this.store.dispatch({\n        type: this.actionTypes.updateCurrentSession,\n        session,\n      });\n    }\n\n    this._addSession(session);\n    session.on('rejected', () => {\n      console.log('Event: Rejected');\n      this._removeSession(session);\n    });\n  }\n\n  async answer(session) {\n    try {\n      if (this._activeSession && !this._activeSession.isOnHold().local) {\n        this._activeSession.hold();\n      }\n      this._setActiveSession(session);\n      this._onAccepted(session, 'inbound');\n      await session.accept(this.acceptOptions);\n    } catch (e) {\n      console.log('Accept failed');\n      this._removeSession(session);\n      this._removeActiveSession();\n    }\n  }\n\n  reject(session) {\n    session.reject();\n  }\n\n  async forward(forwardNumber, session) {\n    try {\n      await session.forward(forwardNumber, this.acceptOptions);\n      console.log('Forwarded');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  increaseVolume(session) {\n    session.ua.audioHelper.setVolume(\n      (session.ua.audioHelper.volume != null ? session.ua.audioHelper.volume : 0.5) + 0.1\n    );\n  }\n\n  decreaseVolume(session) {\n    session.ua.audioHelper.setVolume(\n      (session.ua.audioHelper.volume != null ? session.ua.audioHelper.volume : 0.5) - 0.1\n    );\n  }\n\n  mute(session) {\n    session.isOnMute = true;\n    session.mute();\n  }\n\n  unmute(session) {\n    session.isOnMute = false;\n    session.unmute();\n  }\n\n  hold(session) {\n    session.hold();\n    this._cleanActiveSession(session);\n  }\n\n  unhold(session) {\n    session.unhold();\n    this.sessions.forEach((sessionItem, sessionId) => {\n      if (session.id !== sessionId) {\n        if (!session.isOnHold().local) {\n          sessionItem.hold();\n        }\n      }\n    });\n    this._setActiveSession(session);\n  }\n\n  async startRecord(session) {\n    try {\n      await session.startRecord();\n      session.isOnRecord = true;\n      console.log('Recording Started');\n    } catch (e) {\n      session.isOnRecord = false;\n      console.error(e);\n    }\n  }\n\n  async stopRecord(session) {\n    try {\n      await session.stopRecord();\n      session.isOnRecord = false;\n      console.log('Recording Stopped');\n    } catch (e) {\n      session.isOnRecord = true;\n      console.error(e);\n    }\n  }\n\n  async park(session) {\n    try {\n      await session.park();\n      console.log('Parked');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async transfer(transferNumber, session) {\n    try {\n      await session.transfer(transferNumber);\n      console.log('Transferred');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async transferWarm(transferNumber, session) {\n    try {\n      await session.hold();\n      const newSession = session.ua.invite(transferNumber, {\n        media: this.acceptOptions.media\n      });\n      newSession.once('accepted', async () => {\n        try {\n          await session.warmTransfer(newSession);\n          console.log('Transferred');\n        } catch (e) {\n          console.error(e);\n        }\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async flip(flipValue, session) {\n    try {\n      await session.flip(flipValue);\n      console.log('Flipped');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  sendDTMF(dtmfValue, session) {\n    session.dtmf(dtmfValue);\n  }\n\n  hangup(session) {\n    try {\n      session.terminate();\n    } catch (e) {\n      console.log(e);\n      this._removeSession(session);\n    }\n  }\n\n  makeCall({ toNumber, fromNumber, homeCountryId }) {\n    const session = this._webphone.userAgent.invite(toNumber, {\n      media: this.acceptOptions.media,\n      fromNumber,\n      homeCountryId,\n    });\n    session.direction = callDirections.outbound;\n    session.callStatus = sessionStatus.connecting;\n    this._onAccepted(session);\n    if (this._activeSession && !this._activeSession.isOnHold().local) {\n      this._activeSession.hold();\n    }\n    this._addSession(session);\n    this._setActiveSession(session);\n    return session;\n  }\n\n  _addSession(session) {\n    this._sessions.set(session.id, session);\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: this._sessions,\n    });\n  }\n\n  _removeSession(session) {\n    this._cleanActiveSession(session);\n    this._sessions.delete(session.id);\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: this._sessions,\n    });\n  }\n\n  _setActiveSession(session) {\n    this._activeSession = session;\n    this.store.dispatch({\n      type: this.actionTypes.updateCurrentSession,\n      session,\n    });\n  }\n\n  _removeActiveSession() {\n    this._activeSession = null;\n    this.store.dispatch({\n      type: this.actionTypes.destroyCurrentSession,\n    });\n  }\n\n  _cleanActiveSession(session) {\n    if (session !== this._activeSession) {\n      return;\n    }\n    this._removeActiveSession();\n  }\n\n  _updateCurrentSessionAnsSessions(session) {\n    this._updateCurrentSession(session);\n    this._updateSessions();\n  }\n\n  _updateCurrentSession(session) {\n    this.store.dispatch({\n      type: this.actionTypes.updateCurrentSession,\n      session,\n    });\n  }\n\n  _updateSessions() {\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: this._sessions,\n    });\n  }\n\n  toggleMinimized() {\n    this.store.dispatch({\n      type: this.actionTypes.toggleMinimized,\n    });\n  }\n\n  async _retrySleep() {\n    if (this.connectRetryCounts < 3) {\n      await sleep(FIRST_THREE_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 3) {\n      await sleep(FOURTH_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 4) {\n      await sleep(FIFTH_RETRIES_DELAY); // sleep 30 seconds\n    }\n    if (this.connectRetryCounts > 4) {\n      await sleep(MAX_RETRIES_DELAY); // sleep 30 seconds\n    }\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get activeSession() {\n    return this._activeSession;\n  }\n\n  get sessions() {\n    return this._sessions;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatus.ready;\n  }\n\n  get minimized() {\n    return this.state.minimized;\n  }\n\n  get videoElementPrepared() {\n    return this.state.videoElementPrepared;\n  }\n\n  get enabled() {\n    return this.videoElementPrepared && this._rolesAndPermissions.webphoneEnabled;\n  }\n\n  get connectionStatus() {\n    return this.state.connectionStatus;\n  }\n\n  get webphoneCounts() {\n    return this._storage.getItem(this._storageWebphoneCountsKey);\n  }\n\n  get connectRetryCounts() {\n    return this.state.connectRetryCounts;\n  }\n\n  get acceptOptions() {\n    return {\n      media: {\n        render: {\n          remote: this._remoteVideo,\n          local: this._localVideo,\n        }\n      }\n    };\n  }\n}\n"]}