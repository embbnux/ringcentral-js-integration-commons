{"version":3,"sources":["modules/Webphone/index.js"],"names":["FIRST_THREE_RETRIES_DELAY","FOURTH_RETRIES_DELAY","FIFTH_RETRIES_DELAY","MAX_RETRIES_DELAY","Webphone","appKey","appName","appVersion","alert","auth","client","rolesAndPermissions","webphoneLogLevel","storage","globalStorage","contactMatcher","extensionDevice","numberValidate","onCallEnd","onCallRing","onCallStart","options","actionTypes","_appKey","_appName","_appVersion","_alert","_webphoneLogLevel","_auth","_client","_rolesAndPermissions","_extensionDevice","_storage","_globalStorage","_numberValidate","_storageWebphoneCountsKey","_userMediaStorageKey","_contactMatcher","_onCallEnd","_onCallRing","_onCallStart","_webphone","_remoteVideo","_localVideo","_activeSession","_sessions","_reducer","registerReducer","key","reducer","addSelector","sessions","outputs","forEach","session","push","to","from","addQuerySource","getQueriesFn","_selectors","sessionPhoneNumbers","readyCheckFn","ready","document","createElement","setAttribute","body","appendChild","store","dispatch","type","videoElementPrepared","window","readyState","addEventListener","_prepareVideoElement","_disconnect","subscribe","_onStateChange","userMedia","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","audio","stream","_onGetUserMediaSuccess","stop","getTracks","track","error","_onGetUserMediaError","_shouldInit","initSuccess","_shouldReset","resetSuccess","disconnect","loggedIn","service","platform","post","sipInfo","transport","response","json","account","extension","device","list","devices","records","phoneLines","length","concat","provisionData","uuid","endpoingId","logLevel","audioHelper","enabled","incoming","outgoing","onRegistered","registered","onUnregistered","unregistered","onRegistrationFailed","needToReconnect","errorCode","console","userAgent","removeAllListeners","status_code","webphoneCountOverLimit","warning","message","registrationFailed","_connect","setVolume","on","once","debug","_onInvite","reconnect","_retrySleep","connectionStatus","connecting","connectFailed","resetRetryCounts","connect","_sipProvision","sipProvision","disconnecting","_createWebphone","ttl","allowDuplicates","indexOf","refreshServiceFeatures","notWebphonePermission","connectError","checkIsLoggedIn","disconnected","browserNotSupported","_fetchDL","notOutboundCallWithoutDL","log","checkDLError","connected","hangup","unregister","_removeActiveSession","_updateSessions","triggerMatch","callStatus","_updateCurrentSessionAndSessions","currentSession","finished","_removeSession","cause","newSession","replaced","direction","inbound","_addSession","onAccepted","isOnMute","onMute","onHold","creationTime","Date","now","_resetMinimized","updateCurrentSession","_onNewCall","sessionId","get","isOnHold","local","hold","_setActiveSession","_onAccepted","accept","acceptOptions","_sessionHandleWithId","reject","unhold","forwardNumber","validateNumbers","validatedResult","result","errors","validPhoneNumber","numbers","e164","forward","forwardError","ua","volume","mute","muteError","unmute","holdError","sessionItem","sessionItemId","id","startRecord","isOnRecord","stopRecord","park","transferNumber","transfer","invite","media","warmTransfer","flipValue","flip","dtmfValue","dtmf","e","terminate","toVoicemail","toVoiceMailError","replyOptions","replyWithMessage","func","toNumber","fromNumber","homeCountryId","outbound","contact","contactMatch","set","updateSessions","values","map","_cleanActiveSession","delete","destroyCurrentSession","_updateCurrentSession","toggleMinimized","resetMinimized","connectRetryCounts","getUserMediaSuccess","getUserMediaError","state","status","minimized","webphoneEnabled","getItem","render","remote"],"mappings":"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","file":"index.js","sourcesContent":["import RingCentralWebphone from 'ringcentral-web-phone';\nimport incomingAudio from 'ringcentral-web-phone/audio/incoming.ogg';\nimport outgoingAudio from 'ringcentral-web-phone/audio/outgoing.ogg';\n\nimport RcModule from '../../lib/RcModule';\nimport sleep from '../../lib/sleep';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport connectionStatus from './connectionStatus';\nimport sessionStatus from './sessionStatus';\nimport actionTypes from './actionTypes';\nimport callDirections from '../../enums/callDirections';\nimport webphoneErrors from './webphoneErrors';\nimport callErrors from '../Call/callErrors';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\nimport {\n  isBrowerSupport,\n  normalizeSession,\n} from './webphoneHelper';\nimport getWebphoneReducer, {\n  getWebphoneCountsReducer,\n  getUserMediaReducer,\n} from './getWebphoneReducer';\n\nconst FIRST_THREE_RETRIES_DELAY = 10 * 1000;\nconst FOURTH_RETRIES_DELAY = 30 * 1000;\nconst FIFTH_RETRIES_DELAY = 60 * 1000;\nconst MAX_RETRIES_DELAY = 2 * 60 * 1000;\n\nexport default class Webphone extends RcModule {\n  constructor({\n    appKey,\n    appName,\n    appVersion,\n    alert,\n    auth,\n    client,\n    rolesAndPermissions,\n    webphoneLogLevel = 3,\n    storage,\n    globalStorage,\n    contactMatcher,\n    extensionDevice,\n    numberValidate,\n    onCallEnd,\n    onCallRing,\n    onCallStart,\n    ...options,\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._appKey = appKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._alert = alert;\n    this._webphoneLogLevel = webphoneLogLevel;\n    this._auth = this::ensureExist(auth, 'auth');\n    this._client = this::ensureExist(client, 'client');\n    this._rolesAndPermissions = this::ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n    this._extensionDevice = this::ensureExist(extensionDevice, 'extensionDevice');\n    this._storage = this::ensureExist(storage, 'storage');\n    this._globalStorage = this::ensureExist(globalStorage, 'globalStorage');\n    this._numberValidate = this::ensureExist(numberValidate, 'numberValidate');\n    this._storageWebphoneCountsKey = 'webphoneCounts';\n    this._userMediaStorageKey = 'userMadia';\n    this._contactMatcher = contactMatcher;\n    this._onCallEnd = onCallEnd;\n    this._onCallRing = onCallRing;\n    this._onCallStart = onCallStart;\n    this._webphone = null;\n    this._remoteVideo = null;\n    this._localVideo = null;\n\n    this._activeSession = null;\n    this._sessions = new Map();\n\n    this._reducer = getWebphoneReducer(this.actionTypes);\n\n    storage.registerReducer({\n      key: this._storageWebphoneCountsKey,\n      reducer: getWebphoneCountsReducer(this.actionTypes),\n    });\n    globalStorage.registerReducer({\n      key: this._userMediaStorageKey,\n      reducer: getUserMediaReducer(this.actionTypes),\n    });\n\n\n    this.addSelector('sessionPhoneNumbers',\n      () => this.sessions,\n      (sessions) => {\n        const outputs = [];\n        sessions.forEach((session) => {\n          outputs.push(session.to);\n          outputs.push(session.from);\n        });\n        return outputs;\n      }\n    );\n\n    if (this._contactMatcher) {\n      this._contactMatcher.addQuerySource({\n        getQueriesFn: this._selectors.sessionPhoneNumbers,\n        readyCheckFn: () => (\n          this.ready\n        ),\n      });\n    }\n  }\n\n  _prepareVideoElement() {\n    this._remoteVideo = document.createElement('video');\n    this._remoteVideo.setAttribute('hidden', 'hidden');\n    this._localVideo = document.createElement('video');\n    this._localVideo.setAttribute('hidden', 'hidden');\n    this._localVideo.setAttribute('muted', 'muted');\n    document.body.appendChild(this._remoteVideo);\n    document.body.appendChild(this._localVideo);\n\n    this.store.dispatch({\n      type: this.actionTypes.videoElementPrepared,\n    });\n  }\n  initialize() {\n    if (\n      typeof window !== 'undefined' &&\n      typeof document !== 'undefined'\n    ) {\n      if (document.readyState === 'loading') {\n        window.addEventListener('load', () => {\n          this._prepareVideoElement();\n        });\n      } else {\n        this._prepareVideoElement();\n      }\n      window.addEventListener('unload', () => {\n        this._disconnect();\n      });\n    }\n    this.store.subscribe(() => this._onStateChange());\n  }\n  initializeProxy() {\n    if (\n      !this.userMedia\n    ) {\n      navigator.getUserMedia = navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia;\n      if (navigator.getUserMedia) {\n        navigator.getUserMedia({\n          audio: true,\n        }, (stream) => {\n          this._onGetUserMediaSuccess();\n          if (typeof stream.stop === 'function') {\n            stream.stop();\n          } else {\n            stream.getTracks().forEach((track) => {\n              track.stop();\n            });\n          }\n        }, (error) => {\n          this._onGetUserMediaError(error);\n        });\n      }\n    }\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n      this.disconnect();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      this._rolesAndPermissions.ready &&\n      this._extensionDevice.ready &&\n      this._storage.ready &&\n      this._globalStorage.ready &&\n      this._numberValidate.ready &&\n      !this.ready\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._auth.loggedIn ||\n        !this._rolesAndPermissions.ready ||\n        !this._storage.ready ||\n        !this._globalStorage.ready ||\n        !this._numberValidate.ready ||\n        !this._extensionDevice.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  @proxify\n  async _sipProvision() {\n    const response = await this._client.service.platform()\n      .post('/client-info/sip-provision', {\n        sipInfo: [{ transport: 'WSS' }]\n      });\n    return response.json();\n  }\n\n  async _fetchDL() {\n    const response = await this._client.account().extension().device().list();\n    const devices = response.records;\n    let phoneLines = [];\n    devices.forEach((device) => {\n      if (!device.phoneLines || device.phoneLines.length === 0) {\n        return;\n      }\n      phoneLines = phoneLines.concat(device.phoneLines);\n    });\n    return phoneLines;\n  }\n\n  _createWebphone(provisionData) {\n    this._webphone = new RingCentralWebphone(provisionData, {\n      appKey: this._appKey,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      uuid: this._auth.endpoingId,\n      logLevel: this._webphoneLogLevel, // error 0, warn 1, log: 2, debug: 3\n      audioHelper: {\n        enabled: true, // enables audio feedback when web phone is ringing or making a call\n        incoming: incomingAudio, // path to audio file for incoming call\n        outgoing: outgoingAudio, // path to aduotfile for outgoing call\n      }\n    });\n\n    const onRegistered = () => {\n      this.store.dispatch({\n        type: this.actionTypes.registered,\n      });\n    };\n    const onUnregistered = () => {\n      this.store.dispatch({\n        type: this.actionTypes.unregistered,\n      });\n    };\n    const onRegistrationFailed = (error) => {\n      let needToReconnect = true;\n      let errorCode;\n      console.error(error);\n      this._webphone.userAgent.removeAllListeners();\n      this._webphone = null;\n      if (error && error.status_code === 503) {\n        errorCode = webphoneErrors.webphoneCountOverLimit;\n        this._alert.warning({\n          message: errorCode,\n        });\n        needToReconnect = false;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.registrationFailed,\n        errorCode,\n      });\n      if (needToReconnect) {\n        this._connect(needToReconnect);\n      }\n    };\n    this._webphone.userAgent.audioHelper.setVolume(0.3);\n    this._webphone.userAgent.on('registered', onRegistered);\n    this._webphone.userAgent.on('unregistered', onUnregistered);\n    this._webphone.userAgent.once('registrationFailed', onRegistrationFailed);\n    this._webphone.userAgent.on('invite', (session) => {\n      console.debug('UA invite');\n      this._onInvite(session);\n    });\n  }\n\n  @proxify\n  async _connect(reconnect = false) {\n    try {\n      if (reconnect) {\n        await this._retrySleep();\n      }\n\n      // do not connect if it is connecting\n      if (this.connectionStatus === connectionStatus.connecting) {\n        return;\n      }\n\n      // when reconnect is break by disconnect\n      if (reconnect && this.connectionStatus !== connectionStatus.connectFailed) {\n        this.store.dispatch({\n          type: this.actionTypes.resetRetryCounts,\n        });\n        return;\n      }\n\n      this.store.dispatch({\n        type: (\n          reconnect ?\n            this.actionTypes.reconnect : this.actionTypes.connect\n        )\n      });\n\n      const sipProvision = await this._sipProvision();\n\n      // do not continue if it is disconnecting\n      if (this.disconnecting) {\n        return;\n      }\n      this._createWebphone(sipProvision);\n    } catch (error) {\n      console.error(error);\n      this._alert.warning({\n        message: webphoneErrors.connectFailed,\n        ttl: 0,\n        allowDuplicates: false,\n      });\n      let needToReconnect = true;\n      let errorCode;\n      if (\n        error && error.message &&\n        (error.message.indexOf('Feature [WebPhone] is not available') > -1)\n      ) {\n        this._rolesAndPermissions.refreshServiceFeatures();\n        needToReconnect = false;\n        errorCode = webphoneErrors.notWebphonePermission;\n        return;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n        errorCode,\n        error,\n      });\n      if (needToReconnect) {\n        await this._connect(needToReconnect);\n      }\n    }\n  }\n  @proxify\n  async connect() {\n    if (\n      (await this._auth.checkIsLoggedIn()) &&\n      this.enabled &&\n      this.connectionStatus === connectionStatus.disconnected\n    ) {\n      if (!isBrowerSupport()) {\n        this.store.dispatch({\n          type: this.actionTypes.connectError,\n          errorCode: webphoneErrors.browserNotSupported,\n        });\n        this._alert.warning({\n          message: webphoneErrors.browserNotSupported,\n          ttl: 0,\n        });\n        return;\n      }\n      try {\n        const phoneLines = await this._fetchDL();\n        if (phoneLines.length === 0) {\n          this.store.dispatch({\n            type: this.actionTypes.connectError,\n            errorCode: webphoneErrors.notOutboundCallWithoutDL,\n          });\n          this._alert.warning({\n            message: webphoneErrors.notOutboundCallWithoutDL,\n          });\n        }\n      } catch (error) {\n        console.log(error);\n        this.store.dispatch({\n          type: this.actionTypes.connectError,\n          errorCode: webphoneErrors.checkDLError,\n        });\n        this._alert.warning({\n          message: webphoneErrors.checkDLError,\n        });\n      }\n      await this._connect();\n    }\n  }\n  _disconnect() {\n    if (\n      this.connectionStatus === connectionStatus.connected ||\n      this.connectionStatus === connectionStatus.connecting ||\n      this.connectionStatus === connectionStatus.connectFailed\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.disconnect,\n      });\n      if (this._webphone) {\n        this._sessions.forEach((session) => {\n          this.hangup(session);\n        });\n        if (this._webphone.userAgent) {\n          this._webphone.userAgent.stop();\n          this._webphone.userAgent.unregister();\n        }\n        this._webphone = null;\n        this._activeSession = null;\n        this._sessions = new Map();\n        this._removeActiveSession();\n        this._updateSessions();\n      }\n      this.store.dispatch({\n        type: this.actionTypes.unregistered,\n      });\n    }\n  }\n  @proxify\n  async disconnect() {\n    this._disconnect();\n  }\n\n  _onNewCall() {\n    if (this._contactMatcher) {\n      this._contactMatcher.triggerMatch();\n    }\n  }\n\n  _onAccepted(session) {\n    session.on('accepted', () => {\n      console.log('accepted');\n      session.callStatus = sessionStatus.connected;\n      this._updateCurrentSessionAndSessions(session);\n      if (typeof this._onCallStart === 'function') {\n        this._onCallStart(session, this.currentSession);\n      }\n    });\n    session.on('progress', () => {\n      console.log('progress...');\n      session.callStatus = sessionStatus.connecting;\n      this._updateCurrentSessionAndSessions(session);\n    });\n    session.on('rejected', () => {\n      console.log('rejected');\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n      if (typeof this._onCallEnd === 'function') {\n        this._onCallEnd(session, this.currentSession);\n      }\n    });\n    session.on('failed', (response, cause) => {\n      console.log('Event: Failed');\n      console.log(cause);\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n      if (typeof this._onCallEnd === 'function') {\n        this._onCallEnd(session, this.currentSession);\n      }\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n      if (typeof this._onCallEnd === 'function') {\n        this._onCallEnd(session, this.currentSession);\n      }\n    });\n    session.on('cancel', () => {\n      console.log('Event: Cancel');\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n      if (typeof this._onCallEnd === 'function') {\n        this._onCallEnd(session, this.currentSession);\n      }\n    });\n    session.on('refer', () => {\n      console.log('Event: Refer');\n    });\n    session.on('replaced', (newSession) => {\n      session.callStatus = sessionStatus.replaced;\n      newSession.callStatus = sessionStatus.connected;\n      newSession.direction = callDirections.inbound;\n      this._addSession(newSession);\n      this.onAccepted(newSession);\n    });\n    session.on('muted', () => {\n      console.log('Event: Muted');\n      session.isOnMute = true;\n      session.callStatus = sessionStatus.onMute;\n    });\n    session.on('unmuted', () => {\n      console.log('Event: Unmuted');\n      session.isOnMute = false;\n      session.callStatus = sessionStatus.connected;\n    });\n    session.on('hold', () => {\n      console.log('Event: hold');\n      session.callStatus = sessionStatus.onHold;\n    });\n    session.on('unhold', () => {\n      console.log('Event: unhold');\n      session.callStatus = sessionStatus.connected;\n    });\n  }\n\n  _onInvite(session) {\n    session.creationTime = Date.now();\n    session.direction = callDirections.inbound;\n    session.callStatus = sessionStatus.connecting;\n    if (!this._activeSession) {\n      this._activeSession = session;\n      this._resetMinimized();\n      this.store.dispatch({\n        type: this.actionTypes.updateCurrentSession,\n        session: normalizeSession(session),\n      });\n    }\n    this._addSession(session);\n    session.on('rejected', () => {\n      console.log('Event: Rejected');\n      this._removeSession(session);\n      if (typeof this._onCallEnd === 'function') {\n        this._onCallEnd(session, this.currentSession);\n      }\n    });\n    if (typeof this._onCallRing === 'function') {\n      this._onCallRing(session, this.currentSession);\n    }\n    this._onNewCall();\n  }\n\n  @proxify\n  async answer(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      if (\n        this._activeSession && !this._activeSession.isOnHold().local &&\n        this._activeSession !== session\n      ) {\n        this._activeSession.hold();\n      }\n      this._setActiveSession(session);\n      this._onAccepted(session, 'inbound');\n      await session.accept(this.acceptOptions);\n      this._resetMinimized();\n      if (typeof this._onCallStart === 'function') {\n        this._onCallStart(session, this.currentSession);\n      }\n    } catch (e) {\n      console.log('Accept failed');\n      console.error(e);\n      this._removeSession(session);\n      this._removeActiveSession();\n    }\n  }\n  @proxify\n  async reject(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.reject();\n    });\n  }\n  @proxify\n  async resume(sessionId) {\n    this.unhold(sessionId);\n    this._resetMinimized();\n  }\n  @proxify\n  async forward(sessionId, forwardNumber) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    try {\n      const validatedResult\n        = await this._numberValidate.validateNumbers([forwardNumber]);\n      if (!validatedResult.result) {\n        validatedResult.errors.forEach((error) => {\n          this._alert.warning({\n            message: callErrors[error.type]\n          });\n        });\n        return false;\n      }\n      const validPhoneNumber =\n        validatedResult.numbers[0] && validatedResult.numbers[0].e164;\n      await session.forward(validPhoneNumber, this.acceptOptions);\n      console.log('Forwarded');\n      this._removeSession(session);\n      if (typeof this._onCallEnd === 'function') {\n        this._onCallEnd(session, this.currentSession);\n      }\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.forwardError\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async increaseVolume(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.ua.audioHelper.setVolume(\n        (session.ua.audioHelper.volume != null ? session.ua.audioHelper.volume : 0.5) + 0.1\n      );\n    });\n  }\n  @proxify\n  async decreaseVolume(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.ua.audioHelper.setVolume(\n        (session.ua.audioHelper.volume != null ? session.ua.audioHelper.volume : 0.5) - 0.1\n      );\n    });\n  }\n  @proxify\n  async mute(sessionId) {\n    try {\n      this._sessionHandleWithId(sessionId, (session) => {\n        session.isOnMute = true;\n        session.mute();\n        this._updateCurrentSessionAndSessions(session);\n      });\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.muteError\n      });\n      return false;\n    }\n  }\n  @proxify\n  async unmute(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.isOnMute = false;\n      session.unmute();\n      this._updateCurrentSessionAndSessions(session);\n    });\n  }\n\n  @proxify\n  async hold(sessionId) {\n    try {\n      this._sessionHandleWithId(sessionId, (session) => {\n        session.hold();\n        this._updateCurrentSessionAndSessions(session);\n      });\n      return true;\n    } catch (e) {\n      console.log(e);\n      this._alert.warning({\n        message: webphoneErrors.holdError\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async unhold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    if (session.isOnHold().local) {\n      this._sessions.forEach((sessionItem, sessionItemId) => {\n        if (session.id !== sessionItemId) {\n          if (!sessionItem.isOnHold().local) {\n            sessionItem.hold();\n          }\n        }\n      });\n      session.unhold();\n    }\n    this._setActiveSession(session);\n    this._updateCurrentSessionAndSessions(session);\n  }\n\n  @proxify\n  async startRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.startRecord();\n      session.isOnRecord = true;\n      console.log('Recording Started');\n    } catch (e) {\n      session.isOnRecord = false;\n      console.error(e);\n    }\n    this._updateCurrentSessionAndSessions(session);\n  }\n\n  @proxify\n  async stopRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.stopRecord();\n      session.isOnRecord = false;\n      console.log('Recording Stopped');\n    } catch (e) {\n      session.isOnRecord = true;\n      console.error(e);\n    }\n    this._updateCurrentSessionAndSessions(session);\n  }\n\n  @proxify\n  async park(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.park();\n      console.log('Parked');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async transfer(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.transfer(transferNumber);\n      console.log('Transferred');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async transferWarm(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.hold();\n      const newSession = session.ua.invite(transferNumber, {\n        media: this.acceptOptions.media\n      });\n      newSession.once('accepted', async () => {\n        try {\n          await session.warmTransfer(newSession);\n          console.log('Transferred');\n        } catch (e) {\n          console.error(e);\n        }\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async flip(flipValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.flip(flipValue);\n      console.log('Flipped');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async sendDTMF(dtmfValue, sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      try {\n        session.dtmf(dtmfValue);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  @proxify\n  async hangup(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      try {\n        session.terminate();\n      } catch (e) {\n        console.error(e);\n        this._removeSession(session);\n      }\n    });\n  }\n\n  @proxify\n  async toVoiceMail(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      try {\n        session.toVoicemail();\n      } catch (e) {\n        console.error(e);\n        // this._removeSession(session);\n        this._alert.warning({\n          message: webphoneErrors.toVoiceMailError\n        });\n      }\n    });\n  }\n\n  @proxify\n  async replyWithMessage(sessionId, replyOptions) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      try {\n        session.replyWithMessage(replyOptions);\n      } catch (e) {\n        console.error(e);\n        this._removeSession(session);\n        if (typeof this._onCallEnd === 'function') {\n          this._onCallEnd(session, this.currentSession);\n        }\n      }\n    });\n  }\n\n  _sessionHandleWithId(sessionId, func) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return null;\n    }\n    return func(session);\n  }\n\n  @proxify\n  async makeCall({ toNumber, fromNumber, homeCountryId }) {\n    if (!this._webphone) {\n      this._alert.warning({\n        message: this.errorCode,\n      });\n      return;\n    }\n    const phoneLines = await this._fetchDL();\n    if (phoneLines.length === 0) {\n      this._alert.warning({\n        message: webphoneErrors.notOutboundCallWithoutDL,\n      });\n      return;\n    }\n    const session = this._webphone.userAgent.invite(toNumber, {\n      media: this.acceptOptions.media,\n      fromNumber,\n      homeCountryId,\n    });\n    session.direction = callDirections.outbound;\n    session.callStatus = sessionStatus.connecting;\n    session.creationTime = Date.now();\n    this._onAccepted(session);\n    if (this._activeSession && !this._activeSession.isOnHold().local) {\n      this._activeSession.hold();\n    }\n    this._addSession(session);\n    this._setActiveSession(session);\n    this._resetMinimized();\n    this._onNewCall();\n    if (typeof this._onCallStart === 'function') {\n      this._onCallStart(session, this.currentSession);\n    }\n    return session;\n  }\n\n  @proxify\n  async updateSessionMatchedContact(sessionId, contact) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.contactMatch = contact;\n      this._updateCurrentSessionAndSessions(session);\n    });\n  }\n\n  _addSession(session) {\n    this._sessions.set(session.id, session);\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _removeSession(session) {\n    this._cleanActiveSession(session);\n    this._sessions.delete(session.id);\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _setActiveSession(session) {\n    this._activeSession = session;\n    this.store.dispatch({\n      type: this.actionTypes.updateCurrentSession,\n      session: normalizeSession(session),\n    });\n  }\n\n  _removeActiveSession() {\n    this._activeSession = null;\n    this.store.dispatch({\n      type: this.actionTypes.destroyCurrentSession,\n    });\n  }\n\n  _cleanActiveSession(session) {\n    if (session !== this._activeSession) {\n      return;\n    }\n    this._removeActiveSession();\n  }\n\n  _updateCurrentSessionAndSessions(session) {\n    if (session === this._activeSession) {\n      this._updateCurrentSession(session);\n    }\n    this._updateSessions();\n  }\n\n  _updateCurrentSession(session) {\n    this.store.dispatch({\n      type: this.actionTypes.updateCurrentSession,\n      session: normalizeSession(session),\n    });\n  }\n\n  _updateSessions() {\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  @proxify\n  async toggleMinimized() {\n    this.store.dispatch({\n      type: this.actionTypes.toggleMinimized,\n    });\n  }\n\n  _resetMinimized() {\n    this.store.dispatch({\n      type: this.actionTypes.resetMinimized,\n    });\n  }\n\n  async _retrySleep() {\n    if (this.connectRetryCounts < 3) {\n      await sleep(FIRST_THREE_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 3) {\n      await sleep(FOURTH_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 4) {\n      await sleep(FIFTH_RETRIES_DELAY); // sleep 30 seconds\n    }\n    if (this.connectRetryCounts > 4) {\n      await sleep(MAX_RETRIES_DELAY); // sleep 30 seconds\n    }\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get activeSession() {\n    return this._activeSession;\n  }\n\n  get originalSessions() {\n    return this._sessions;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get minimized() {\n    return this.state.minimized;\n  }\n\n  get currentSession() {\n    return this.state.currentSession;\n  }\n\n  get sessions() {\n    return this.state.sessions;\n  }\n\n  get videoElementPrepared() {\n    return this.state.videoElementPrepared;\n  }\n\n  get enabled() {\n    return this._rolesAndPermissions.webphoneEnabled;\n  }\n\n  get connectionStatus() {\n    return this.state.connectionStatus;\n  }\n\n  get webphoneCounts() {\n    return this._storage.getItem(this._storageWebphoneCountsKey);\n  }\n\n  get userMedia() {\n    return this._globalStorage.getItem(this._userMediaStorageKey);\n  }\n\n  @proxify\n  async _onGetUserMediaSuccess() {\n    this.store.dispatch({\n      type: this.actionTypes.getUserMediaSuccess,\n    });\n  }\n  @proxify\n  async _onGetUserMediaError(error) {\n    this.store.dispatch({\n      type: this.actionTypes.getUserMediaError,\n      error,\n    });\n  }\n\n  get connectRetryCounts() {\n    return this.state.connectRetryCounts;\n  }\n\n  get acceptOptions() {\n    return {\n      media: {\n        render: {\n          remote: this._remoteVideo,\n          local: this._localVideo,\n        }\n      }\n    };\n  }\n\n  get errorCode() {\n    return this.state.errorCode;\n  }\n\n  get disconnecting() {\n    return this.connectionStatus === connectionStatus.disconnecting;\n  }\n\n  get connecting() {\n    return this.connectionStatus === connectionStatus.connecting;\n  }\n\n  get connected() {\n    return this.connectionStatus === connectionStatus.connected;\n  }\n\n  get connectFailed() {\n    return this.connectionStatus === connectionStatus.connectFailed;\n  }\n}\n"]}