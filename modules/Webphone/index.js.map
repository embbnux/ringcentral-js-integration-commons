{"version":3,"sources":["modules/Webphone/index.js"],"names":["FIRST_THREE_RETRIES_DELAY","FOURTH_RETRIES_DELAY","FIFTH_RETRIES_DELAY","MAX_RETRIES_DELAY","Webphone","appKey","appName","appVersion","alert","auth","client","rolesAndPermissions","webphoneLogLevel","storage","globalStorage","contactMatcher","extensionDevice","numberValidate","options","actionTypes","_appKey","_appName","_appVersion","_alert","_webphoneLogLevel","_auth","_client","_rolesAndPermissions","_extensionDevice","_storage","_globalStorage","_numberValidate","_storageWebphoneCountsKey","_userMediaStorageKey","_contactMatcher","_webphone","_remoteVideo","_localVideo","_activeSession","_sessions","_reducer","registerReducer","key","reducer","addSelector","sessions","outputs","forEach","session","push","to","from","addQuerySource","getQueriesFn","_selectors","sessionPhoneNumbers","readyCheckFn","ready","document","createElement","setAttribute","body","appendChild","store","dispatch","type","videoElementPrepared","window","readyState","addEventListener","_prepareVideoElement","_disconnect","subscribe","_onStateChange","userMedia","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","audio","_onGetUserMediaSuccess","error","_onGetUserMediaError","_shouldInit","initSuccess","_shouldReset","resetSuccess","disconnect","loggedIn","service","platform","post","sipInfo","transport","response","json","account","extension","device","list","devices","records","phoneLines","length","concat","provisionData","uuid","endpoingId","logLevel","audioHelper","enabled","incoming","outgoing","onRegistered","registered","onUnregistered","unregistered","onRegistrationFailed","needToReconnect","errorCode","console","userAgent","removeAllListeners","status_code","webphoneCountOverLimit","warning","message","registrationFailed","_connect","setVolume","on","once","debug","_onInvite","reconnect","_retrySleep","connectionStatus","connecting","connectFailed","resetRetryCounts","connect","_sipProvision","sipProvision","disconnecting","_createWebphone","ttl","allowDuplicates","indexOf","refreshServiceFeatures","notWebphonePermission","connectError","checkIsLoggedIn","disconnected","browserNotSupported","_fetchDL","notOutboundCallWithoutDL","log","checkDLError","connected","hangup","stop","unregister","_removeActiveSession","_updateSessions","triggerMatch","callStatus","_updateCurrentSessionAndSessions","finished","_removeSession","cause","newSession","replaced","direction","inbound","_addSession","onAccepted","isOnMute","onMute","onHold","creationTime","Date","now","_resetMinimized","updateCurrentSession","_onNewCall","sessionId","get","isOnHold","local","hold","_setActiveSession","_onAccepted","accept","acceptOptions","_sessionHandleWithId","reject","unhold","forwardNumber","validateNumbers","validatedResult","result","errors","forward","forwardError","ua","volume","mute","unmute","sessionItem","sessionItemId","id","startRecord","isOnRecord","stopRecord","park","transferNumber","transfer","invite","media","warmTransfer","flipValue","flip","dtmfValue","dtmf","e","terminate","toVoiceMail","toVoiceMailError","replyOptions","replyWithMessage","func","toNumber","fromNumber","homeCountryId","outbound","set","updateSessions","values","map","_cleanActiveSession","delete","destroyCurrentSession","_updateCurrentSession","toggleMinimized","resetMinimized","connectRetryCounts","getUserMediaSuccess","getUserMediaError","state","status","minimized","currentSession","webphoneEnabled","getItem","render","remote"],"mappings":"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","file":"index.js","sourcesContent":["import RingCentralWebphone from 'ringcentral-web-phone';\nimport incomingAudio from 'ringcentral-web-phone/audio/incoming.ogg';\nimport outgoingAudio from 'ringcentral-web-phone/audio/outgoing.ogg';\n\nimport RcModule from '../../lib/RcModule';\nimport sleep from '../../lib/sleep';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport connectionStatus from './connectionStatus';\nimport sessionStatus from './sessionStatus';\nimport actionTypes from './actionTypes';\nimport callDirections from '../../enums/callDirections';\nimport webphoneErrors from './webphoneErrors';\nimport callErrors from '../Call/callErrors';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\nimport {\n  isBrowerSupport,\n  patchUserAgent,\n  patchIncomingSession,\n  normalizeSession,\n} from './webphoneHelper';\nimport getWebphoneReducer, {\n  getWebphoneCountsReducer,\n  getUserMediaReducer,\n} from './getWebphoneReducer';\n\nconst FIRST_THREE_RETRIES_DELAY = 10 * 1000;\nconst FOURTH_RETRIES_DELAY = 30 * 1000;\nconst FIFTH_RETRIES_DELAY = 60 * 1000;\nconst MAX_RETRIES_DELAY = 2 * 60 * 1000;\n\nexport default class Webphone extends RcModule {\n  constructor({\n    appKey,\n    appName,\n    appVersion,\n    alert,\n    auth,\n    client,\n    rolesAndPermissions,\n    webphoneLogLevel = 3,\n    storage,\n    globalStorage,\n    contactMatcher,\n    extensionDevice,\n    numberValidate,\n    ...options,\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._appKey = appKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._alert = alert;\n    this._webphoneLogLevel = webphoneLogLevel;\n    this._auth = this::ensureExist(auth, 'auth');\n    this._client = this::ensureExist(client, 'client');\n    this._rolesAndPermissions = this::ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n    this._extensionDevice = this::ensureExist(extensionDevice, 'extensionDevice');\n    this._storage = this::ensureExist(storage, 'storage');\n    this._globalStorage = this::ensureExist(globalStorage, 'globalStorage');\n    this._numberValidate = this::ensureExist(numberValidate, 'numberValidate');\n    this._storageWebphoneCountsKey = 'webphoneCounts';\n    this._userMediaStorageKey = 'userMadia';\n    this._contactMatcher = contactMatcher;\n    this._webphone = null;\n    this._remoteVideo = null;\n    this._localVideo = null;\n\n    this._activeSession = null;\n    this._sessions = new Map();\n\n    this._reducer = getWebphoneReducer(this.actionTypes);\n\n    storage.registerReducer({\n      key: this._storageWebphoneCountsKey,\n      reducer: getWebphoneCountsReducer(this.actionTypes),\n    });\n    globalStorage.registerReducer({\n      key: this._userMediaStorageKey,\n      reducer: getUserMediaReducer(this.actionTypes),\n    });\n\n\n    this.addSelector('sessionPhoneNumbers',\n      () => this.sessions,\n      (sessions) => {\n        const outputs = [];\n        sessions.forEach((session) => {\n          outputs.push(session.to);\n          outputs.push(session.from);\n        });\n        return outputs;\n      }\n    );\n\n    if (this._contactMatcher) {\n      this._contactMatcher.addQuerySource({\n        getQueriesFn: this._selectors.sessionPhoneNumbers,\n        readyCheckFn: () => (\n          this.ready\n        ),\n      });\n    }\n  }\n\n  _prepareVideoElement() {\n    this._remoteVideo = document.createElement('video');\n    this._remoteVideo.setAttribute('hidden', 'hidden');\n    this._localVideo = document.createElement('video');\n    this._localVideo.setAttribute('hidden', 'hidden');\n    this._localVideo.setAttribute('muted', 'muted');\n    document.body.appendChild(this._remoteVideo);\n    document.body.appendChild(this._localVideo);\n\n    this.store.dispatch({\n      type: this.actionTypes.videoElementPrepared,\n    });\n  }\n  initialize() {\n    if (\n      typeof window !== 'undefined' &&\n      typeof document !== 'undefined'\n    ) {\n      if (document.readyState === 'loading') {\n        window.addEventListener('load', () => {\n          this._prepareVideoElement();\n        });\n      } else {\n        this._prepareVideoElement();\n      }\n      window.addEventListener('unload', () => {\n        this._disconnect();\n      });\n    }\n    this.store.subscribe(() => this._onStateChange());\n  }\n  initializeProxy() {\n    // TODO enhance to only try to get userMedia on webphone register?\n    if (\n      !this.userMedia\n    ) {\n      navigator.getUserMedia = navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia;\n      if (navigator.getUserMedia) {\n        navigator.getUserMedia({\n          audio: true,\n        }, () => {\n          this._onGetUserMediaSuccess();\n        }, (error) => {\n          this._onGetUserMediaError(error);\n        });\n      }\n    }\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n      this.disconnect();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      this._rolesAndPermissions.ready &&\n      this._extensionDevice.ready &&\n      this._storage.ready &&\n      this._globalStorage.ready &&\n      this._numberValidate.ready &&\n      !this.ready\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._auth.loggedIn ||\n        !this._rolesAndPermissions.ready ||\n        !this._storage.ready ||\n        !this._globalStorage.ready ||\n        !this._numberValidate.ready ||\n        !this._extensionDevice.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  @proxify\n  async _sipProvision() {\n    const response = await this._client.service.platform()\n      .post('/client-info/sip-provision', {\n        sipInfo: [{ transport: 'WSS' }]\n      });\n    return response.json();\n  }\n\n  async _fetchDL() {\n    const response = await this._client.account().extension().device().list();\n    const devices = response.records;\n    let phoneLines = [];\n    devices.forEach((device) => {\n      if (!device.phoneLines || device.phoneLines.length === 0) {\n        return;\n      }\n      phoneLines = phoneLines.concat(device.phoneLines);\n    });\n    return phoneLines;\n  }\n\n  _createWebphone(provisionData) {\n    this._webphone = new RingCentralWebphone(provisionData, {\n      appKey: this._appKey,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      uuid: this._auth.endpoingId,\n      logLevel: this._webphoneLogLevel, // error 0, warn 1, log: 2, debug: 3\n      audioHelper: {\n        enabled: true, // enables audio feedback when web phone is ringing or making a call\n        incoming: incomingAudio, // path to audio file for incoming call\n        outgoing: outgoingAudio, // path to aduotfile for outgoing call\n      }\n    });\n\n    const onRegistered = () => {\n      this.store.dispatch({\n        type: this.actionTypes.registered,\n      });\n    };\n    const onUnregistered = () => {\n      this.store.dispatch({\n        type: this.actionTypes.unregistered,\n      });\n    };\n    const onRegistrationFailed = (error) => {\n      let needToReconnect = true;\n      let errorCode;\n      console.error(error);\n      this._webphone.userAgent.removeAllListeners();\n      this._webphone = null;\n      if (error && error.status_code === 503) {\n        errorCode = webphoneErrors.webphoneCountOverLimit;\n        this._alert.warning({\n          message: errorCode,\n        });\n        needToReconnect = false;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.registrationFailed,\n        errorCode,\n        error,\n      });\n      if (needToReconnect) {\n        this._connect(needToReconnect);\n      }\n    };\n    this._webphone.userAgent.audioHelper.setVolume(0.3);\n    this._webphone.userAgent.on('registered', onRegistered);\n    this._webphone.userAgent.on('unregistered', onUnregistered);\n    this._webphone.userAgent.once('registrationFailed', onRegistrationFailed);\n    this._webphone.userAgent.on('invite', (session) => {\n      console.debug('UA invite');\n      this._onInvite(session);\n    });\n    patchUserAgent(this._webphone.userAgent);\n  }\n\n  @proxify\n  async _connect(reconnect = false) {\n    try {\n      if (reconnect) {\n        await this._retrySleep();\n      }\n\n      // do not connect if it is connecting\n      if (this.connectionStatus === connectionStatus.connecting) {\n        return;\n      }\n\n      // when reconnect is break by disconnect\n      if (reconnect && this.connectionStatus !== connectionStatus.connectFailed) {\n        this.store.dispatch({\n          type: this.actionTypes.resetRetryCounts,\n        });\n        return;\n      }\n\n      this.store.dispatch({\n        type: (\n          reconnect ?\n            this.actionTypes.reconnect : this.actionTypes.connect\n        )\n      });\n\n      const sipProvision = await this._sipProvision();\n\n      // do not continue if it is disconnecting\n      if (this.disconnecting) {\n        return;\n      }\n      this._createWebphone(sipProvision);\n    } catch (error) {\n      console.error(error);\n      this._alert.warning({\n        message: webphoneErrors.connectFailed,\n        ttl: 0,\n        allowDuplicates: false,\n      });\n      let needToReconnect = true;\n      let errorCode;\n      if (\n        error && error.message &&\n        (error.message.indexOf('Feature [WebPhone] is not available') > -1)\n      ) {\n        this._rolesAndPermissions.refreshServiceFeatures();\n        needToReconnect = false;\n        errorCode = webphoneErrors.notWebphonePermission;\n        return;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n        errorCode,\n        error,\n      });\n      if (needToReconnect) {\n        await this._connect(needToReconnect);\n      }\n    }\n  }\n  @proxify\n  async connect() {\n    if (\n      (await this._auth.checkIsLoggedIn()) &&\n      this.enabled &&\n      this.connectionStatus === connectionStatus.disconnected\n    ) {\n      if (!isBrowerSupport()) {\n        this.store.dispatch({\n          type: this.actionTypes.connectError,\n          errorCode: webphoneErrors.browserNotSupported,\n        });\n        this._alert.warning({\n          message: webphoneErrors.browserNotSupported,\n          ttl: 0,\n        });\n        return;\n      }\n      try {\n        const phoneLines = await this._fetchDL();\n        if (phoneLines.length === 0) {\n          this.store.dispatch({\n            type: this.actionTypes.connectError,\n            errorCode: webphoneErrors.notOutboundCallWithoutDL,\n          });\n          this._alert.warning({\n            message: webphoneErrors.notOutboundCallWithoutDL,\n          });\n        }\n      } catch (error) {\n        console.log(error);\n        this.store.dispatch({\n          type: this.actionTypes.connectError,\n          errorCode: webphoneErrors.checkDLError,\n        });\n        this._alert.warning({\n          message: webphoneErrors.checkDLError,\n        });\n      }\n      await this._connect();\n    }\n  }\n  _disconnect() {\n    if (\n      this.connectionStatus === connectionStatus.connected ||\n      this.connectionStatus === connectionStatus.connecting ||\n      this.connectionStatus === connectionStatus.connectFailed\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.disconnect,\n      });\n      if (this._webphone) {\n        this._sessions.forEach((session) => {\n          this.hangup(session);\n        });\n        if (this._webphone.userAgent) {\n          this._webphone.userAgent.stop();\n          this._webphone.userAgent.unregister();\n        }\n        this._webphone = null;\n        this._activeSession = null;\n        this._sessions = new Map();\n        this._removeActiveSession();\n        this._updateSessions();\n      }\n      this.store.dispatch({\n        type: this.actionTypes.unregistered,\n      });\n    }\n  }\n  @proxify\n  async disconnect() {\n    this._disconnect();\n  }\n\n  _onNewCall() {\n    if (this._contactMatcher) {\n      this._contactMatcher.triggerMatch();\n    }\n  }\n\n  _onAccepted(session) {\n    session.on('accepted', () => {\n      console.log('accepted');\n      session.callStatus = sessionStatus.connected;\n      this._updateCurrentSessionAndSessions(session);\n    });\n    session.on('progress', () => {\n      console.log('progress...');\n      session.callStatus = sessionStatus.connecting;\n      this._updateCurrentSessionAndSessions(session);\n    });\n    session.on('rejected', () => {\n      console.log('rejected');\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n    });\n    session.on('failed', (response, cause) => {\n      console.log('Event: Failed');\n      console.log(cause);\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n    });\n    session.on('cancel', () => {\n      console.log('Event: Cancel');\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n    });\n    session.on('refer', () => {\n      console.log('Event: Refer');\n    });\n    session.on('replaced', (newSession) => {\n      session.callStatus = sessionStatus.replaced;\n      newSession.callStatus = sessionStatus.connected;\n      newSession.direction = callDirections.inbound;\n      this._addSession(newSession);\n      this.onAccepted(newSession);\n    });\n    session.on('muted', () => {\n      console.log('Event: Muted');\n      session.isOnMute = true;\n      session.callStatus = sessionStatus.onMute;\n    });\n    session.on('unmuted', () => {\n      console.log('Event: Unmuted');\n      session.isOnMute = false;\n      session.callStatus = sessionStatus.connected;\n    });\n    session.on('hold', () => {\n      console.log('Event: hold');\n      session.callStatus = sessionStatus.onHold;\n    });\n    session.on('unhold', () => {\n      console.log('Event: unhold');\n      session.callStatus = sessionStatus.connected;\n    });\n  }\n\n  _onInvite(session) {\n    session.creationTime = Date.now();\n    session.direction = callDirections.inbound;\n    session.callStatus = sessionStatus.connecting;\n    if (!this._activeSession) {\n      this._activeSession = session;\n      this._resetMinimized();\n      this.store.dispatch({\n        type: this.actionTypes.updateCurrentSession,\n        session: normalizeSession(session),\n      });\n    }\n    patchIncomingSession(session);\n    this._addSession(session);\n    session.on('rejected', () => {\n      console.log('Event: Rejected');\n      this._removeSession(session);\n    });\n    this._onNewCall();\n  }\n\n  @proxify\n  async answer(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      if (\n        this._activeSession && !this._activeSession.isOnHold().local &&\n        this._activeSession !== session\n      ) {\n        this._activeSession.hold();\n      }\n      this._setActiveSession(session);\n      this._onAccepted(session, 'inbound');\n      await session.accept(this.acceptOptions);\n      this._resetMinimized();\n    } catch (e) {\n      console.log('Accept failed');\n      this._removeSession(session);\n      this._removeActiveSession();\n    }\n  }\n  @proxify\n  async reject(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.reject();\n    });\n  }\n  @proxify\n  async resume(sessionId) {\n    this.unhold(sessionId);\n    this._resetMinimized();\n  }\n  @proxify\n  async forward(sessionId, forwardNumber) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    try {\n      const validatedResult\n        = await this._numberValidate.validateNumbers([forwardNumber]);\n      if (!validatedResult.result) {\n        validatedResult.errors.forEach((error) => {\n          this._alert.warning({\n            message: callErrors[error.type]\n          });\n        });\n        return false;\n      }\n      await session.forward(forwardNumber, this.acceptOptions);\n      console.log('Forwarded');\n      this._removeSession(session);\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.forwardError\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async increaseVolume(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.ua.audioHelper.setVolume(\n        (session.ua.audioHelper.volume != null ? session.ua.audioHelper.volume : 0.5) + 0.1\n      );\n    });\n  }\n  @proxify\n  async decreaseVolume(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.ua.audioHelper.setVolume(\n        (session.ua.audioHelper.volume != null ? session.ua.audioHelper.volume : 0.5) - 0.1\n      );\n    });\n  }\n  @proxify\n  async mute(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.isOnMute = true;\n      session.mute();\n      this._updateCurrentSessionAndSessions(session);\n    });\n  }\n  @proxify\n  async unmute(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.isOnMute = false;\n      session.unmute();\n      this._updateCurrentSessionAndSessions(session);\n    });\n  }\n\n  @proxify\n  async hold(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.hold();\n      this._updateCurrentSessionAndSessions(session);\n    });\n  }\n\n  @proxify\n  async unhold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    if (session.isOnHold().local) {\n      session.unhold();\n    }\n    this._sessions.forEach((sessionItem, sessionItemId) => {\n      if (session.id !== sessionItemId) {\n        if (!sessionItem.isOnHold().local) {\n          sessionItem.hold();\n        }\n      }\n    });\n    this._setActiveSession(session);\n    this._updateCurrentSessionAndSessions(session);\n  }\n\n  @proxify\n  async startRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.startRecord();\n      session.isOnRecord = true;\n      console.log('Recording Started');\n    } catch (e) {\n      session.isOnRecord = false;\n      console.error(e);\n    }\n    this._updateCurrentSessionAndSessions(session);\n  }\n\n  @proxify\n  async stopRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.stopRecord();\n      session.isOnRecord = false;\n      console.log('Recording Stopped');\n    } catch (e) {\n      session.isOnRecord = true;\n      console.error(e);\n    }\n    this._updateCurrentSessionAndSessions(session);\n  }\n\n  @proxify\n  async park(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.park();\n      console.log('Parked');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async transfer(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.transfer(transferNumber);\n      console.log('Transferred');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async transferWarm(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.hold();\n      const newSession = session.ua.invite(transferNumber, {\n        media: this.acceptOptions.media\n      });\n      newSession.once('accepted', async () => {\n        try {\n          await session.warmTransfer(newSession);\n          console.log('Transferred');\n        } catch (e) {\n          console.error(e);\n        }\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async flip(flipValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.flip(flipValue);\n      console.log('Flipped');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async sendDTMF(dtmfValue, sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      try {\n        session.dtmf(dtmfValue);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  @proxify\n  async hangup(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      try {\n        session.terminate();\n      } catch (e) {\n        console.error(e);\n        this._removeSession(session);\n      }\n    });\n  }\n\n  @proxify\n  async toVoiceMail(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      try {\n        session.toVoiceMail();\n      } catch (e) {\n        console.error(e);\n        // this._removeSession(session);\n        this._alert.warning({\n          message: webphoneErrors.toVoiceMailError\n        });\n      }\n    });\n  }\n\n  @proxify\n  async replyWithMessage(sessionId, replyOptions) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      try {\n        session.replyWithMessage(replyOptions);\n      } catch (e) {\n        console.error(e);\n        this._removeSession(session);\n      }\n    });\n  }\n\n  _sessionHandleWithId(sessionId, func) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return null;\n    }\n    return func(session);\n  }\n\n  @proxify\n  async makeCall({ toNumber, fromNumber, homeCountryId }) {\n    if (!this._webphone) {\n      this._alert.warning({\n        message: this.errorCode,\n      });\n      return;\n    }\n    const phoneLines = await this._fetchDL();\n    if (phoneLines.length === 0) {\n      this._alert.warning({\n        message: webphoneErrors.notOutboundCallWithoutDL,\n      });\n      return;\n    }\n    const session = this._webphone.userAgent.invite(toNumber, {\n      media: this.acceptOptions.media,\n      fromNumber,\n      homeCountryId,\n    });\n    session.direction = callDirections.outbound;\n    session.callStatus = sessionStatus.connecting;\n    session.creationTime = Date.now();\n    this._onAccepted(session);\n    if (this._activeSession && !this._activeSession.isOnHold().local) {\n      this._activeSession.hold();\n    }\n    this._addSession(session);\n    this._setActiveSession(session);\n    this._resetMinimized();\n    this._onNewCall();\n    return session;\n  }\n\n  _addSession(session) {\n    this._sessions.set(session.id, session);\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _removeSession(session) {\n    this._cleanActiveSession(session);\n    this._sessions.delete(session.id);\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _setActiveSession(session) {\n    this._activeSession = session;\n    this.store.dispatch({\n      type: this.actionTypes.updateCurrentSession,\n      session: normalizeSession(session),\n    });\n  }\n\n  _removeActiveSession() {\n    this._activeSession = null;\n    this.store.dispatch({\n      type: this.actionTypes.destroyCurrentSession,\n    });\n  }\n\n  _cleanActiveSession(session) {\n    if (session !== this._activeSession) {\n      return;\n    }\n    this._removeActiveSession();\n  }\n\n  _updateCurrentSessionAndSessions(session) {\n    if (session === this._activeSession) {\n      this._updateCurrentSession(session);\n    }\n    this._updateSessions();\n  }\n\n  _updateCurrentSession(session) {\n    this.store.dispatch({\n      type: this.actionTypes.updateCurrentSession,\n      session: normalizeSession(session),\n    });\n  }\n\n  _updateSessions() {\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  @proxify\n  async toggleMinimized() {\n    this.store.dispatch({\n      type: this.actionTypes.toggleMinimized,\n    });\n  }\n\n  _resetMinimized() {\n    this.store.dispatch({\n      type: this.actionTypes.resetMinimized,\n    });\n  }\n\n  async _retrySleep() {\n    if (this.connectRetryCounts < 3) {\n      await sleep(FIRST_THREE_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 3) {\n      await sleep(FOURTH_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 4) {\n      await sleep(FIFTH_RETRIES_DELAY); // sleep 30 seconds\n    }\n    if (this.connectRetryCounts > 4) {\n      await sleep(MAX_RETRIES_DELAY); // sleep 30 seconds\n    }\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get activeSession() {\n    return this._activeSession;\n  }\n\n  get originalSessions() {\n    return this._sessions;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get minimized() {\n    return this.state.minimized;\n  }\n\n  get currentSession() {\n    return this.state.currentSession;\n  }\n\n  get sessions() {\n    return this.state.sessions;\n  }\n\n  get videoElementPrepared() {\n    return this.state.videoElementPrepared;\n  }\n\n  get enabled() {\n    return this._rolesAndPermissions.webphoneEnabled;\n  }\n\n  get connectionStatus() {\n    return this.state.connectionStatus;\n  }\n\n  get webphoneCounts() {\n    return this._storage.getItem(this._storageWebphoneCountsKey);\n  }\n\n  get userMedia() {\n    return this._globalStorage.getItem(this._userMediaStorageKey);\n  }\n\n  @proxify\n  async _onGetUserMediaSuccess() {\n    this.store.dispatch({\n      type: this.actionTypes.getUserMediaSuccess,\n    });\n  }\n  @proxify\n  async _onGetUserMediaError(error) {\n    this.store.dispatch({\n      type: this.actionTypes.getUserMediaError,\n      error,\n    });\n  }\n\n  get connectRetryCounts() {\n    return this.state.connectRetryCounts;\n  }\n\n  get acceptOptions() {\n    return {\n      media: {\n        render: {\n          remote: this._remoteVideo,\n          local: this._localVideo,\n        }\n      }\n    };\n  }\n\n  get errorCode() {\n    return this.state.errorCode;\n  }\n\n  get disconnecting() {\n    return this.connectionStatus === connectionStatus.disconnecting;\n  }\n\n  get connecting() {\n    return this.connectionStatus === connectionStatus.connecting;\n  }\n\n  get connected() {\n    return this.connectionStatus === connectionStatus.connected;\n  }\n\n  get connectFailed() {\n    return this.connectionStatus === connectionStatus.connectFailed;\n  }\n}\n"]}