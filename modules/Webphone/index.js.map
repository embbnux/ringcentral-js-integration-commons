{"version":3,"sources":["modules/Webphone/index.js"],"names":["FIRST_THREE_RETRIES_DELAY","FOURTH_RETRIES_DELAY","FIFTH_RETRIES_DELAY","MAX_RETRIES_DELAY","Webphone","appKey","appName","appVersion","alert","auth","client","rolesAndPermissions","webphoneLogLevel","storage","contactMatcher","extensionDevice","options","actionTypes","_appKey","_appName","_appVersion","_alert","_webphoneLogLevel","_auth","_client","_rolesAndPermissions","_extensionDevice","_storage","_storageWebphoneCountsKey","_contactMatcher","_webphone","_remoteVideo","_localVideo","_activeSession","_sessions","_reducer","registerReducer","key","reducer","addSelector","sessions","outputs","forEach","session","push","to","from","addQuerySource","getQueriesFn","_selectors","sessionPhoneNumbers","readyCheckFn","ready","document","createElement","setAttribute","body","appendChild","store","dispatch","type","videoElementPrepared","window","readyState","addEventListener","_prepareVideoElement","_disconnect","subscribe","_onStateChange","_shouldInit","initSuccess","_shouldReset","resetSuccess","disconnect","loggedIn","service","platform","post","sipInfo","transport","response","json","provisionData","uuid","endpoingId","logLevel","audioHelper","enabled","incoming","outgoing","onRegistered","registered","onUnregistered","unregistered","onRegistrationFailed","error","needToReconnect","errorCode","console","userAgent","removeAllListeners","status_code","webphoneCountOverLimit","warning","message","registrationFailed","_connect","setVolume","on","once","debug","_onInvite","reconnect","_retrySleep","connectionStatus","connecting","connectFailed","resetRetryCounts","connect","_sipProvision","sipProvision","disconnecting","_createWebphone","ttl","allowDuplicates","indexOf","refreshServiceFeatures","notWebphonePermission","connectError","checkIsLoggedIn","disconnected","browserNotSupported","phoneLines","length","notOutboundCallWithoutDL","connected","hangup","stop","unregister","_removeActiveSession","_updateSessions","triggerMatch","log","callStatus","_updateCurrentSessionAndSessions","finished","_removeSession","cause","newSession","replaced","direction","inbound","_addSession","onAccepted","isOnMute","onMute","onHold","creationTime","Date","now","updateCurrentSession","_onNewCall","sessionId","get","isOnHold","local","hold","_setActiveSession","_onAccepted","accept","acceptOptions","_resetMinimized","_sessionHandleWithId","reject","unhold","forwardNumber","forward","ua","volume","mute","unmute","sessionItem","sessionItemId","id","startRecord","isOnRecord","stopRecord","park","transferNumber","transfer","invite","media","warmTransfer","flipValue","flip","dtmfValue","dtmf","e","terminate","toVoiceMail","replyOptions","replyWithMessage","func","toNumber","fromNumber","homeCountryId","outbound","set","updateSessions","values","map","_cleanActiveSession","delete","destroyCurrentSession","_updateCurrentSession","toggleMinimized","resetMinimized","connectRetryCounts","state","status","minimized","currentSession","webphoneEnabled","getItem","render","remote"],"mappings":"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","file":"index.js","sourcesContent":["import RingCentralWebphone from 'ringcentral-web-phone';\nimport incomingAudio from 'ringcentral-web-phone/audio/incoming.ogg';\nimport outgoingAudio from 'ringcentral-web-phone/audio/outgoing.ogg';\n\nimport RcModule from '../../lib/RcModule';\nimport sleep from '../../lib/sleep';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport connectionStatus from './connectionStatus';\nimport sessionStatus from './sessionStatus';\nimport actionTypes from './actionTypes';\nimport callDirections from '../../enums/callDirections';\nimport webphoneErrors from './webphoneErrors';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\nimport {\n  isBrowerSupport,\n  patchUserAgent,\n  patchIncomingSession,\n  normalizeSession,\n} from './webphoneHelper';\nimport getWebphoneReducer, { getWebphoneCountsReducer } from './getWebphoneReducer';\n\nconst FIRST_THREE_RETRIES_DELAY = 10 * 1000;\nconst FOURTH_RETRIES_DELAY = 30 * 1000;\nconst FIFTH_RETRIES_DELAY = 60 * 1000;\nconst MAX_RETRIES_DELAY = 2 * 60 * 1000;\n\nexport default class Webphone extends RcModule {\n  constructor({\n    appKey,\n    appName,\n    appVersion,\n    alert,\n    auth,\n    client,\n    rolesAndPermissions,\n    webphoneLogLevel = 3,\n    storage,\n    contactMatcher,\n    extensionDevice,\n    ...options,\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._appKey = appKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._alert = alert;\n    this._webphoneLogLevel = webphoneLogLevel;\n    this._auth = ensureExist(auth, 'auth');\n    this._client = ensureExist(client, 'client');\n    this._rolesAndPermissions = ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n    this._extensionDevice = ensureExist(extensionDevice, 'extensionDevice');\n    this._storage = storage;\n    this._storageWebphoneCountsKey = 'webphoneCounts';\n    this._contactMatcher = contactMatcher;\n    this._webphone = null;\n    this._remoteVideo = null;\n    this._localVideo = null;\n\n    this._activeSession = null;\n    this._sessions = new Map();\n\n    this._reducer = getWebphoneReducer(this.actionTypes);\n\n    storage.registerReducer({\n      key: this._storageWebphoneCountsKey,\n      reducer: getWebphoneCountsReducer(this.actionTypes),\n    });\n\n    this.addSelector('sessionPhoneNumbers',\n      () => this.sessions,\n      (sessions) => {\n        const outputs = [];\n        sessions.forEach((session) => {\n          outputs.push(session.to);\n          outputs.push(session.from);\n        });\n        return outputs;\n      }\n    );\n\n    if (this._contactMatcher) {\n      this._contactMatcher.addQuerySource({\n        getQueriesFn: this._selectors.sessionPhoneNumbers,\n        readyCheckFn: () => (\n          this.ready\n        ),\n      });\n    }\n  }\n\n  _prepareVideoElement() {\n    this._remoteVideo = document.createElement('video');\n    this._remoteVideo.setAttribute('hidden', 'hidden');\n    this._localVideo = document.createElement('video');\n    this._localVideo.setAttribute('hidden', 'hidden');\n    this._localVideo.setAttribute('muted', 'muted');\n    document.body.appendChild(this._remoteVideo);\n    document.body.appendChild(this._localVideo);\n\n    this.store.dispatch({\n      type: this.actionTypes.videoElementPrepared,\n    });\n  }\n  initialize() {\n    if (\n      typeof window !== 'undefined' &&\n      typeof document !== 'undefined'\n    ) {\n      if (document.readyState === 'loading') {\n        window.addEventListener('load', () => {\n          this._prepareVideoElement();\n        });\n      } else {\n        this._prepareVideoElement();\n      }\n      window.addEventListener('unload', () => {\n        this._disconnect();\n      });\n    }\n    this.store.subscribe(() => this._onStateChange());\n  }\n  // initializeProxy() {\n  //   navigator.webkitGetUserMedia({ audio: true });\n  // }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n      this.disconnect();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      this._rolesAndPermissions.ready &&\n      this._extensionDevice.ready &&\n      !this.ready\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._auth.loggedIn ||\n        !this._rolesAndPermissions.ready ||\n        !this._extensionDevice.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  @proxify\n  async _sipProvision() {\n    const response = await this._client.service.platform()\n      .post('/client-info/sip-provision', {\n        sipInfo: [{ transport: 'WSS' }]\n      });\n    return response.json();\n  }\n\n  _createWebphone(provisionData) {\n    this._webphone = new RingCentralWebphone(provisionData, {\n      appKey: this._appKey,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      uuid: this._auth.endpoingId,\n      logLevel: this._webphoneLogLevel, // error 0, warn 1, log: 2, debug: 3\n      audioHelper: {\n        enabled: true, // enables audio feedback when web phone is ringing or making a call\n        incoming: incomingAudio, // path to audio file for incoming call\n        outgoing: outgoingAudio, // path to aduotfile for outgoing call\n      }\n    });\n\n    const onRegistered = () => {\n      this.store.dispatch({\n        type: this.actionTypes.registered,\n      });\n    };\n    const onUnregistered = () => {\n      this.store.dispatch({\n        type: this.actionTypes.unregistered,\n      });\n    };\n    const onRegistrationFailed = (error) => {\n      let needToReconnect = true;\n      let errorCode;\n      console.error(error);\n      this._webphone.userAgent.removeAllListeners();\n      this._webphone = null;\n      if (error && error.status_code === 503) {\n        errorCode = webphoneErrors.webphoneCountOverLimit;\n        this._alert.warning({\n          message: errorCode,\n        });\n        needToReconnect = false;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.registrationFailed,\n        errorCode,\n        error,\n      });\n      if (needToReconnect) {\n        this._connect(needToReconnect);\n      }\n    };\n    this._webphone.userAgent.audioHelper.setVolume(0.3);\n    this._webphone.userAgent.on('registered', onRegistered);\n    this._webphone.userAgent.on('unregistered', onUnregistered);\n    this._webphone.userAgent.once('registrationFailed', onRegistrationFailed);\n    this._webphone.userAgent.on('invite', (session) => {\n      console.debug('UA invite');\n      this._onInvite(session);\n    });\n    patchUserAgent(this._webphone.userAgent);\n  }\n\n  @proxify\n  async _connect(reconnect = false) {\n    try {\n      if (reconnect) {\n        await this._retrySleep();\n      }\n\n      // do not connect if it is connecting\n      if (this.connectionStatus === connectionStatus.connecting) {\n        return;\n      }\n\n      // when reconnect is break by disconnect\n      if (reconnect && this.connectionStatus !== connectionStatus.connectFailed) {\n        this.store.dispatch({\n          type: this.actionTypes.resetRetryCounts,\n        });\n        return;\n      }\n\n      this.store.dispatch({\n        type: (\n          reconnect ?\n            this.actionTypes.reconnect : this.actionTypes.connect\n        )\n      });\n\n      const sipProvision = await this._sipProvision();\n\n      // do not continue if it is disconnecting\n      if (this.connectionStatus === connectionStatus.disconnecting) {\n        return;\n      }\n      this._createWebphone(sipProvision);\n    } catch (error) {\n      console.error(error);\n      this._alert.warning({\n        message: webphoneErrors.connectFailed,\n        ttl: 0,\n        allowDuplicates: false,\n      });\n      let needToReconnect = true;\n      let errorCode;\n      if (\n        error && error.message &&\n        (error.message.indexOf('Feature [WebPhone] is not available') > -1)\n      ) {\n        this._rolesAndPermissions.refreshServiceFeatures();\n        needToReconnect = false;\n        errorCode = webphoneErrors.notWebphonePermission;\n        return;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n        errorCode,\n        error,\n      });\n      if (needToReconnect) {\n        await this._connect(needToReconnect);\n      }\n    }\n  }\n  @proxify\n  async connect() {\n    if (\n      (await this._auth.checkIsLoggedIn()) &&\n      this.enabled &&\n      this.connectionStatus === connectionStatus.disconnected\n    ) {\n      if (!isBrowerSupport()) {\n        this.store.dispatch({\n          type: this.actionTypes.connectError,\n          errorCode: webphoneErrors.browserNotSupported,\n        });\n        this._alert.warning({\n          message: webphoneErrors.browserNotSupported,\n          ttl: 0,\n        });\n        return;\n      }\n      if (this._extensionDevice.phoneLines.length === 0) {\n        this.store.dispatch({\n          type: this.actionTypes.connectError,\n          errorCode: webphoneErrors.notOutboundCallWithoutDL,\n        });\n        this._alert.warning({\n          message: webphoneErrors.notOutboundCallWithoutDL,\n        });\n      }\n      await this._connect();\n    }\n  }\n  _disconnect() {\n    if (\n      this.connectionStatus === connectionStatus.connected ||\n      this.connectionStatus === connectionStatus.connecting ||\n      this.connectionStatus === connectionStatus.connectFailed\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.disconnect,\n      });\n      if (this._webphone) {\n        this._sessions.forEach((session) => {\n          this.hangup(session);\n        });\n        if (this._webphone.userAgent) {\n          this._webphone.userAgent.stop();\n          this._webphone.userAgent.unregister();\n        }\n        this._webphone = null;\n        this._activeSession = null;\n        this._sessions = new Map();\n        this._removeActiveSession();\n        this._updateSessions();\n      }\n      this.store.dispatch({\n        type: this.actionTypes.unregistered,\n      });\n    }\n  }\n  @proxify\n  async disconnect() {\n    this._disconnect();\n  }\n\n  _onNewCall() {\n    if (this._contactMatcher) {\n      this._contactMatcher.triggerMatch();\n    }\n  }\n\n  _onAccepted(session) {\n    session.on('accepted', () => {\n      console.log('accepted');\n      session.callStatus = sessionStatus.connected;\n      this._updateCurrentSessionAndSessions(session);\n    });\n    session.on('progress', () => {\n      console.log('progress...');\n      session.callStatus = sessionStatus.connecting;\n      this._updateCurrentSessionAndSessions(session);\n    });\n    session.on('rejected', () => {\n      console.log('rejected');\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n    });\n    session.on('failed', (response, cause) => {\n      console.log('Event: Failed');\n      console.log(cause);\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n    });\n    session.on('cancel', () => {\n      console.log('Event: Cancel');\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n    });\n    session.on('refer', () => {\n      console.log('Event: Refer');\n    });\n    session.on('replaced', (newSession) => {\n      session.callStatus = sessionStatus.replaced;\n      newSession.callStatus = sessionStatus.connected;\n      newSession.direction = callDirections.inbound;\n      this._addSession(newSession);\n      this.onAccepted(newSession);\n    });\n    session.on('muted', () => {\n      console.log('Event: Muted');\n      session.isOnMute = true;\n      session.callStatus = sessionStatus.onMute;\n    });\n    session.on('unmuted', () => {\n      console.log('Event: Unmuted');\n      session.isOnMute = false;\n      session.callStatus = sessionStatus.connected;\n    });\n    session.on('hold', () => {\n      console.log('Event: hold');\n      session.callStatus = sessionStatus.onHold;\n    });\n    session.on('unhold', () => {\n      console.log('Event: unhold');\n      session.callStatus = sessionStatus.connected;\n    });\n  }\n\n  _onInvite(session) {\n    session.creationTime = Date.now();\n    session.direction = callDirections.inbound;\n    session.callStatus = sessionStatus.connecting;\n    if (!this._activeSession) {\n      this._activeSession = session;\n      this.store.dispatch({\n        type: this.actionTypes.updateCurrentSession,\n        session: normalizeSession(session),\n      });\n    }\n    patchIncomingSession(session);\n    this._addSession(session);\n    session.on('rejected', () => {\n      console.log('Event: Rejected');\n      this._removeSession(session);\n    });\n    this._onNewCall();\n  }\n\n  @proxify\n  async answer(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      if (\n        this._activeSession && !this._activeSession.isOnHold().local &&\n        this._activeSession !== session\n      ) {\n        this._activeSession.hold();\n      }\n      this._setActiveSession(session);\n      this._onAccepted(session, 'inbound');\n      await session.accept(this.acceptOptions);\n      this._resetMinimized();\n    } catch (e) {\n      console.log('Accept failed');\n      this._removeSession(session);\n      this._removeActiveSession();\n    }\n  }\n  @proxify\n  async reject(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.reject();\n    });\n  }\n  @proxify\n  async resume(sessionId) {\n    this.unhold(sessionId);\n    this._resetMinimized();\n  }\n  @proxify\n  async forward(forwardNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.forward(forwardNumber, this.acceptOptions);\n      console.log('Forwarded');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  @proxify\n  async increaseVolume(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.ua.audioHelper.setVolume(\n        (session.ua.audioHelper.volume != null ? session.ua.audioHelper.volume : 0.5) + 0.1\n      );\n    });\n  }\n  @proxify\n  async decreaseVolume(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.ua.audioHelper.setVolume(\n        (session.ua.audioHelper.volume != null ? session.ua.audioHelper.volume : 0.5) - 0.1\n      );\n    });\n  }\n  @proxify\n  async mute(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.isOnMute = true;\n      session.mute();\n      this._updateCurrentSessionAndSessions(session);\n    });\n  }\n  @proxify\n  async unmute(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.isOnMute = false;\n      session.unmute();\n      this._updateCurrentSessionAndSessions(session);\n    });\n  }\n\n  @proxify\n  async hold(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.hold();\n      this._updateCurrentSessionAndSessions(session);\n    });\n  }\n\n  @proxify\n  async unhold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    if (session.isOnHold().local) {\n      session.unhold();\n    }\n    this._sessions.forEach((sessionItem, sessionItemId) => {\n      if (session.id !== sessionItemId) {\n        if (!sessionItem.isOnHold().local) {\n          sessionItem.hold();\n        }\n      }\n    });\n    this._setActiveSession(session);\n    this._updateCurrentSessionAndSessions(session);\n  }\n\n  @proxify\n  async startRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.startRecord();\n      session.isOnRecord = true;\n      console.log('Recording Started');\n    } catch (e) {\n      session.isOnRecord = false;\n      console.error(e);\n    }\n    this._updateCurrentSessionAndSessions(session);\n  }\n\n  @proxify\n  async stopRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.stopRecord();\n      session.isOnRecord = false;\n      console.log('Recording Stopped');\n    } catch (e) {\n      session.isOnRecord = true;\n      console.error(e);\n    }\n    this._updateCurrentSessionAndSessions(session);\n  }\n\n  @proxify\n  async park(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.park();\n      console.log('Parked');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async transfer(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.transfer(transferNumber);\n      console.log('Transferred');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async transferWarm(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.hold();\n      const newSession = session.ua.invite(transferNumber, {\n        media: this.acceptOptions.media\n      });\n      newSession.once('accepted', async () => {\n        try {\n          await session.warmTransfer(newSession);\n          console.log('Transferred');\n        } catch (e) {\n          console.error(e);\n        }\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async flip(flipValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.flip(flipValue);\n      console.log('Flipped');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async sendDTMF(dtmfValue, sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      try {\n        session.dtmf(dtmfValue);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  @proxify\n  async hangup(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      try {\n        session.terminate();\n      } catch (e) {\n        console.error(e);\n        this._removeSession(session);\n      }\n    });\n  }\n\n  @proxify\n  async toVoiceMail(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      try {\n        session.toVoiceMail();\n      } catch (e) {\n        console.error(e);\n        this._removeSession(session);\n      }\n    });\n  }\n\n  @proxify\n  async replyWithMessage(sessionId, replyOptions) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      try {\n        session.replyWithMessage(replyOptions);\n      } catch (e) {\n        console.error(e);\n        this._removeSession(session);\n      }\n    });\n  }\n\n  _sessionHandleWithId(sessionId, func) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return null;\n    }\n    return func(session);\n  }\n\n  @proxify\n  async makeCall({ toNumber, fromNumber, homeCountryId }) {\n    if (!this._webphone) {\n      this._alert.warning({\n        message: this.errorCode,\n      });\n      return;\n    }\n    if (this._extensionDevice.phoneLines.length === 0) {\n      this._alert.warning({\n        message: webphoneErrors.notOutboundCallWithoutDL,\n      });\n      return;\n    }\n    const session = this._webphone.userAgent.invite(toNumber, {\n      media: this.acceptOptions.media,\n      fromNumber,\n      homeCountryId,\n    });\n    session.direction = callDirections.outbound;\n    session.callStatus = sessionStatus.connecting;\n    session.creationTime = Date.now();\n    this._onAccepted(session);\n    if (this._activeSession && !this._activeSession.isOnHold().local) {\n      this._activeSession.hold();\n    }\n    this._addSession(session);\n    this._setActiveSession(session);\n    this._resetMinimized();\n    this._onNewCall();\n    return session;\n  }\n\n  _addSession(session) {\n    this._sessions.set(session.id, session);\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _removeSession(session) {\n    this._cleanActiveSession(session);\n    this._sessions.delete(session.id);\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _setActiveSession(session) {\n    this._activeSession = session;\n    this.store.dispatch({\n      type: this.actionTypes.updateCurrentSession,\n      session: normalizeSession(session),\n    });\n  }\n\n  _removeActiveSession() {\n    this._activeSession = null;\n    this.store.dispatch({\n      type: this.actionTypes.destroyCurrentSession,\n    });\n  }\n\n  _cleanActiveSession(session) {\n    if (session !== this._activeSession) {\n      return;\n    }\n    this._removeActiveSession();\n  }\n\n  _updateCurrentSessionAndSessions(session) {\n    if (session === this._activeSession) {\n      this._updateCurrentSession(session);\n    }\n    this._updateSessions();\n  }\n\n  _updateCurrentSession(session) {\n    this.store.dispatch({\n      type: this.actionTypes.updateCurrentSession,\n      session: normalizeSession(session),\n    });\n  }\n\n  _updateSessions() {\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  @proxify\n  async toggleMinimized() {\n    this.store.dispatch({\n      type: this.actionTypes.toggleMinimized,\n    });\n  }\n\n  _resetMinimized() {\n    this.store.dispatch({\n      type: this.actionTypes.resetMinimized,\n    });\n  }\n\n  async _retrySleep() {\n    if (this.connectRetryCounts < 3) {\n      await sleep(FIRST_THREE_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 3) {\n      await sleep(FOURTH_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 4) {\n      await sleep(FIFTH_RETRIES_DELAY); // sleep 30 seconds\n    }\n    if (this.connectRetryCounts > 4) {\n      await sleep(MAX_RETRIES_DELAY); // sleep 30 seconds\n    }\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get activeSession() {\n    return this._activeSession;\n  }\n\n  get originalSessions() {\n    return this._sessions;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get minimized() {\n    return this.state.minimized;\n  }\n\n  get currentSession() {\n    return this.state.currentSession;\n  }\n\n  get sessions() {\n    return this.state.sessions;\n  }\n\n  get videoElementPrepared() {\n    return this.state.videoElementPrepared;\n  }\n\n  get enabled() {\n    return this._rolesAndPermissions.webphoneEnabled;\n  }\n\n  get connectionStatus() {\n    return this.state.connectionStatus;\n  }\n\n  get webphoneCounts() {\n    return this._storage.getItem(this._storageWebphoneCountsKey);\n  }\n\n  get connectRetryCounts() {\n    return this.state.connectRetryCounts;\n  }\n\n  get acceptOptions() {\n    return {\n      media: {\n        render: {\n          remote: this._remoteVideo,\n          local: this._localVideo,\n        }\n      }\n    };\n  }\n\n  get errorCode() {\n    return this.state.errorCode;\n  }\n}\n"]}