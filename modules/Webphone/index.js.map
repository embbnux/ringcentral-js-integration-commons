{"version":3,"sources":["modules/Webphone/index.js"],"names":["FIRST_THREE_RETRIES_DELAY","FOURTH_RETRIES_DELAY","FIFTH_RETRIES_DELAY","MAX_RETRIES_DELAY","Webphone","appKey","appName","appVersion","alert","auth","client","rolesAndPermissions","webphoneLogLevel","storage","options","actionTypes","_appKey","_appName","_appVersion","_alert","_webphoneLogLevel","_auth","_client","_rolesAndPermissions","_storage","_storageWebphoneCountsKey","_webphone","_remoteVideo","_localVideo","_activeSession","_sessions","_reducer","registerReducer","key","reducer","toggleMinimized","bind","answer","reject","resume","hangup","window","document","createElement","setAttribute","body","appendChild","unload","disconnect","store","dispatch","type","init","videoElementPrepared","subscribe","_onStateChange","_shouldInit","initSuccess","_shouldReset","resetSuccess","loggedIn","ready","service","platform","post","sipInfo","transport","response","json","warning","message","getSipProvisionError","provisionData","uuid","endpoingId","logLevel","audioHelper","enabled","incoming","outgoing","onRegistered","registered","onUnregistered","unregistered","userAgent","removeAllListeners","onRegistrationFailed","error","registrationFailed","reason_phrase","indexOf","webphoneCountOverLimit","_connect","setVolume","on","once","session","console","log","_onInvite","reconnect","_retrySleep","connectionStatus","connecting","connectFailed","resetRetryCounts","connect","_sipProvision","sipProvision","disconnecting","_createWebphone","connectError","ttl","allowDuplicates","refreshServiceFeatures","hasFromNumber","checkIsLoggedIn","disconnected","browserNotSupported","notOutboundCallWithoutDL","connected","stop","unregister","forEach","callStatus","_updateCurrentSessionAndSessions","finished","_removeSession","cause","newSession","replaced","direction","inbound","_addSession","onAccepted","isOnMute","onMute","onHold","creationTime","Date","now","updateCurrentSession","sessionId","get","isOnHold","local","hold","_setActiveSession","_onAccepted","accept","acceptOptions","_resetMinimized","_removeActiveSession","_sessionHandleWithId","unhold","forwardNumber","forward","ua","volume","mute","unmute","sessionItem","sessionItemId","id","startRecord","isOnRecord","stopRecord","park","transferNumber","transfer","invite","media","warmTransfer","flipValue","flip","dtmfValue","dtmf","e","terminate","toVoiceMail","replyOptions","replyWithMessage","func","toNumber","fromNumber","homeCountryId","outbound","set","updateSessions","sessions","_cleanActiveSession","delete","destroyCurrentSession","_updateCurrentSession","_updateSessions","resetMinimized","connectRetryCounts","state","status","minimized","currentSession","webphoneEnabled","getItem","render","remote"],"mappings":"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","file":"index.js","sourcesContent":["import RingCentralWebphone from 'ringcentral-web-phone';\nimport incomingAudio from 'ringcentral-web-phone/audio/incoming.ogg';\nimport outgoingAudio from 'ringcentral-web-phone/audio/outgoing.ogg';\n\nimport RcModule from '../../lib/RcModule';\nimport sleep from '../../lib/sleep';\nimport moduleStatus from '../../enums/moduleStatus';\nimport connectionStatus from './connectionStatus';\nimport sessionStatus from './sessionStatus';\nimport actionTypes from './actionTypes';\nimport callDirections from '../../enums/callDirections';\nimport webphoneErrors from './webphoneErrors';\n\nimport {\n  isBrowerSupport,\n  patchUserAgent,\n  patchIncomingSession,\n} from './webphoneHelper';\nimport getWebphoneReducer, { getWebphoneCountsReducer } from './getWebphoneReducer';\n\nconst FIRST_THREE_RETRIES_DELAY = 10 * 1000;\nconst FOURTH_RETRIES_DELAY = 30 * 1000;\nconst FIFTH_RETRIES_DELAY = 60 * 1000;\nconst MAX_RETRIES_DELAY = 2 * 60 * 1000;\n\nexport default class Webphone extends RcModule {\n  constructor({\n    appKey,\n    appName,\n    appVersion,\n    alert,\n    auth,\n    client,\n    rolesAndPermissions,\n    webphoneLogLevel = 3,\n    storage,\n    ...options,\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._appKey = appKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._alert = alert;\n    this._webphoneLogLevel = webphoneLogLevel;\n    this._auth = auth;\n    this._client = client;\n    this._rolesAndPermissions = rolesAndPermissions;\n    this._storage = storage;\n    this._storageWebphoneCountsKey = 'webphoneCounts';\n    this._webphone = null;\n    this._remoteVideo = null;\n    this._localVideo = null;\n\n    this._activeSession = null;\n    this._sessions = new Map();\n\n    this._reducer = getWebphoneReducer(this.actionTypes);\n\n    storage.registerReducer({\n      key: this._storageWebphoneCountsKey,\n      reducer: getWebphoneCountsReducer(this.actionTypes),\n    });\n\n    this.toggleMinimized = this.toggleMinimized.bind(this);\n    this.answer = this.answer.bind(this);\n    this.reject = this.reject.bind(this);\n    this.resume = this.resume.bind(this);\n    this.hangup = this.hangup.bind(this);\n  }\n\n  initialize() {\n    if (\n      typeof window !== 'undefined' &&\n      typeof document !== 'undefined'\n    ) {\n      this._remoteVideo = document.createElement('video');\n      this._remoteVideo.setAttribute('hidden', 'hidden');\n      this._localVideo = document.createElement('video');\n      this._localVideo.setAttribute('hidden', 'hidden');\n      this._localVideo.setAttribute('muted', 'muted');\n      document.body.appendChild(this._remoteVideo);\n      document.body.appendChild(this._localVideo);\n      window.unload = () => {\n        this.disconnect();\n      };\n      this.store.dispatch({\n        type: this.actionTypes.init,\n        videoElementPrepared: true,\n      });\n    } else {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n        videoElementPrepared: false,\n      });\n    }\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n      this.disconnect();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      this._rolesAndPermissions.ready &&\n      !this.ready\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._auth.loggedIn ||\n        !this._rolesAndPermissions.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  async _sipProvision() {\n    try {\n      const response = await this._client.service.platform()\n        .post('/client-info/sip-provision', {\n          sipInfo: [{ transport: 'WSS' }]\n        });\n      return response.json();\n    } catch (error) {\n      this._alert.warning({\n        message: webphoneErrors.getSipProvisionError,\n      });\n      throw error;\n    }\n  }\n\n  _createWebphone(provisionData) {\n    this._webphone = new RingCentralWebphone(provisionData, {\n      appKey: this._appKey,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      uuid: this._auth.endpoingId,\n      logLevel: this._webphoneLogLevel, // error 0, warn 1, log: 2, debug: 3\n      audioHelper: {\n        enabled: true, // enables audio feedback when web phone is ringing or making a call\n        incoming: incomingAudio, // path to audio file for incoming call\n        outgoing: outgoingAudio, // path to aduotfile for outgoing call\n      }\n    });\n\n    const onRegistered = () => {\n      this.store.dispatch({\n        type: this.actionTypes.registered,\n      });\n    };\n    const onUnregistered = () => {\n      this.store.dispatch({\n        type: this.actionTypes.unregistered,\n      });\n      this._webphone.userAgent.removeAllListeners();\n      this._webphone = null;\n    };\n    const onRegistrationFailed = (error) => {\n      this.store.dispatch({\n        type: this.actionTypes.registrationFailed,\n        error,\n      });\n      this._webphone.userAgent.removeAllListeners();\n      this._webphone = null;\n      if (error && error.reason_phrase && error.reason_phrase.indexOf('Too Many Contacts') > -1) {\n        this._alert.warning({\n          message: webphoneErrors.webphoneCountOverLimit,\n        });\n        return;\n      }\n      this._connect(true);\n    };\n    this._webphone.userAgent.audioHelper.setVolume(0.3);\n    this._webphone.userAgent.on('registered', onRegistered);\n    this._webphone.userAgent.on('unregistered', onUnregistered);\n    this._webphone.userAgent.once('registrationFailed', onRegistrationFailed);\n    this._webphone.userAgent.on('invite', (session) => {\n      console.log('UA invite');\n      this._onInvite(session);\n    });\n    patchUserAgent(this._webphone.userAgent);\n  }\n\n  async _connect(reconnect = false) {\n    try {\n      if (reconnect) {\n        await this._retrySleep();\n      }\n\n      // do not connect if it is connecting\n      if (this.connectionStatus === connectionStatus.connecting) {\n        return;\n      }\n\n      // when reconnect is break by disconnect\n      if (reconnect && this.connectionStatus !== connectionStatus.connectFailed) {\n        this.store.dispatch({\n          type: this.actionTypes.resetRetryCounts,\n        });\n        return;\n      }\n\n      this.store.dispatch({\n        type: (\n          reconnect ?\n            this.actionTypes.reconnect : this.actionTypes.connect\n        )\n      });\n\n      const sipProvision = await this._sipProvision();\n\n      // do not continue if it is disconnecting\n      if (this.connectionStatus === connectionStatus.disconnecting) {\n        return;\n      }\n      this._createWebphone(sipProvision);\n    } catch (error) {\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n        error,\n      });\n      this._alert.warning({\n        message: webphoneErrors.connectFailed,\n        ttl: 0,\n        allowDuplicates: false,\n      });\n      if (\n        error && error.message &&\n        (error.message.indexOf('Feature [WebPhone] is not available') > -1)\n      ) {\n        this._rolesAndPermissions.refreshServiceFeatures();\n        return;\n      }\n      await this._connect(true);\n    }\n  }\n\n  async connect(hasFromNumber) {\n    if (\n      (await this._auth.checkIsLoggedIn()) &&\n      this.enabled &&\n      this.connectionStatus === connectionStatus.disconnected\n    ) {\n      if (!isBrowerSupport()) {\n        this._alert.warning({\n          message: webphoneErrors.browserNotSupported,\n          ttl: 0,\n        });\n        return;\n      }\n      if (!hasFromNumber) {\n        this._alert.warning({\n          message: webphoneErrors.notOutboundCallWithoutDL,\n        });\n        return;\n      }\n      await this._connect();\n    }\n  }\n\n  disconnect() {\n    if (\n      this.connectionStatus === connectionStatus.connected ||\n      this.connectionStatus === connectionStatus.connecting ||\n      this.connectionStatus === connectionStatus.connectFailed\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.disconnect,\n      });\n      if (this._webphone) {\n        this._webphone.userAgent.stop();\n        this._webphone.userAgent.unregister();\n        this._sessions.forEach((session) => {\n          this.hangup(session);\n        });\n      }\n    }\n  }\n\n  _onAccepted(session) {\n    session.on('accepted', () => {\n      console.log('accepted');\n      session.callStatus = sessionStatus.connected;\n      this._updateCurrentSessionAndSessions(session);\n    });\n    session.on('progress', () => {\n      console.log('progress...');\n      session.callStatus = sessionStatus.connecting;\n      this._updateCurrentSessionAndSessions(session);\n    });\n    session.on('rejected', () => {\n      console.log('rejected');\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n    });\n    session.on('failed', (response, cause) => {\n      console.log('Event: Failed');\n      console.log(cause);\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n    });\n    session.on('cancel', () => {\n      console.log('Event: Cancel');\n      session.callStatus = sessionStatus.finished;\n      this._removeSession(session);\n    });\n    session.on('refer', () => {\n      console.log('Event: Refer');\n    });\n    session.on('replaced', (newSession) => {\n      session.callStatus = sessionStatus.replaced;\n      newSession.callStatus = sessionStatus.connected;\n      newSession.direction = callDirections.inbound;\n      this._addSession(newSession);\n      this.onAccepted(newSession);\n    });\n    session.on('muted', () => {\n      console.log('Event: Muted');\n      session.isOnMute = true;\n      session.callStatus = sessionStatus.onMute;\n    });\n    session.on('unmuted', () => {\n      console.log('Event: Unmuted');\n      session.isOnMute = false;\n      session.callStatus = sessionStatus.connected;\n    });\n    session.on('hold', () => {\n      console.log('Event: hold');\n      session.callStatus = sessionStatus.onHold;\n    });\n    session.on('unhold', () => {\n      console.log('Event: unhold');\n      session.callStatus = sessionStatus.connected;\n    });\n  }\n\n  _onInvite(session) {\n    session.creationTime = Date.now();\n    session.direction = callDirections.inbound;\n    session.callStatus = sessionStatus.connecting;\n    if (!this._activeSession) {\n      this._activeSession = session;\n      this.store.dispatch({\n        type: this.actionTypes.updateCurrentSession,\n        session,\n      });\n    }\n    patchIncomingSession(session);\n    this._addSession(session);\n    session.on('rejected', () => {\n      console.log('Event: Rejected');\n      this._removeSession(session);\n    });\n  }\n\n  async answer(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      if (\n        this._activeSession && !this._activeSession.isOnHold().local &&\n        this._activeSession !== session\n      ) {\n        this._activeSession.hold();\n      }\n      this._setActiveSession(session);\n      this._onAccepted(session, 'inbound');\n      await session.accept(this.acceptOptions);\n      this._resetMinimized();\n    } catch (e) {\n      console.log('Accept failed');\n      this._removeSession(session);\n      this._removeActiveSession();\n    }\n  }\n\n  reject(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.reject();\n    });\n  }\n\n  resume(sessionId) {\n    this.unhold(sessionId);\n    this._resetMinimized();\n  }\n\n  async forward(forwardNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.forward(forwardNumber, this.acceptOptions);\n      console.log('Forwarded');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  increaseVolume(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.ua.audioHelper.setVolume(\n        (session.ua.audioHelper.volume != null ? session.ua.audioHelper.volume : 0.5) + 0.1\n      );\n    });\n  }\n\n  decreaseVolume(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.ua.audioHelper.setVolume(\n        (session.ua.audioHelper.volume != null ? session.ua.audioHelper.volume : 0.5) - 0.1\n      );\n    });\n  }\n\n  mute(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.isOnMute = true;\n      session.mute();\n      this._updateCurrentSessionAndSessions(session);\n    });\n  }\n\n  unmute(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.isOnMute = false;\n      session.unmute();\n      this._updateCurrentSessionAndSessions(session);\n    });\n  }\n\n  hold(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.hold();\n      this._updateCurrentSessionAndSessions(session);\n    });\n  }\n\n  unhold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    if (session.isOnHold().local) {\n      session.unhold();\n    }\n    this._sessions.forEach((sessionItem, sessionItemId) => {\n      if (session.id !== sessionItemId) {\n        if (!sessionItem.isOnHold().local) {\n          sessionItem.hold();\n        }\n      }\n    });\n    this._setActiveSession(session);\n    this._updateCurrentSessionAndSessions(session);\n  }\n\n  async startRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.startRecord();\n      session.isOnRecord = true;\n      console.log('Recording Started');\n    } catch (e) {\n      session.isOnRecord = false;\n      console.error(e);\n    }\n    this._updateCurrentSessionAndSessions(session);\n  }\n\n  async stopRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.stopRecord();\n      session.isOnRecord = false;\n      console.log('Recording Stopped');\n    } catch (e) {\n      session.isOnRecord = true;\n      console.error(e);\n    }\n    this._updateCurrentSessionAndSessions(session);\n  }\n\n  async park(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.park();\n      console.log('Parked');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async transfer(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.transfer(transferNumber);\n      console.log('Transferred');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async transferWarm(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.hold();\n      const newSession = session.ua.invite(transferNumber, {\n        media: this.acceptOptions.media\n      });\n      newSession.once('accepted', async () => {\n        try {\n          await session.warmTransfer(newSession);\n          console.log('Transferred');\n        } catch (e) {\n          console.error(e);\n        }\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async flip(flipValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.flip(flipValue);\n      console.log('Flipped');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  sendDTMF(dtmfValue, sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      try {\n        session.dtmf(dtmfValue);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  hangup(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      try {\n        session.terminate();\n      } catch (e) {\n        console.error(e);\n        this._removeSession(session);\n      }\n    });\n  }\n\n  toVoiceMail(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      try {\n        session.toVoiceMail();\n      } catch (e) {\n        console.error(e);\n        this._removeSession(session);\n      }\n    });\n  }\n\n  replyWithMessage(sessionId, replyOptions) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      try {\n        session.replyWithMessage(replyOptions);\n      } catch (e) {\n        console.error(e);\n        this._removeSession(session);\n      }\n    });\n  }\n\n  _sessionHandleWithId(sessionId, func) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return null;\n    }\n    return func(session);\n  }\n\n  makeCall({ toNumber, fromNumber, homeCountryId }) {\n    const session = this._webphone.userAgent.invite(toNumber, {\n      media: this.acceptOptions.media,\n      fromNumber,\n      homeCountryId,\n    });\n    session.direction = callDirections.outbound;\n    session.callStatus = sessionStatus.connecting;\n    session.creationTime = Date.now();\n    this._onAccepted(session);\n    if (this._activeSession && !this._activeSession.isOnHold().local) {\n      this._activeSession.hold();\n    }\n    this._addSession(session);\n    this._setActiveSession(session);\n    this._resetMinimized();\n    return session;\n  }\n\n  _addSession(session) {\n    this._sessions.set(session.id, session);\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: this._sessions,\n    });\n  }\n\n  _removeSession(session) {\n    this._cleanActiveSession(session);\n    this._sessions.delete(session.id);\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: this._sessions,\n    });\n  }\n\n  _setActiveSession(session) {\n    this._activeSession = session;\n    this.store.dispatch({\n      type: this.actionTypes.updateCurrentSession,\n      session,\n    });\n  }\n\n  _removeActiveSession() {\n    this._activeSession = null;\n    this.store.dispatch({\n      type: this.actionTypes.destroyCurrentSession,\n    });\n  }\n\n  _cleanActiveSession(session) {\n    if (session !== this._activeSession) {\n      return;\n    }\n    this._removeActiveSession();\n  }\n\n  _updateCurrentSessionAndSessions(session) {\n    if (session === this._activeSession) {\n      this._updateCurrentSession(session);\n    }\n    this._updateSessions();\n  }\n\n  _updateCurrentSession(session) {\n    this.store.dispatch({\n      type: this.actionTypes.updateCurrentSession,\n      session,\n    });\n  }\n\n  _updateSessions() {\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: this._sessions,\n    });\n  }\n\n  toggleMinimized() {\n    this.store.dispatch({\n      type: this.actionTypes.toggleMinimized,\n    });\n  }\n\n  _resetMinimized() {\n    this.store.dispatch({\n      type: this.actionTypes.resetMinimized,\n    });\n  }\n\n  async _retrySleep() {\n    if (this.connectRetryCounts < 3) {\n      await sleep(FIRST_THREE_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 3) {\n      await sleep(FOURTH_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 4) {\n      await sleep(FIFTH_RETRIES_DELAY); // sleep 30 seconds\n    }\n    if (this.connectRetryCounts > 4) {\n      await sleep(MAX_RETRIES_DELAY); // sleep 30 seconds\n    }\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get activeSession() {\n    return this._activeSession;\n  }\n\n  get originalSessions() {\n    return this._sessions;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatus.ready;\n  }\n\n  get minimized() {\n    return this.state.minimized;\n  }\n\n  get currentSession() {\n    return this.state.currentSession;\n  }\n\n  get sessions() {\n    return this.state.sessions;\n  }\n\n  get videoElementPrepared() {\n    return this.state.videoElementPrepared;\n  }\n\n  get enabled() {\n    return this.videoElementPrepared && this._rolesAndPermissions.webphoneEnabled;\n  }\n\n  get connectionStatus() {\n    return this.state.connectionStatus;\n  }\n\n  get webphoneCounts() {\n    return this._storage.getItem(this._storageWebphoneCountsKey);\n  }\n\n  get connectRetryCounts() {\n    return this.state.connectRetryCounts;\n  }\n\n  get acceptOptions() {\n    return {\n      media: {\n        render: {\n          remote: this._remoteVideo,\n          local: this._localVideo,\n        }\n      }\n    };\n  }\n}\n"]}