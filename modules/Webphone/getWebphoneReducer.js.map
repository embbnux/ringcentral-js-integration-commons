{"version":3,"sources":["modules/Webphone/getWebphoneReducer.js"],"names":["getVideoElementPreparedReducer","getConnectionStatusReducer","getErrorCodeReducer","getConnectRetryCountsReducer","getWebphoneCountsReducer","getCurrentSessionReducer","getSessionsReducer","getMinimizedReducer","getWebphoneReducer","types","state","type","videoElementPrepared","disconnected","connect","reconnect","connecting","registered","connected","unregistered","disconnect","disconnecting","connectError","registrationFailed","connectFailed","errorCode","resetRetryCounts","session","updateCurrentSession","destroyCurrentSession","sessions","updateSessions","destroySessions","toggleMinimized","resetMinimized","status","connectionStatus","connectRetryCounts","webphoneCounts","currentSession","minimized"],"mappings":"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","file":"getWebphoneReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport connectionStatus from './connectionStatus';\n\nexport function getVideoElementPreparedReducer(types) {\n  return (state = false, { type }) => {\n    if (type === types.videoElementPrepared) return true;\n    return state;\n  };\n}\n\nexport function getConnectionStatusReducer(types) {\n  return (state = connectionStatus.disconnected, { type }) => {\n    switch (type) {\n      case types.connect:\n      case types.reconnect:\n        return connectionStatus.connecting;\n      case types.registered:\n        return connectionStatus.connected;\n      case types.unregistered:\n        return connectionStatus.disconnected;\n      case types.disconnect:\n        return connectionStatus.disconnecting;\n      case types.connectError:\n      case types.registrationFailed:\n        return connectionStatus.connectFailed;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getErrorCodeReducer(types) {\n  return (state = null, { type, errorCode = state }) => {\n    switch (type) {\n      case types.connectError:\n      case types.registrationFailed:\n        return errorCode;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getConnectRetryCountsReducer(types) {\n  return (state = 0, { type }) => {\n    switch (type) {\n      case types.reconnect:\n        return state + 1;\n      case types.resetRetryCounts:\n      case types.registered:\n        return 0;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getWebphoneCountsReducer(types) {\n  return (state = 0, { type }) => {\n    switch (type) {\n      case types.reconnect:\n      case types.connect:\n        return state + 1;\n      case types.connectError:\n      case types.disconnect:\n      case types.registrationFailed:\n        return state - 1;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getCurrentSessionReducer(types) {\n  return (state = null, { type, session }) => {\n    switch (type) {\n      case types.updateCurrentSession:\n        return session;\n      case types.destroyCurrentSession:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSessionsReducer(types) {\n  return (state = [], { type, sessions }) => {\n    switch (type) {\n      case types.updateSessions:\n        return sessions;\n      case types.destroySessions:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getMinimizedReducer(types) {\n  return (state = false, { type }) => {\n    switch (type) {\n      case types.toggleMinimized:\n        return !state;\n      case types.resetMinimized:\n        return false;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getWebphoneReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    videoElementPrepared: getVideoElementPreparedReducer(types),\n    connectionStatus: getConnectionStatusReducer(types),\n    connectRetryCounts: getConnectRetryCountsReducer(types),\n    errorCode: getErrorCodeReducer(types),\n    webphoneCounts: getWebphoneCountsReducer(types),\n    currentSession: getCurrentSessionReducer(types),\n    sessions: getSessionsReducer(types),\n    minimized: getMinimizedReducer(types),\n  });\n}\n"]}