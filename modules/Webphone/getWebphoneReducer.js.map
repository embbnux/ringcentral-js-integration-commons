{"version":3,"sources":["modules/Webphone/getWebphoneReducer.js"],"names":["getVideoElementPreparedReducer","getConnectionStatusReducer","getErrorCodeReducer","getConnectRetryCountsReducer","getWebphoneCountsReducer","getActiveSessionIdReducer","getRingSessionIdReducer","getSessionsReducer","getUserMediaReducer","getWebphoneReducer","types","state","type","videoElementPrepared","disconnected","connect","reconnect","connecting","registered","connected","unregistered","disconnect","disconnecting","connectError","registrationFailed","connectFailed","errorCode","resetRetryCounts","sessionId","sessions","onHoldSessions","callStart","callEnd","filter","session","id","ringSessions","callRing","updateSessions","destroySessions","getUserMediaSuccess","status","connectionStatus","connectRetryCounts","webphoneCounts","activeSessionId","ringSessionId"],"mappings":"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","file":"getWebphoneReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport connectionStatus from './connectionStatus';\nimport { isRing, isOnHold } from './webphoneHelper';\n\nexport function getVideoElementPreparedReducer(types) {\n  return (state = false, { type }) => {\n    if (type === types.videoElementPrepared) return true;\n    return state;\n  };\n}\n\nexport function getConnectionStatusReducer(types) {\n  return (state = connectionStatus.disconnected, { type }) => {\n    switch (type) {\n      case types.connect:\n      case types.reconnect:\n        return connectionStatus.connecting;\n      case types.registered:\n        return connectionStatus.connected;\n      case types.unregistered:\n        return connectionStatus.disconnected;\n      case types.disconnect:\n        return connectionStatus.disconnecting;\n      case types.connectError:\n      case types.registrationFailed:\n        return connectionStatus.connectFailed;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getErrorCodeReducer(types) {\n  return (state = null, { type, errorCode = state }) => {\n    switch (type) {\n      case types.connectError:\n      case types.registrationFailed:\n        return errorCode;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getConnectRetryCountsReducer(types) {\n  return (state = 0, { type }) => {\n    switch (type) {\n      case types.reconnect:\n        return state + 1;\n      case types.resetRetryCounts:\n      case types.registered:\n        return 0;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getWebphoneCountsReducer(types) {\n  return (state = 0, { type }) => {\n    switch (type) {\n      case types.reconnect:\n      case types.connect:\n        return state + 1;\n      case types.connectError:\n      case types.disconnect:\n      case types.registrationFailed:\n        return state - 1;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getActiveSessionIdReducer(types) {\n  return (state = null, { type, sessionId, sessions = [] }) => {\n    let onHoldSessions;\n    switch (type) {\n      case types.callStart:\n        return sessionId;\n      case types.callEnd:\n        if (sessionId !== state) {\n          return state;\n        }\n        onHoldSessions =\n          sessions.filter(session => isOnHold(session));\n        if (onHoldSessions && onHoldSessions[0]) {\n          return onHoldSessions[0].id;\n        }\n        return null;\n      case types.disconnect:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getRingSessionIdReducer(types) {\n  return (state = null, { type, sessionId, sessions = [] }) => {\n    let ringSessions;\n    switch (type) {\n      case types.callRing:\n        return sessionId;\n      case types.callStart:\n      case types.callEnd:\n        if (sessionId !== state) {\n          return state;\n        }\n        ringSessions =\n          sessions.filter(session => isRing(session));\n        if (ringSessions && ringSessions[0]) {\n          return ringSessions[0].id;\n        }\n        return null;\n      case types.disconnect:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSessionsReducer(types) {\n  return (state = [], { type, sessions }) => {\n    switch (type) {\n      case types.updateSessions:\n        return sessions;\n      case types.destroySessions:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getUserMediaReducer(types) {\n  return (state = false, { type }) => {\n    switch (type) {\n      case types.getUserMediaSuccess:\n        return true;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getWebphoneReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    videoElementPrepared: getVideoElementPreparedReducer(types),\n    connectionStatus: getConnectionStatusReducer(types),\n    connectRetryCounts: getConnectRetryCountsReducer(types),\n    errorCode: getErrorCodeReducer(types),\n    webphoneCounts: getWebphoneCountsReducer(types),\n    activeSessionId: getActiveSessionIdReducer(types),\n    ringSessionId: getRingSessionIdReducer(types),\n    sessions: getSessionsReducer(types),\n  });\n}\n"]}