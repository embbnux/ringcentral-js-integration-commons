{"version":3,"sources":["modules/Webphone/getWebphoneReducer.js"],"names":["getVideoElementPreparedReducer","getConnectionStatusReducer","getConnectRetryCountsReducer","getWebphoneCountsReducer","getCurrentSessionReducer","getSessionsReducer","getMinimizedReducer","getWebphoneReducer","types","state","type","videoElementPrepared","disconnected","connect","reconnect","connecting","registered","connected","unregistered","disconnect","disconnecting","connectError","registrationFailed","connectFailed","resetRetryCounts","session","updateCurrentSession","destroyCurrentSession","sessions","updateSessions","destroySessions","toggleMinimized","resetMinimized","status","connectionStatus","connectRetryCounts","webphoneCounts","currentSession","minimized"],"mappings":"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","file":"getWebphoneReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport connectionStatus from './connectionStatus';\n\nexport function getVideoElementPreparedReducer(types) {\n  return (state = false, { type }) => {\n    if (type === types.videoElementPrepared) return true;\n    return state;\n  };\n}\n\nexport function getConnectionStatusReducer(types) {\n  return (state = connectionStatus.disconnected, { type }) => {\n    switch (type) {\n      case types.connect:\n      case types.reconnect:\n        return connectionStatus.connecting;\n      case types.registered:\n        return connectionStatus.connected;\n      case types.unregistered:\n        return connectionStatus.disconnected;\n      case types.disconnect:\n        return connectionStatus.disconnecting;\n      case types.connectError:\n      case types.registrationFailed:\n        return connectionStatus.connectFailed;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getConnectRetryCountsReducer(types) {\n  return (state = 0, { type }) => {\n    switch (type) {\n      case types.reconnect:\n        return state + 1;\n      case types.resetRetryCounts:\n      case types.registered:\n        return 0;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getWebphoneCountsReducer(types) {\n  return (state = 0, { type }) => {\n    switch (type) {\n      case types.reconnect:\n      case types.connect:\n        return state + 1;\n      case types.connectError:\n      case types.disconnect:\n      case types.registrationFailed:\n        return state - 1;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getCurrentSessionReducer(types) {\n  return (state = null, { type, session }) => {\n    switch (type) {\n      case types.updateCurrentSession:\n        return session;\n      case types.destroyCurrentSession:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSessionsReducer(types) {\n  return (state = [], { type, sessions }) => {\n    switch (type) {\n      case types.updateSessions:\n        return sessions;\n      case types.destroySessions:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getMinimizedReducer(types) {\n  return (state = false, { type }) => {\n    switch (type) {\n      case types.toggleMinimized:\n        return !state;\n      case types.resetMinimized:\n        return false;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getWebphoneReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    videoElementPrepared: getVideoElementPreparedReducer(types),\n    connectionStatus: getConnectionStatusReducer(types),\n    connectRetryCounts: getConnectRetryCountsReducer(types),\n    webphoneCounts: getWebphoneCountsReducer(types),\n    currentSession: getCurrentSessionReducer(types),\n    sessions: getSessionsReducer(types),\n    minimized: getMinimizedReducer(types),\n  });\n}\n"]}