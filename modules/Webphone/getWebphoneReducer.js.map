{"version":3,"sources":["modules/Webphone/getWebphoneReducer.js"],"names":["getVideoElementPreparedReducer","getConnectionStatusReducer","getWebphoneReducer","types","state","type","videoElementPrepared","init","disconnected","connect","connecting","registered","connected","registrationFailed","unregistered","disconnect","disconnecting","status","connectionStatus"],"mappings":";;;;;QAKgBA,8B,GAAAA,8B;QAOAC,0B,GAAAA,0B;kBAkBQC,kB;;AA9BxB;;AACA;;;;AAEA;;;;;;AAEO,SAASF,8BAAT,CAAwCG,KAAxC,EAA+C;AACpD,SAAO,YAA2D;AAAA,QAA1DC,KAA0D,uEAAlD,KAAkD;AAAA;AAAA,QAAzCC,IAAyC,QAAzCA,IAAyC;AAAA,qCAAnCC,oBAAmC;AAAA,QAAnCA,oBAAmC,yCAAZF,KAAY;;AAChE,QAAIC,SAASF,MAAMI,IAAnB,EAAyB,OAAOD,oBAAP;AACzB,WAAOF,KAAP;AACD,GAHD;AAID;;AAEM,SAASH,0BAAT,CAAoCE,KAApC,EAA2C;AAChD,SAAO,YAAqD;AAAA,QAApDC,KAAoD,uEAA5C,2BAAiBI,YAA2B;AAAA;AAAA,QAAXH,IAAW,SAAXA,IAAW;;AAC1D,YAAQA,IAAR;AACE,WAAKF,MAAMM,OAAX;AACE,eAAO,2BAAiBC,UAAxB;AACF,WAAKP,MAAMQ,UAAX;AACE,eAAO,2BAAiBC,SAAxB;AACF,WAAKT,MAAMU,kBAAX;AACA,WAAKV,MAAMW,YAAX;AACE,eAAO,2BAAiBN,YAAxB;AACF,WAAKL,MAAMY,UAAX;AACE,eAAO,2BAAiBC,aAAxB;AACF;AACE,eAAOZ,KAAP;AAXJ;AAaD,GAdD;AAeD;;AAEc,SAASF,kBAAT,CAA4BC,KAA5B,EAAmC;AAChD,SAAO,4BAAgB;AACrBc,YAAQ,sCAAuBd,KAAvB,CADa;AAErBG,0BAAsBN,+BAA+BG,KAA/B,CAFD;AAGrBe,sBAAkBjB,2BAA2BE,KAA3B;AAHG,GAAhB,CAAP;AAKD","file":"getWebphoneReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\n\nimport connectionStatus from './connectionStatus';\n\nexport function getVideoElementPreparedReducer(types) {\n  return (state = false, { type, videoElementPrepared = state }) => {\n    if (type === types.init) return videoElementPrepared;\n    return state;\n  };\n}\n\nexport function getConnectionStatusReducer(types) {\n  return (state = connectionStatus.disconnected, { type }) => {\n    switch (type) {\n      case types.connect:\n        return connectionStatus.connecting;\n      case types.registered:\n        return connectionStatus.connected;\n      case types.registrationFailed:\n      case types.unregistered:\n        return connectionStatus.disconnected;\n      case types.disconnect:\n        return connectionStatus.disconnecting;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getWebphoneReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    videoElementPrepared: getVideoElementPreparedReducer(types),\n    connectionStatus: getConnectionStatusReducer(types),\n  });\n}\n"]}