{"version":3,"sources":["modules/ComposeText/index.js"],"names":["ComposeText","alert","auth","storage","messageSender","numberValidate","options","actionTypes","_alert","_auth","_storage","_storageKey","_reducer","_cacheReducer","_messageSender","_numberValidate","send","bind","updateSenderNumber","updateTypingToNumber","cleanTypingToNumber","addToNumber","removeToNumber","updateMessageText","clean","registerReducer","key","reducer","store","subscribe","_onStateChange","_shouldInit","dispatch","type","initSuccess","isFreshLogin","_initSenderNumber","_shouldReset","_resetModuleStatus","ready","resetSuccess","defaultPhoneNumber","cachedPhoneNumber","cache","senderNumber","senderNumbersList","message","warning","phoneNumber","validateResult","validateFormat","result","error","errors","_alertWarning","recipientNumberInvalids","text","messageText","fromNumber","toNumbers","map","number","typingToNumber","_validatePhoneNumber","push","length","textTooLong","getItem","state","status"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport isBlank from '../../lib/isBlank';\nimport moduleStatuses from '../../enums/moduleStatuses';\n\nimport composeTextActionTypes from './composeTextActionTypes';\nimport getComposeTextReducer from './getComposeTextReducer';\nimport getCacheReducer from './getCacheReducer';\n\nimport messageSenderMessages from '../MessageSender/messageSenderMessages';\n\nexport default class ComposeText extends RcModule {\n  constructor({\n    alert,\n    auth,\n    storage,\n    messageSender,\n    numberValidate,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: composeTextActionTypes,\n    });\n\n    this._alert = alert;\n    this._auth = auth;\n    this._storage = storage;\n    this._storageKey = 'composeText';\n    this._reducer = getComposeTextReducer(this.actionTypes);\n    this._cacheReducer = getCacheReducer(this.actionTypes);\n    this._messageSender = messageSender;\n    this._numberValidate = numberValidate;\n    this.send = this.send.bind(this);\n    this.updateSenderNumber = this.updateSenderNumber.bind(this);\n    this.updateTypingToNumber = this.updateTypingToNumber.bind(this);\n    this.cleanTypingToNumber = this.cleanTypingToNumber.bind(this);\n    this.addToNumber = this.addToNumber.bind(this);\n    this.removeToNumber = this.removeToNumber.bind(this);\n    this.updateMessageText = this.updateMessageText.bind(this);\n    this.clean = this.clean.bind(this);\n    storage.registerReducer({ key: this._storageKey, reducer: this._cacheReducer });\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (\n      this._shouldInit()\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n      if (this._auth.isFreshLogin) {\n        this.clean();\n      }\n      this._initSenderNumber();\n    } else if (\n      this._shouldReset()\n    ) {\n      this._resetModuleStatus();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._messageSender.ready &&\n      this._auth.ready &&\n      !this.ready\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._messageSender.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  _resetModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  _initSenderNumber() {\n    let defaultPhoneNumber = null;\n    const cachedPhoneNumber = this.cache && this.cache.senderNumber;\n    if (cachedPhoneNumber) {\n      defaultPhoneNumber = cachedPhoneNumber;\n    } else {\n      defaultPhoneNumber = this._messageSender.senderNumbersList[0];\n    }\n    this.updateSenderNumber(defaultPhoneNumber);\n  }\n\n  _alertWarning(message) {\n    if (message) {\n      this._alert.warning({\n        message,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  _validatePhoneNumber(phoneNumber) {\n    const validateResult = this._numberValidate.validateFormat([phoneNumber]);\n    if (!validateResult.result) {\n      const error = validateResult.errors[0];\n      if (error && this._alertWarning(messageSenderMessages[error.type])) {\n        return false;\n      }\n      this._alertWarning(messageSenderMessages.recipientNumberInvalids);\n      return false;\n    }\n    return true;\n  }\n\n  async send() {\n    const text = this.messageText;\n    const fromNumber = this.senderNumber;\n    const toNumbers = this.toNumbers.map(number => number.phoneNumber);\n    const typingToNumber = this.typingToNumber;\n    if (!isBlank(typingToNumber)) {\n      if (this._validatePhoneNumber(typingToNumber)) {\n        toNumbers.push(typingToNumber);\n      } else {\n        return null;\n      }\n    }\n    return await this._messageSender.send({ fromNumber, toNumbers, text });\n  }\n\n  updateSenderNumber(number) {\n    this.store.dispatch({\n      type: this.actionTypes.updateSenderNumber,\n      number: (number || ''),\n    });\n  }\n\n  updateTypingToNumber(number) {\n    if (number.length > 30) {\n      this._alertWarning(messageSenderMessages.recipientNumberInvalids);\n      return;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.updateTypingToNumber,\n      number,\n    });\n  }\n\n  cleanTypingToNumber() {\n    this.store.dispatch({\n      type: this.actionTypes.cleanTypingToNumber,\n    });\n  }\n\n  addToNumber(number) {\n    if (isBlank(number.phoneNumber)) {\n      return;\n    }\n    if (!this._validatePhoneNumber(number.phoneNumber)) {\n      return;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.addToNumber,\n      number,\n    });\n  }\n\n  removeToNumber(number) {\n    this.store.dispatch({\n      type: this.actionTypes.removeToNumber,\n      number,\n    });\n  }\n\n  updateMessageText(text) {\n    if (text.length > 1000) {\n      this._alertWarning(messageSenderMessages.textTooLong);\n      return;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.updateMessageText,\n      text,\n    });\n  }\n\n  clean() {\n    this.store.dispatch({\n      type: this.actionTypes.clean,\n    });\n  }\n\n  get cache() {\n    return this._storage.getItem(this._storageKey);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.status === moduleStatuses.ready;\n  }\n\n  get senderNumber() {\n    return this.state.senderNumber;\n  }\n\n  get typingToNumber() {\n    return this.state.typingToNumber;\n  }\n\n  get toNumbers() {\n    return this.state.toNumbers;\n  }\n\n  get messageText() {\n    return this.state.messageText;\n  }\n}\n"]}