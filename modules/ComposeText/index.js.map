{"version":3,"sources":["modules/ComposeText/index.js"],"names":["ComposeText","alert","auth","storage","messageSender","numberValidate","contactSearch","options","actionTypes","_alert","_auth","_storage","_storageKey","_reducer","_cacheReducer","_messageSender","_numberValidate","_contactSearch","_lastContactSearchResult","registerReducer","key","reducer","store","subscribe","_onStateChange","_shouldInit","dispatch","type","initSuccess","isFreshLogin","clean","_initSenderNumber","_shouldHandleRecipient","_handleRecipient","_shouldReset","_resetModuleStatus","ready","searchResult","length","resetSuccess","defaultPhoneNumber","cachedPhoneNumber","cache","senderNumber","senderNumbersList","updateSenderNumber","dummy","toNumbers","find","toNumber","entityType","recipient","item","id","addToNumber","slice","message","ttlConfig","noAreaCode","ttl","warning","phoneNumber","validateResult","validateFormat","result","error","errors","_alertWarning","recipientNumberInvalids","text","messageText","fromNumber","map","number","typingToNumber","_validatePhoneNumber","push","send","updateTypingToNumber","entityId","toNumberMatched","shouldClean","cleanTypingToNumber","removeToNumber","textTooLong","updateMessageText","getItem","state","status","toNumberEntity"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport isBlank from '../../lib/isBlank';\nimport moduleStatuses from '../../enums/moduleStatuses';\n\nimport composeTextActionTypes from './actionTypes';\nimport getComposeTextReducer from './getComposeTextReducer';\nimport getCacheReducer from './getCacheReducer';\n\nimport messageSenderMessages from '../MessageSender/messageSenderMessages';\nimport proxify from '../../lib/proxy/proxify';\n/**\n * @class\n * @description Compose text managing module\n */\nexport default class ComposeText extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Alert} params.alert - alert module instance\n   * @param {Auth} params.auth - auth module instance\n   * @param {Storage} params.storage - storage module instance\n   * @param {MessageSender} params.messageSender - messageSender module instance\n   * @param {NumberValidate} params.numberValidate - numberValidate module instance\n   * @param {ContactSearch} params.contactSearch - contactSearch module instance\n   */\n  constructor({\n    alert,\n    auth,\n    storage,\n    messageSender,\n    numberValidate,\n    contactSearch,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: composeTextActionTypes,\n    });\n\n    this._alert = alert;\n    this._auth = auth;\n    this._storage = storage;\n    this._storageKey = 'composeText';\n    this._reducer = getComposeTextReducer(this.actionTypes);\n    this._cacheReducer = getCacheReducer(this.actionTypes);\n    this._messageSender = messageSender;\n    this._numberValidate = numberValidate;\n    this._contactSearch = contactSearch;\n    this._lastContactSearchResult = [];\n    storage.registerReducer({ key: this._storageKey, reducer: this._cacheReducer });\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (\n      this._shouldInit()\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n      if (this._auth.isFreshLogin) {\n        this.clean();\n      }\n      this._initSenderNumber();\n    } else if (\n      this._shouldHandleRecipient()\n    ) {\n      this._handleRecipient();\n    } else if (\n      this._shouldReset()\n    ) {\n      this._resetModuleStatus();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._messageSender.ready &&\n      this._auth.ready &&\n      !this.ready\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._messageSender.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  _shouldHandleRecipient() {\n    return (\n      this.ready &&\n      (!!this._contactSearch &&\n        this._contactSearch.ready &&\n        this._contactSearch.searchResult.length > 0) &&\n      this._contactSearch.searchResult !== this._lastContactSearchResult\n    );\n  }\n\n  _resetModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  _initSenderNumber() {\n    let defaultPhoneNumber = null;\n    const cachedPhoneNumber = this.cache && this.cache.senderNumber;\n    if (cachedPhoneNumber) {\n      defaultPhoneNumber = cachedPhoneNumber;\n    } else {\n      defaultPhoneNumber = this._messageSender.senderNumbersList[0];\n    }\n    this.updateSenderNumber(defaultPhoneNumber);\n  }\n\n  _handleRecipient() {\n    const dummy = this.toNumbers.find(toNumber => !toNumber.entityType);\n    if (dummy) {\n      const recipient = this._contactSearch.searchResult.find(\n        item => item.id === dummy.id\n      );\n      if (recipient) {\n        this.addToNumber(recipient);\n        this._lastContactSearchResult = this._contactSearch.searchResult.slice();\n      }\n    }\n  }\n\n  _alertWarning(message) {\n    if (message) {\n      const ttlConfig = message !== messageSenderMessages.noAreaCode\n        ? { ttl: 0 } : null;\n      this._alert.warning({\n        message,\n        ...ttlConfig\n      });\n      return true;\n    }\n    return false;\n  }\n\n  _validatePhoneNumber(phoneNumber) {\n    const validateResult = this._numberValidate.validateFormat([phoneNumber]);\n    if (!validateResult.result) {\n      const error = validateResult.errors[0];\n      if (error && this._alertWarning(messageSenderMessages[error.type])) {\n        return false;\n      }\n      this._alertWarning(messageSenderMessages.recipientNumberInvalids);\n      return false;\n    }\n    return true;\n  }\n\n  @proxify\n  async send() {\n    const text = this.messageText;\n    const fromNumber = this.senderNumber;\n    const toNumbers = this.toNumbers.map(number => number.phoneNumber);\n    const typingToNumber = this.typingToNumber;\n    if (!isBlank(typingToNumber)) {\n      if (this._validatePhoneNumber(typingToNumber)) {\n        toNumbers.push(typingToNumber);\n      } else {\n        return null;\n      }\n    }\n    return this._messageSender.send({ fromNumber, toNumbers, text });\n  }\n\n  @proxify\n  async updateSenderNumber(number) {\n    this.store.dispatch({\n      type: this.actionTypes.updateSenderNumber,\n      number: (number || ''),\n    });\n  }\n\n  @proxify\n  async updateTypingToNumber(number) {\n    if (number.length > 30) {\n      this._alertWarning(messageSenderMessages.recipientNumberInvalids);\n      return;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.updateTypingToNumber,\n      number,\n    });\n  }\n\n  @proxify\n  async onToNumberMatch({ entityId }) {\n    this.store.dispatch({\n      type: this.actionTypes.toNumberMatched,\n      entityId,\n    });\n  }\n\n  @proxify\n  async addToRecipients(recipient, shouldClean = true) {\n    await this.addToNumber(recipient);\n    if (shouldClean) {\n      await this.cleanTypingToNumber();\n    }\n  }\n\n  @proxify\n  async cleanTypingToNumber() {\n    this.store.dispatch({\n      type: this.actionTypes.cleanTypingToNumber,\n    });\n  }\n\n  @proxify\n  async addToNumber(number) {\n    if (isBlank(number.phoneNumber)) {\n      return;\n    }\n    if (!this._validatePhoneNumber(number.phoneNumber)) {\n      return;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.addToNumber,\n      number,\n    });\n  }\n\n  @proxify\n  async removeToNumber(number) {\n    this.store.dispatch({\n      type: this.actionTypes.removeToNumber,\n      number,\n    });\n  }\n\n  @proxify\n  async updateMessageText(text) {\n    if (text.length > 1000) {\n      this._alertWarning(messageSenderMessages.textTooLong);\n      return;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.updateMessageText,\n      text,\n    });\n  }\n\n  @proxify\n  async clean() {\n    this.store.dispatch({\n      type: this.actionTypes.clean,\n    });\n  }\n\n  get cache() {\n    return this._storage.getItem(this._storageKey);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.status === moduleStatuses.ready;\n  }\n\n  get senderNumber() {\n    return this.state.senderNumber;\n  }\n\n  get typingToNumber() {\n    return this.state.typingToNumber;\n  }\n\n  get toNumbers() {\n    return this.state.toNumbers;\n  }\n\n  get toNumberEntity() {\n    return this.state.toNumberEntity;\n  }\n\n  get messageText() {\n    return this.state.messageText;\n  }\n}\n"]}