{"version":3,"sources":["modules/ComposeText/getComposeTextReducer.js"],"names":["getSenderNumber","getTypingToNumber","getToNumbers","getMessageText","getComposeTextReducer","types","state","type","number","updateSenderNumber","updateTypingToNumber","clean","cleanTypingToNumber","newState","oldNumber","addToNumber","find","item","phoneNumber","push","removeToNumber","filter","text","updateMessageText","status","senderNumber","typingToNumber","toNumbers","messageText"],"mappings":";;;;;QAIgBA,e,GAAAA,e;QAWAC,iB,GAAAA,iB;QAcAC,Y,GAAAA,Y;QA0BAC,c,GAAAA,c;kBAaQC,qB;;AApExB;;AACA;;AACA;;;;;;AAEO,SAASJ,eAAT,CAAyBK,KAAzB,EAAgC;AACrC,SAAO,YAAkC;AAAA,QAAjCC,KAAiC,uEAAzB,EAAyB;AAAA;AAAA,QAAnBC,IAAmB,QAAnBA,IAAmB;AAAA,QAAbC,MAAa,QAAbA,MAAa;;AACvC,YAAQD,IAAR;AACE,WAAKF,MAAMI,kBAAX;AACE,eAAOD,MAAP;AACF;AACE,eAAOF,KAAP;AAJJ;AAMD,GAPD;AAQD;;AAEM,SAASL,iBAAT,CAA2BI,KAA3B,EAAkC;AACvC,SAAO,YAAkC;AAAA,QAAjCC,KAAiC,uEAAzB,EAAyB;AAAA;AAAA,QAAnBC,IAAmB,SAAnBA,IAAmB;AAAA,QAAbC,MAAa,SAAbA,MAAa;;AACvC,YAAQD,IAAR;AACE,WAAKF,MAAMK,oBAAX;AACE,eAAOF,MAAP;AACF,WAAKH,MAAMM,KAAX;AACA,WAAKN,MAAMO,mBAAX;AACE,eAAO,EAAP;AACF;AACE,eAAON,KAAP;AAPJ;AASD,GAVD;AAWD;;AAEM,SAASJ,YAAT,CAAsBG,KAAtB,EAA6B;AAClC,SAAO,YAAkC;AAAA,QAAjCC,KAAiC,uEAAzB,EAAyB;AAAA;AAAA,QAAnBC,IAAmB,SAAnBA,IAAmB;AAAA,QAAbC,MAAa,SAAbA,MAAa;;AACvC,QAAMK,WAAWP,KAAjB;AACA,QAAIQ,YAAY,IAAhB;AACA,YAAQP,IAAR;AACE,WAAKF,MAAMU,WAAX;AACED,oBAAYD,SAASG,IAAT,CAAc,UAACC,IAAD;AAAA,iBACxBT,OAAOU,WAAP,KAAuBD,KAAKC,WADJ;AAAA,SAAd,CAAZ;AAGA,YAAIJ,SAAJ,EAAe;AACb,iBAAOD,QAAP;AACD;AACDA,iBAASM,IAAT,CAAcX,MAAd;AACA,eAAOK,QAAP;AACF,WAAKR,MAAMe,cAAX;AACE,eAAOd,MAAMe,MAAN,CAAa,UAACJ,IAAD;AAAA,iBAClBA,KAAKC,WAAL,KAAqBV,OAAOU,WADV;AAAA,SAAb,CAAP;AAGF,WAAKb,MAAMM,KAAX;AACE,eAAO,EAAP;AACF;AACE,eAAOL,KAAP;AAjBJ;AAmBD,GAtBD;AAuBD;;AAEM,SAASH,cAAT,CAAwBE,KAAxB,EAA+B;AACpC,SAAO,YAAgC;AAAA,QAA/BC,KAA+B,uEAAvB,EAAuB;AAAA;AAAA,QAAjBC,IAAiB,SAAjBA,IAAiB;AAAA,QAAXe,IAAW,SAAXA,IAAW;;AACrC,YAAQf,IAAR;AACE,WAAKF,MAAMkB,iBAAX;AACE,eAAOD,IAAP;AACF,WAAKjB,MAAMM,KAAX;AACE,eAAO,EAAP;AACF;AACE,eAAOL,KAAP;AANJ;AAQD,GATD;AAUD;;AAEc,SAASF,qBAAT,CAA+BC,KAA/B,EAAsC;AACnD,SAAO,4BAAgB;AACrBmB,YAAQ,sCAAuBnB,KAAvB,CADa;AAErBoB,kBAAczB,gBAAgBK,KAAhB,CAFO;AAGrBqB,oBAAgBzB,kBAAkBI,KAAlB,CAHK;AAIrBsB,eAAWzB,aAAaG,KAAb,CAJU;AAKrBuB,iBAAazB,eAAeE,KAAf;AALQ,GAAhB,CAAP;AAOD","file":"getComposeTextReducer.js","sourcesContent":["import 'core-js/fn/array/find';\nimport { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\n\nexport function getSenderNumber(types) {\n  return (state = '', { type, number }) => {\n    switch (type) {\n      case types.updateSenderNumber:\n        return number;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getTypingToNumber(types) {\n  return (state = '', { type, number }) => {\n    switch (type) {\n      case types.updateTypingToNumber:\n        return number;\n      case types.clean:\n      case types.cleanTypingToNumber:\n        return '';\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getToNumbers(types) {\n  return (state = [], { type, number }) => {\n    const newState = state;\n    let oldNumber = null;\n    switch (type) {\n      case types.addToNumber:\n        oldNumber = newState.find((item) => (\n          number.phoneNumber === item.phoneNumber\n        ));\n        if (oldNumber) {\n          return newState;\n        }\n        newState.push(number);\n        return newState;\n      case types.removeToNumber:\n        return state.filter((item) => (\n          item.phoneNumber !== number.phoneNumber\n        ));\n      case types.clean:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getMessageText(types) {\n  return (state = '', { type, text }) => {\n    switch (type) {\n      case types.updateMessageText:\n        return text;\n      case types.clean:\n        return '';\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getComposeTextReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    senderNumber: getSenderNumber(types),\n    typingToNumber: getTypingToNumber(types),\n    toNumbers: getToNumbers(types),\n    messageText: getMessageText(types),\n  });\n}\n"]}