{"version":3,"sources":["modules/ActiveCalls/index.js"],"names":["presenceRegExp","FETCH_DELAY","DEFAULT_TTL","ActiveCalls","client","tabManager","ttl","options","name","getDataReducer","subscriptionFilters","detailedPresence","subscriptionHandler","message","test","event","ownerId","_auth","fetchData","fetchFunction","_client","account","extension","activeCalls","list","params","addSelector","data","_selectors","calls"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAIA,IAAMA,iBAAiB,0CAAvB;AACA,IAAMC,cAAc,IAApB;AACA,IAAMC,cAAc,IAAI,EAAJ,GAAS,IAA7B;;AAEA;;;;;IAIqBC,W;;;AACnB;;;;;;AAMA,6BAKG;AAAA;;AAAA,QAJDC,MAIC,QAJDA,MAIC;AAAA,QAHDC,UAGC,QAHDA,UAGC;AAAA,wBAFDC,GAEC;AAAA,QAFDA,GAEC,4BAFKJ,WAEL;AAAA,QADEK,OACF;AAAA;;AAAA,2KAEIA,OAFJ;AAGCC,YAAM,aAHP;AAICJ,oBAJD;AAKCE,cALD;AAMCG,2DAND;AAOCC,2BAAqB,CAAC,8BAAoBC,gBAArB,CAPtB;AAQCC;AAAA,+EAAqB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACfb,eAAec,IAAf,CAAoBD,QAAQE,KAA5B,CADe;AAAA;AAAA;AAAA;;AAEXC,yBAFW,GAED,MAAKC,KAAL,CAAWD,OAFV;AAAA;AAAA,yBAGX,qBAAMf,WAAN,CAHW;;AAAA;AAAA,wBAIbe,YAAY,MAAKC,KAAL,CAAWD,OAJV;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAKT,MAAKE,SAAL,EALS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAArB;;AAAA;AAAA;AAAA;AAAA,SARD;AAiBCC;AAAA,+EAAe;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAY,yBAAU;AAAA,2BACnC,MAAKC,OAAL,CAAaC,OAAb,GAAuBC,SAAvB,GAAmCC,WAAnC,GAAiDC,IAAjD,CAAsDC,MAAtD,CADmC;AAAA,mBAAV,CAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;;AAAA;AAAA;AAAA;AAAA;AAjBD;;AAqBD,UAAKC,WAAL,CACE,OADF,EAEE;AAAA,aAAM,MAAKC,IAAX;AAAA,KAFF,EAGE;AAAA,aAAQA,QAAQ,EAAhB;AAAA,KAHF;AArBC;AA0BF;;;;wBAEW;AACV,aAAO,KAAKC,UAAL,CAAgBC,KAAhB,EAAP;AACD;;;;;kBA1CkB1B,W","file":"index.js","sourcesContent":["import DataFetcher from '../../lib/DataFetcher';\nimport sleep from '../../lib/sleep';\nimport fetchList from '../../lib/fetchList';\nimport subscriptionFilters from '../../enums/subscriptionFilters';\nimport {\n  getDataReducer\n} from './getActiveCallsReducer';\n\nconst presenceRegExp = /\\/presence\\?detailedTelephonyState=true$/;\nconst FETCH_DELAY = 1000;\nconst DEFAULT_TTL = 5 * 60 * 1000;\n\n/**\n * @class\n * @description Active calls list manaing module\n */\nexport default class ActiveCalls extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   * @param {Number} params.ttl - local cache timestamp, default 5 mins.\n   */\n  constructor({\n    client,\n    tabManager, // do not pass tabManager to DataFetcher as data is not shared in localStorage\n    ttl = DEFAULT_TTL,\n    ...options\n  }) {\n    super({\n      ...options,\n      name: 'activeCalls',\n      client,\n      ttl,\n      getDataReducer,\n      subscriptionFilters: [subscriptionFilters.detailedPresence],\n      subscriptionHandler: async (message) => {\n        if (presenceRegExp.test(message.event)) {\n          const ownerId = this._auth.ownerId;\n          await sleep(FETCH_DELAY);\n          if (ownerId === this._auth.ownerId) {\n            await this.fetchData();\n          }\n        }\n      },\n      fetchFunction: async () => fetchList(params => (\n        this._client.account().extension().activeCalls().list(params)\n      ))\n    });\n    this.addSelector(\n      'calls',\n      () => this.data,\n      data => data || [],\n    );\n  }\n\n  get calls() {\n    return this._selectors.calls();\n  }\n}\n"]}