{"version":3,"sources":["modules/RecentMessages/getRecentMessagesReducer.js"],"names":["getContactsReducer","getMessagesReducer","getMessageStatusReducer","getRecentMessagesReducer","types","state","type","contact","contactId","String","id","loadSuccess","loadReset","_","rest","messages","initLoad","loading","loaded","status","contacts","messageStatus"],"mappings":";;;;;;;;;;;;;;;;;;QAIgBA,kB,GAAAA,kB;QAgBAC,kB,GAAAA,kB;QAgBAC,uB,GAAAA,uB;kBAcQC,wB;;AAlDxB;;AACA;;;;AACA;;;;;;AAEO,SAASH,kBAAT,CAA4BI,KAA5B,EAAmC;AACxC,SAAO,YAAmC;AAAA,QAAlCC,KAAkC,uEAA1B,EAA0B;AAAA;AAAA,QAApBC,IAAoB,QAApBA,IAAoB;AAAA,QAAdC,OAAc,QAAdA,OAAc;;AACxC,QAAMC,YAAYC,OAAOF,WAAWA,QAAQG,EAA1B,CAAlB;AACA,QAAIJ,SAASF,MAAMO,WAAnB,EAAgC;AAC9B,wCACKN,KADL,oCAEGG,SAFH,EAEeD,OAFf;AAID,KALD,MAKO,IAAID,SAASF,MAAMQ,SAAnB,EAA8B;AAAA,UACdC,CADc,GACCR,KADD,CAC1BG,SAD0B;AAAA,UACRM,IADQ,0CACCT,KADD,GAC1BG,SAD0B;;AAEnC,aAAOM,IAAP;AACD;AACD,WAAOT,KAAP;AACD,GAZD;AAaD;;AAEM,SAASJ,kBAAT,CAA4BG,KAA5B,EAAmC;AACxC,SAAO,YAA6C;AAAA,QAA5CC,KAA4C,uEAApC,EAAoC;AAAA;AAAA,QAA9BC,IAA8B,SAA9BA,IAA8B;AAAA,QAAxBC,OAAwB,SAAxBA,OAAwB;AAAA,QAAfQ,QAAe,SAAfA,QAAe;;AAClD,QAAMP,YAAYC,OAAOF,WAAWA,QAAQG,EAA1B,CAAlB;AACA,QAAIJ,SAASF,MAAMO,WAAnB,EAAgC;AAC9B,wCACKN,KADL,oCAEGG,SAFH,EAEeO,QAFf;AAID,KALD,MAKO,IAAIT,SAASF,MAAMQ,SAAnB,EAA8B;AAAA,UACdC,CADc,GACCR,KADD,CAC1BG,SAD0B;AAAA,UACRM,IADQ,0CACCT,KADD,GAC1BG,SAD0B;;AAEnC,aAAOM,IAAP;AACD;AACD,WAAOT,KAAP;AACD,GAZD;AAaD;;AAEM,SAASH,uBAAT,CAAiCE,KAAjC,EAAwC;AAC7C,SAAO,YAA4B;AAAA,QAA3BC,KAA2B,uEAAnB,IAAmB;AAAA;AAAA,QAAXC,IAAW,SAAXA,IAAW;;AACjC,YAAQA,IAAR;AACE,WAAKF,MAAMY,QAAX;AACE,eAAO,wBAAcC,OAArB;AACF,WAAKb,MAAMQ,SAAX;AACA,WAAKR,MAAMO,WAAX;AACE,eAAO,wBAAcO,MAArB;AACF;AACE,eAAOb,KAAP;AAPJ;AASD,GAVD;AAWD;;AAEc,SAASF,wBAAT,CAAkCC,KAAlC,EAAyC;AACtD,SAAO,4BAAgB;AACrBe,YAAQ,sCAAuBf,KAAvB,CADa;AAErBgB,cAAUpB,mBAAmBI,KAAnB,CAFW;AAGrBW,cAAUd,mBAAmBG,KAAnB,CAHW;AAIrBiB,mBAAenB,wBAAwBE,KAAxB;AAJM,GAAhB,CAAP;AAMD","file":"getRecentMessagesReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport messageStatus from './messageStatus';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\n\nexport function getContactsReducer(types) {\n  return (state = {}, { type, contact }) => {\n    const contactId = String(contact && contact.id);\n    if (type === types.loadSuccess) {\n      return {\n        ...state,\n        [contactId]: contact\n      };\n    } else if (type === types.loadReset) {\n      const { [contactId]: _, ...rest } = state;\n      return rest;\n    }\n    return state;\n  };\n}\n\nexport function getMessagesReducer(types) {\n  return (state = {}, { type, contact, messages }) => {\n    const contactId = String(contact && contact.id);\n    if (type === types.loadSuccess) {\n      return {\n        ...state,\n        [contactId]: messages\n      };\n    } else if (type === types.loadReset) {\n      const { [contactId]: _, ...rest } = state;\n      return rest;\n    }\n    return state;\n  };\n}\n\nexport function getMessageStatusReducer(types) {\n  return (state = null, { type }) => {\n    switch (type) {\n      case types.initLoad:\n        return messageStatus.loading;\n      case types.loadReset:\n      case types.loadSuccess:\n        return messageStatus.loaded;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getRecentMessagesReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    contacts: getContactsReducer(types),\n    messages: getMessagesReducer(types),\n    messageStatus: getMessageStatusReducer(types)\n  });\n}\n"]}