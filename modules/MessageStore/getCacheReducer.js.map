{"version":3,"sources":["modules/MessageStore/getCacheReducer.js"],"names":["getConversationsReducer","getMessagesReducer","getSyncTokenReducer","getUnreadCountsReducer","getCacheReducer","types","state","type","data","saveConversations","timestamp","Date","now","cleanUp","messages","saveMessages","syncToken","saveSyncToken","unreadCounts","conversations"],"mappings":";;;;;QAEgBA,uB,GAAAA,uB;QAiBAC,kB,GAAAA,kB;QAiBAC,mB,GAAAA,mB;QAcAC,sB,GAAAA,sB;kBAWQC,e;;AA7DxB;;AAEO,SAASJ,uBAAT,CAAiCK,KAAjC,EAAwC;AAC7C,SAAO,YAAgC;AAAA,QAA/BC,KAA+B,uEAAvB,EAAuB;AAAA;AAAA,QAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AACrC,YAAQD,IAAR;AACE,WAAKF,MAAMI,iBAAX;AAA8B;AAC5B,iBAAO;AACLD,sBADK;AAELE,uBAAWC,KAAKC,GAAL;AAFN,WAAP;AAID;AACD,WAAKP,MAAMQ,OAAX;AACE,eAAO,EAAP;AACF;AACE,eAAOP,KAAP;AAVJ;AAYD,GAbD;AAcD;;AAEM,SAASL,kBAAT,CAA4BI,KAA5B,EAAmC;AACxC,SAAO,YAAoC;AAAA,QAAnCC,KAAmC,uEAA3B,EAA2B;AAAA;AAAA,QAArBC,IAAqB,SAArBA,IAAqB;AAAA,QAAfO,QAAe,SAAfA,QAAe;;AACzC,YAAQP,IAAR;AACE,WAAKF,MAAMU,YAAX;AAAyB;AACvB,iBAAO;AACLP,kBAAMM,QADD;AAELJ,uBAAWC,KAAKC,GAAL;AAFN,WAAP;AAID;AACD,WAAKP,MAAMQ,OAAX;AACE,eAAO,EAAP;AACF;AACE,eAAOP,KAAP;AAVJ;AAYD,GAbD;AAcD;;AAEM,SAASJ,mBAAT,CAA6BG,KAA7B,EAAoC;AACzC,SAAO,YAAuC;AAAA,QAAtCC,KAAsC,uEAA9B,IAA8B;AAAA;AAAA,QAAtBC,IAAsB,SAAtBA,IAAsB;AAAA,QAAhBS,SAAgB,SAAhBA,SAAgB;;AAC5C,YAAQT,IAAR;AACE,WAAKF,MAAMY,aAAX;AAA0B;AACxB,iBAAOD,SAAP;AACD;AACD,WAAKX,MAAMQ,OAAX;AACE,eAAO,IAAP;AACF;AACE,eAAOP,KAAP;AAPJ;AASD,GAVD;AAWD;;AAEM,SAASH,sBAAT,CAAgCE,KAAhC,EAAuC;AAC5C,SAAO,YAAuC;AAAA,QAAtCC,KAAsC,uEAA9B,CAA8B;AAAA;AAAA,QAAzBC,IAAyB,SAAzBA,IAAyB;AAAA,QAAnBW,YAAmB,SAAnBA,YAAmB;;AAC5C,YAAQX,IAAR;AACE,WAAKF,MAAMU,YAAX;AACE,eAAOG,YAAP;AACF;AACE,eAAOZ,KAAP;AAJJ;AAMD,GAPD;AAQD;;AAEc,SAASF,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C,SAAO,4BAAgB;AACrBc,mBAAenB,wBAAwBK,KAAxB,CADM;AAErBS,cAAUb,mBAAmBI,KAAnB,CAFW;AAGrBW,eAAWd,oBAAoBG,KAApB,CAHU;AAIrBa,kBAAcf,uBAAuBE,KAAvB;AAJO,GAAhB,CAAP;AAMD","file":"getCacheReducer.js","sourcesContent":["import { combineReducers } from 'redux';\n\nexport function getConversationsReducer(types) {\n  return (state = {}, { type, data }) => {\n    switch (type) {\n      case types.saveConversations: {\n        return {\n          data,\n          timestamp: Date.now(),\n        };\n      }\n      case types.cleanUp:\n        return {};\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getMessagesReducer(types) {\n  return (state = {}, { type, messages }) => {\n    switch (type) {\n      case types.saveMessages: {\n        return {\n          data: messages,\n          timestamp: Date.now(),\n        };\n      }\n      case types.cleanUp:\n        return {};\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSyncTokenReducer(types) {\n  return (state = null, { type, syncToken }) => {\n    switch (type) {\n      case types.saveSyncToken: {\n        return syncToken;\n      }\n      case types.cleanUp:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getUnreadCountsReducer(types) {\n  return (state = 0, { type, unreadCounts }) => {\n    switch (type) {\n      case types.saveMessages:\n        return unreadCounts;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getCacheReducer(types) {\n  return combineReducers({\n    conversations: getConversationsReducer(types),\n    messages: getMessagesReducer(types),\n    syncToken: getSyncTokenReducer(types),\n    unreadCounts: getUnreadCountsReducer(types),\n  });\n}\n"]}