{"version":3,"sources":["modules/MessageStore/getDataReducer.js"],"names":["getMessageDataReducer","getUpdatedTimestampReducer","getSyncTokenReducer","getSyncTimestampReducer","getDataReducer","initialConversationsDataState","conversations","conversationMap","messages","types","state","type","records","syncToken","syncConversationId","conversationId","recipients","syncSuccess","updateMessages","syncConversationSuccess","updateConversationRecipients","cleanUp","Date","now","syncTimestamp","data","updatedTimestamp"],"mappings":";;;;;;;;;;QAWgBA,qB,GAAAA,qB;QAsCAC,0B,GAAAA,0B;QAgBAC,mB,GAAAA,mB;QAaAC,uB,GAAAA,uB;kBAaQC,c;;AA3FxB;;AACA;;;;AAKA,IAAMC,gCAAgC;AACpCC,iBAAe,EADqB;AAEpCC,mBAAiB,EAFmB;AAGpCC,YAAU;AAH0B,CAAtC;AAKO,SAASR,qBAAT,CAA+BS,KAA/B,EAAsC;AAC3C,SAAO,YAOD;AAAA,QAPEC,KAOF,uEAPUL,6BAOV;AAAA;AAAA,QANJM,IAMI,QANJA,IAMI;AAAA,QALJC,OAKI,QALJA,OAKI;AAAA,8BAJJC,SAII;AAAA,QAJJA,SAII,kCAJQ,IAIR;AAAA,qCAHJC,kBAGI;AAAA,QAHJA,kBAGI,yCAHiB,IAGjB;AAAA,mCAFJC,cAEI;AAAA,QAFJA,cAEI,uCAFa,IAEb;AAAA,+BADJC,UACI;AAAA,QADJA,UACI,mCADS,IACT;;AACJ,YAAQL,IAAR;AACE,WAAKF,MAAMQ,WAAX;AACA,WAAKR,MAAMS,cAAX;AACE,eAAO,6EACFR,KADE;AAELE,0BAFK;AAGLC;AAHK,WAAP;AAKF,WAAKJ,MAAMU,uBAAX;AACE,eAAO,6EACFT,KADE;AAELE,0BAFK;AAGLC,8BAHK;AAILC;AAJK,WAAP;AAMF,WAAKL,MAAMW,4BAAX;AACE,eAAO,iFACFV,KADE;AAELK,wCAFK;AAGLC;AAHK,WAAP;AAKF,WAAKP,MAAMY,OAAX;AACE,eAAOhB,6BAAP;AACF;AACE,eAAOK,KAAP;AAxBJ;AA0BD,GAlCD;AAmCD;;AAEM,SAAST,0BAAT,CAAoCQ,KAApC,EAA2C;AAChD,SAAO,YAA4B;AAAA,QAA3BC,KAA2B,uEAAnB,IAAmB;AAAA;AAAA,QAAXC,IAAW,SAAXA,IAAW;;AACjC,YAAQA,IAAR;AACE,WAAKF,MAAMQ,WAAX;AACA,WAAKR,MAAMU,uBAAX;AACA,WAAKV,MAAMW,4BAAX;AACA,WAAKX,MAAMS,cAAX;AACE,eAAOI,KAAKC,GAAL,EAAP;AACF,WAAKd,MAAMY,OAAX;AACE,eAAO,IAAP;AACF;AACE,eAAOX,KAAP;AATJ;AAWD,GAZD;AAaD;;AAEM,SAASR,mBAAT,CAA6BO,KAA7B,EAAoC;AACzC,SAAO,YAAuC;AAAA,QAAtCC,KAAsC,uEAA9B,IAA8B;AAAA;AAAA,QAAtBC,IAAsB,SAAtBA,IAAsB;AAAA,QAAhBE,SAAgB,SAAhBA,SAAgB;;AAC5C,YAAQF,IAAR;AACE,WAAKF,MAAMQ,WAAX;AACE,eAAOJ,SAAP;AACF,WAAKJ,MAAMY,OAAX;AACE,eAAO,IAAP;AACF;AACE,eAAOX,KAAP;AANJ;AAQD,GATD;AAUD;;AAEM,SAASP,uBAAT,CAAiCM,KAAjC,EAAwC;AAC7C,SAAO,YAA2C;AAAA,QAA1CC,KAA0C,uEAAlC,IAAkC;AAAA;AAAA,QAA1BC,IAA0B,SAA1BA,IAA0B;AAAA,QAApBa,aAAoB,SAApBA,aAAoB;;AAChD,YAAQb,IAAR;AACE,WAAKF,MAAMQ,WAAX;AACE,eAAOO,aAAP;AACF,WAAKf,MAAMY,OAAX;AACE,eAAO,IAAP;AACF;AACE,eAAOX,KAAP;AANJ;AAQD,GATD;AAUD;;AAEc,SAASN,cAAT,CAAwBK,KAAxB,EAA+B;AAC5C,SAAO,4BAAgB;AACrBgB,UAAMzB,sBAAsBS,KAAtB,CADe;AAErBiB,sBAAkBzB,2BAA2BQ,KAA3B,CAFG;AAGrBI,eAAWX,oBAAoBO,KAApB,CAHU;AAIrBe,mBAAerB,wBAAwBM,KAAxB;AAJM,GAAhB,CAAP;AAMD","file":"getDataReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport {\n  pushRecordsToMessageData,\n  updateConversationRecipients,\n} from './messageStoreHelper';\n\nconst initialConversationsDataState = {\n  conversations: [],\n  conversationMap: {},\n  messages: [],\n};\nexport function getMessageDataReducer(types) {\n  return (state = initialConversationsDataState, {\n    type,\n    records,\n    syncToken = null,\n    syncConversationId = null,\n    conversationId = null,\n    recipients = null,\n  }) => {\n    switch (type) {\n      case types.syncSuccess:\n      case types.updateMessages:\n        return pushRecordsToMessageData({\n          ...state,\n          records,\n          syncToken,\n        });\n      case types.syncConversationSuccess:\n        return pushRecordsToMessageData({\n          ...state,\n          records,\n          syncToken,\n          syncConversationId,\n        });\n      case types.updateConversationRecipients:\n        return updateConversationRecipients({\n          ...state,\n          conversationId,\n          recipients,\n        });\n      case types.cleanUp:\n        return initialConversationsDataState;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getUpdatedTimestampReducer(types) {\n  return (state = null, { type }) => {\n    switch (type) {\n      case types.syncSuccess:\n      case types.syncConversationSuccess:\n      case types.updateConversationRecipients:\n      case types.updateMessages:\n        return Date.now();\n      case types.cleanUp:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSyncTokenReducer(types) {\n  return (state = null, { type, syncToken }) => {\n    switch (type) {\n      case types.syncSuccess:\n        return syncToken;\n      case types.cleanUp:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSyncTimestampReducer(types) {\n  return (state = null, { type, syncTimestamp }) => {\n    switch (type) {\n      case types.syncSuccess:\n        return syncTimestamp;\n      case types.cleanUp:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getDataReducer(types) {\n  return combineReducers({\n    data: getMessageDataReducer(types),\n    updatedTimestamp: getUpdatedTimestampReducer(types),\n    syncToken: getSyncTokenReducer(types),\n    syncTimestamp: getSyncTimestampReducer(types),\n  });\n}\n"]}