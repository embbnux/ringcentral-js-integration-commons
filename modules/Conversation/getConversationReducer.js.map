{"version":3,"sources":["modules/Conversation/getConversationReducer.js"],"names":["getConversationStatusReducer","getCurrentConversationReducer","getCurrentSenderNumberReducer","getCurrentRecipientsReducer","getMessageStoreUpdatedAtReducer","getConversationReducer","types","state","idle","type","reply","pushing","replySuccess","replyError","conversation","load","update","cleanUp","senderNumber","updateSenderNumber","recipients","updateRecipients","updatedAt","updateMessageStoreUpdatedAt","status","conversationStatus","messageStoreUpdatedAt"],"mappings":";;;;;QAIgBA,4B,GAAAA,4B;QAcAC,6B,GAAAA,6B;QAcAC,6B,GAAAA,6B;QAaAC,2B,GAAAA,2B;QAaAC,+B,GAAAA,+B;kBAYQC,sB;;AAtExB;;AACA;;;;AACA;;;;;;AAEO,SAASL,4BAAT,CAAsCM,KAAtC,EAA6C;AAClD,SAAO,YAA+C;AAAA,QAA9CC,KAA8C,uEAAtC,6BAAmBC,IAAmB;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AACpD,YAAQA,IAAR;AACE,WAAKH,MAAMI,KAAX;AACE,eAAO,6BAAmBC,OAA1B;AACF,WAAKL,MAAMM,YAAX;AACA,WAAKN,MAAMO,UAAX;AACE,eAAO,6BAAmBL,IAA1B;AACF;AACE,eAAOD,KAAP;AAPJ;AASD,GAVD;AAWD;;AAEM,SAASN,6BAAT,CAAuCK,KAAvC,EAA8C;AACnD,SAAO,YAA0C;AAAA,QAAzCC,KAAyC,uEAAjC,IAAiC;AAAA;AAAA,QAAzBE,IAAyB,SAAzBA,IAAyB;AAAA,QAAnBK,YAAmB,SAAnBA,YAAmB;;AAC/C,YAAQL,IAAR;AACE,WAAKH,MAAMS,IAAX;AACA,WAAKT,MAAMU,MAAX;AACE,eAAOF,YAAP;AACF,WAAKR,MAAMW,OAAX;AACE,eAAO,IAAP;AACF;AACE,eAAOV,KAAP;AAPJ;AASD,GAVD;AAWD;;AAEM,SAASL,6BAAT,CAAuCI,KAAvC,EAA8C;AACnD,SAAO,YAA0C;AAAA,QAAzCC,KAAyC,uEAAjC,IAAiC;AAAA;AAAA,QAAzBE,IAAyB,SAAzBA,IAAyB;AAAA,QAAnBS,YAAmB,SAAnBA,YAAmB;;AAC/C,YAAQT,IAAR;AACE,WAAKH,MAAMa,kBAAX;AACE,eAAOD,YAAP;AACF,WAAKZ,MAAMW,OAAX;AACE,eAAO,IAAP;AACF;AACE,eAAOV,KAAP;AANJ;AAQD,GATD;AAUD;;AAEM,SAASJ,2BAAT,CAAqCG,KAArC,EAA4C;AACjD,SAAO,YAAsC;AAAA,QAArCC,KAAqC,uEAA7B,EAA6B;AAAA;AAAA,QAAvBE,IAAuB,SAAvBA,IAAuB;AAAA,QAAjBW,UAAiB,SAAjBA,UAAiB;;AAC3C,YAAQX,IAAR;AACE,WAAKH,MAAMe,gBAAX;AACE,eAAOD,UAAP;AACF,WAAKd,MAAMW,OAAX;AACE,eAAO,EAAP;AACF;AACE,eAAOV,KAAP;AANJ;AAQD,GATD;AAUD;;AAEM,SAASH,+BAAT,CAAyCE,KAAzC,EAAgD;AACrD,SAAO,YAAuC;AAAA,QAAtCC,KAAsC,uEAA9B,IAA8B;AAAA;AAAA,QAAtBE,IAAsB,SAAtBA,IAAsB;AAAA,QAAhBa,SAAgB,SAAhBA,SAAgB;;AAC5C,YAAQb,IAAR;AACE,WAAKH,MAAMiB,2BAAX;AAAwC;AACtC,iBAAOD,SAAP;AACD;AACD;AACE,eAAOf,KAAP;AALJ;AAOD,GARD;AASD;;AAEc,SAASF,sBAAT,CAAgCC,KAAhC,EAAuC;AACpD,SAAO,4BAAgB;AACrBkB,YAAQ,sCAAuBlB,KAAvB,CADa;AAErBmB,wBAAoBzB,6BAA6BM,KAA7B,CAFC;AAGrBQ,kBAAcb,8BAA8BK,KAA9B,CAHO;AAIrBY,kBAAchB,8BAA8BI,KAA9B,CAJO;AAKrBc,gBAAYjB,4BAA4BG,KAA5B,CALS;AAMrBoB,2BAAuBtB,gCAAgCE,KAAhC;AANF,GAAhB,CAAP;AAQD","file":"getConversationReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport conversationStatus from './conversationStatus';\n\nexport function getConversationStatusReducer(types) {\n  return (state = conversationStatus.idle, { type }) => {\n    switch (type) {\n      case types.reply:\n        return conversationStatus.pushing;\n      case types.replySuccess:\n      case types.replyError:\n        return conversationStatus.idle;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getCurrentConversationReducer(types) {\n  return (state = null, { type, conversation }) => {\n    switch (type) {\n      case types.load:\n      case types.update:\n        return conversation;\n      case types.cleanUp:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getCurrentSenderNumberReducer(types) {\n  return (state = null, { type, senderNumber }) => {\n    switch (type) {\n      case types.updateSenderNumber:\n        return senderNumber;\n      case types.cleanUp:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getCurrentRecipientsReducer(types) {\n  return (state = [], { type, recipients }) => {\n    switch (type) {\n      case types.updateRecipients:\n        return recipients;\n      case types.cleanUp:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getMessageStoreUpdatedAtReducer(types) {\n  return (state = null, { type, updatedAt }) => {\n    switch (type) {\n      case types.updateMessageStoreUpdatedAt: {\n        return updatedAt;\n      }\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getConversationReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    conversationStatus: getConversationStatusReducer(types),\n    conversation: getCurrentConversationReducer(types),\n    senderNumber: getCurrentSenderNumberReducer(types),\n    recipients: getCurrentRecipientsReducer(types),\n    messageStoreUpdatedAt: getMessageStoreUpdatedAtReducer(types),\n  });\n}\n"]}