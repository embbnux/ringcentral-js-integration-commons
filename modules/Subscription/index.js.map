{"version":3,"sources":["modules/Subscription/index.js"],"names":["DEFAULT_TIME_TO_RETRY","Subscription","auth","client","storage","timeToRetry","options","actionTypes","_auth","_client","_storage","_timeToRetry","_cacheStorageKey","_reducer","registerReducer","key","reducer","_resetPromise","_removePromise","_retryTimeoutId","_registerTimeoutId","store","subscribe","loginStatus","loggedIn","ready","status","pending","dispatch","type","initSuccess","notLoggedIn","reset","addBeforeLogoutHandler","_subscription","t","Date","now","_subscribe","remove","service","createSubscription","cachedSubscription","setSubscription","error","on","events","notification","message","removeSuccess","removeError","renewSuccess","subscription","renewError","_retry","subscribeSuccess","subscribeError","_detectSleep","clearTimeout","setTimeout","setEventFilters","filters","register","_createSubscription","_register","oldFilters","addFilters","concat","length","removeFilters","fiters","_stopRetry","_remove","resetSuccess","_reset","state","subscriptionStatus","getItem"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport sleep from '../../lib/sleep';\nimport loginStatus from '../Auth/loginStatus';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport getSubscriptionReducer, {\n  getCachedSubscriptionReducer,\n} from './getSubscriptionReducer';\nimport actionTypes from './actionTypes';\nimport proxify from '../../lib/proxy/proxify';\n\nconst DEFAULT_TIME_TO_RETRY = 60 * 1000;\n\nexport default class Subscription extends RcModule {\n  constructor({\n    auth,\n    client,\n    storage,\n    timeToRetry = DEFAULT_TIME_TO_RETRY,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._auth = auth;\n    this._client = client;\n    this._storage = storage;\n    this._timeToRetry = timeToRetry;\n    this._cacheStorageKey = 'cachedSubscription';\n    this._reducer = getSubscriptionReducer(this.actionTypes);\n    this._storage.registerReducer({\n      key: this._cacheStorageKey,\n      reducer: getCachedSubscriptionReducer(this.actionTypes),\n    });\n\n    this._resetPromise = null;\n    this._removePromise = null;\n    this._retryTimeoutId = null;\n    this._registerTimeoutId = null;\n  }\n  initialize() {\n    this.store.subscribe(async () => {\n      if (\n        this._auth.loginStatus === loginStatus.loggedIn &&\n        this._storage.ready &&\n        this.status === moduleStatuses.pending\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n        });\n      } else if (\n        (\n          this._auth.loginStatus === loginStatus.notLoggedIn ||\n          !this._storage.ready\n        ) &&\n        this.ready\n      ) {\n        this.reset();\n      }\n    });\n    this._auth.addBeforeLogoutHandler(async () => {\n      if (this.ready) {\n        await this.reset();\n      }\n    });\n  }\n\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get filters() {\n    return this.state.filters;\n  }\n\n  get message() {\n    return this.state.message;\n  }\n\n  get subscriptionStatus() {\n    return this.state.subscriptionStatus;\n  }\n\n  get cachedSubscription() {\n    return this._storage.getItem(this._cacheStorageKey);\n  }\n\n  async _detectSleep() {\n    while (this._subscription) {\n      const t = Date.now();\n      await sleep(10000);\n      if (this.ready && this._subscribe && Date.now() - t > 20 * 1000) {\n        // a time lapse of 10 seconds is detected\n        await this.remove();\n        await this._subscribe();\n        break;\n      }\n    }\n  }\n\n  _createSubscription() {\n    this._subscription = this._client.service.createSubscription();\n    if (this.cachedSubscription) {\n      try {\n        this._subscription.setSubscription(this.cachedSubscription);\n      } catch (error) {\n        /* falls through */\n      }\n    }\n    this._subscription.on(this._subscription.events.notification, (message) => {\n      this.store.dispatch({\n        type: this.actionTypes.notification,\n        message,\n      });\n    });\n    this._subscription.on(this._subscription.events.removeSuccess, () => {\n      this.store.dispatch({\n        type: this.actionTypes.removeSuccess,\n      });\n    });\n    this._subscription.on(this._subscription.events.removeError, (error) => {\n      this.store.dispatch({\n        type: this.actionTypes.removeError,\n        error,\n      });\n    });\n    this._subscription.on(this._subscription.events.renewSuccess, () => {\n      this.store.dispatch({\n        type: this.actionTypes.renewSuccess,\n        subscription: this._subscription.subscription(),\n      });\n    });\n    this._subscription.on(this._subscription.events.renewError, (error) => {\n      if (this._subscription) {\n        this._subscription.reset();\n        this._subscription = null;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.renewError,\n        error,\n      });\n      if (\n        this._auth.loginStatus === loginStatus.loggedIn &&\n        this._storage.ready\n      ) {\n        // immediately start the retry process after the first renewError\n        this._retry(0);\n      }\n    });\n    this._subscription.on(this._subscription.events.subscribeSuccess, () => {\n      this.store.dispatch({\n        type: this.actionTypes.subscribeSuccess,\n        subscription: this._subscription.subscription(),\n      });\n    });\n    this._subscription.on(this._subscription.events.subscribeError, (error) => {\n      this.store.dispatch({\n        type: this.actionTypes.subscribeError,\n        error,\n      });\n      if (\n        this._auth.loginStatus === loginStatus.loggedIn &&\n        this._storage.ready\n      ) {\n        this._retry();\n      }\n    });\n    this._detectSleep();\n  }\n\n  _register() {\n    if (this._registerTimeoutId) {\n      clearTimeout(this._registerTimeoutId);\n    }\n    this._registerTimeoutId = setTimeout(() => {\n      this._registerTimeoutId = null;\n      this.store.dispatch({\n        type: this.actionTypes.subscribe,\n      });\n      this._subscription.setEventFilters(this.filters);\n      this._subscription.register();\n    }, 2000);\n  }\n\n  _subscribe() {\n    if (!this._subscription) {\n      this._createSubscription();\n    }\n    this._subscription.setEventFilters(this.filters);\n    this._register();\n  }\n\n  @proxify\n  async subscribe(events = []) {\n    if (this.ready) {\n      const oldFilters = this.filters;\n      this.store.dispatch({\n        type: this.actionTypes.addFilters,\n        filters: [].concat(events),\n      });\n      if (oldFilters.length !== this.filters.length) {\n        await this._subscribe();\n      }\n    }\n  }\n\n  @proxify\n  async unsubscribe(events = []) {\n    if (this.ready) {\n      const oldFilters = this.filters;\n      this.store.dispatch({\n        type: this.actionTypes.removeFilters,\n        fiters: [].concat(events),\n      });\n      if (this.filters.length === 0) {\n        this.remove();\n      } else if (oldFilters.length !== this.filters.length) {\n        this._subscribe();\n      }\n    }\n  }\n\n  async _stopRetry() {\n    if (this._retryTimeoutId) {\n      clearTimeout(this._retryTimeoutId);\n      this._retryTimeoutId = null;\n    }\n  }\n\n  async _retry(t = this._timeToRetry) {\n    this._stopRetry();\n    this._retryTimeoutId = setTimeout(() => {\n      if (this.ready) {\n        this._subscribe();\n      }\n    }, t);\n  }\n\n  async _remove() {\n    if (this._subscription) {\n      try {\n        this.store.dispatch({\n          type: this.actionTypes.remove,\n        });\n        await this._subscription.remove();\n      } catch (error) {\n        /* falls through */\n      }\n      if (this._subscription) { // check again in case subscription object was removed while waiting\n        this._subscription.reset();\n        this._subscription = null;\n      }\n      this._removePromise = null;\n    }\n  }\n\n  @proxify\n  async remove() {\n    if (!this._removePromise) {\n      this._removePromise = this._remove();\n    }\n    return this._removePromise;\n  }\n\n  async _reset() {\n    this.store.dispatch({\n      type: this.actionTypes.reset,\n    });\n    this._stopRetry();\n    if (this._subscription) {\n      if (this._auth.loggedIn) {\n        try {\n          await this.remove();\n        } catch (error) {\n          /* falls through */\n        }\n      } else {\n        this._subscription.reset();\n        this._subscription = null;\n      }\n    }\n    this._resetPromise = null;\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  @proxify\n  async reset() {\n    if (!this._resetPromise) {\n      this._resetPromise = this._reset();\n    }\n    return this._resetPromise;\n  }\n}\n"]}