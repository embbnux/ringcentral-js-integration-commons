{"version":3,"sources":["modules/Subscription/index.js"],"names":["DEFAULT_TIME_TO_RETRY","Subscription","auth","client","storage","timeToRetry","options","actionTypes","_auth","_client","_storage","_timeToRetry","_cacheStorageKey","_reducer","registerReducer","key","reducer","_resetPromise","_removePromise","_retryTimeoutId","store","subscribe","loginStatus","loggedIn","ready","status","pending","dispatch","type","initSuccess","notLoggedIn","reset","addBeforeLogoutHandler","_subscription","service","createSubscription","cachedSubscription","setSubscription","error","on","events","notification","message","removeSuccess","removeError","renewSuccess","subscription","renewError","_retry","subscribeSuccess","subscribeError","_createSubscription","setEventFilters","filters","register","oldFilters","addFilters","concat","length","_subscribe","removeFilters","fiters","remove","clearTimeout","t","_stopRetry","setTimeout","_remove","resetSuccess","_reset","state","subscriptionStatus","getItem"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport loginStatus from '../Auth/loginStatus';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport getSubscriptionReducer, {\n  getCachedSubscriptionReducer,\n} from './getSubscriptionReducer';\nimport actionTypes from './actionTypes';\nimport proxify from '../../lib/proxy/proxify';\n\nconst DEFAULT_TIME_TO_RETRY = 60 * 1000;\n\nexport default class Subscription extends RcModule {\n  constructor({\n    auth,\n    client,\n    storage,\n    timeToRetry = DEFAULT_TIME_TO_RETRY,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._auth = auth;\n    this._client = client;\n    this._storage = storage;\n    this._timeToRetry = timeToRetry;\n    this._cacheStorageKey = 'cachedSubscription';\n    this._reducer = getSubscriptionReducer(this.actionTypes);\n    this._storage.registerReducer({\n      key: this._cacheStorageKey,\n      reducer: getCachedSubscriptionReducer(this.actionTypes),\n    });\n\n    this._resetPromise = null;\n    this._removePromise = null;\n    this._retryTimeoutId = null;\n  }\n  initialize() {\n    this.store.subscribe(async () => {\n      if (\n        this._auth.loginStatus === loginStatus.loggedIn &&\n        this._storage.ready &&\n        this.status === moduleStatuses.pending\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n        });\n      } else if (\n        (this._auth.loginStatus === loginStatus.notLoggedIn ||\n          !this._storage.ready) &&\n        this.ready\n      ) {\n        this.reset();\n      }\n    });\n    this._auth.addBeforeLogoutHandler(async () => {\n      if (this.ready) {\n        await this.reset();\n      }\n    });\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get filters() {\n    return this.state.filters;\n  }\n\n  get message() {\n    return this.state.message;\n  }\n\n  get subscriptionStatus() {\n    return this.state.subscriptionStatus;\n  }\n\n  get cachedSubscription() {\n    return this._storage.getItem(this._cacheStorageKey);\n  }\n\n  @proxify\n  async _createSubscription() {\n    this._subscription = this._client.service.createSubscription();\n    if (this.cachedSubscription) {\n      try {\n        this._subscription.setSubscription(this.cachedSubscription);\n      } catch (error) {\n        /* falls through */\n      }\n    }\n    this._subscription.on(this._subscription.events.notification, (message) => {\n      this.store.dispatch({\n        type: this.actionTypes.notification,\n        message,\n      });\n    });\n    this._subscription.on(this._subscription.events.removeSuccess, () => {\n      this.store.dispatch({\n        type: this.actionTypes.removeSuccess,\n      });\n    });\n    this._subscription.on(this._subscription.events.removeError, (error) => {\n      this.store.dispatch({\n        type: this.actionTypes.removeError,\n        error,\n      });\n    });\n    this._subscription.on(this._subscription.events.renewSuccess, () => {\n      this.store.dispatch({\n        type: this.actionTypes.renewSuccess,\n        subscription: this._subscription.subscription(),\n      });\n    });\n    this._subscription.on(this._subscription.events.renewError, (error) => {\n      if (this._subscription) {\n        this._subscription.reset();\n        this._subscription = null;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.renewError,\n        error,\n      });\n      if (\n        this._auth.loginStatus === loginStatus.loggedIn &&\n        this._storage.ready\n      ) {\n        // immediately start the retry process after the first renewError\n        this._retry(0);\n      }\n    });\n    this._subscription.on(this._subscription.events.subscribeSuccess, () => {\n      this.store.dispatch({\n        type: this.actionTypes.subscribeSuccess,\n        subscription: this._subscription.subscription(),\n      });\n    });\n    this._subscription.on(this._subscription.events.subscribeError, (error) => {\n      this.store.dispatch({\n        type: this.actionTypes.subscribeError,\n        error,\n      });\n      if (\n        this._auth.loginStatus === loginStatus.loggedIn &&\n        this._storage.ready\n      ) {\n        this._retry();\n      }\n    });\n  }\n\n  @proxify\n  async _subscribe() {\n    if (!this._subscription) {\n      await this._createSubscription();\n    }\n    this._subscription.setEventFilters(this.filters);\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.subscribe,\n      });\n      await this._subscription.register();\n    } catch (error) {\n      /* falls through */\n    }\n  }\n\n  @proxify\n  async subscribe(events) {\n    if (this.ready) {\n      const oldFilters = this.filters;\n      this.store.dispatch({\n        type: this.actionTypes.addFilters,\n        filters: [].concat(events),\n      });\n      if (oldFilters.length !== this.filters.length) {\n        await this._subscribe();\n      }\n    }\n  }\n  @proxify\n  async unsubscribe(events) {\n    if (this.ready) {\n      const oldFilters = this.filters;\n      this.store.dispatch({\n        type: this.actionTypes.removeFilters,\n        fiters: [].concat(events),\n      });\n      if (this.filters.length === 0) {\n        this.remove();\n      } else if (oldFilters.length !== this.filters.length) {\n        this._subscribe();\n      }\n    }\n  }\n  @proxify\n  async _stopRetry() {\n    if (this._retryTimeoutId) {\n      clearTimeout(this._retryTimeoutId);\n      this._retryTimeoutId = null;\n    }\n  }\n  @proxify\n  async _retry(t = this._timeToRetry) {\n    this._stopRetry();\n    this._retryTimeoutId = setTimeout(() => {\n      if (this.ready) {\n        this._subscribe();\n      }\n    }, t);\n  }\n  @proxify\n  async _remove() {\n    if (this._subscription) {\n      try {\n        this.store.dispatch({\n          type: this.actionTypes.remove,\n        });\n        await this._subscription.remove();\n      } catch (error) {\n        /* falls through */\n      }\n      if (this._subscription) { // check again in case subscription object was removed while waiting\n        this._subscription.reset();\n        this._subscription = null;\n      }\n      this._removePromise = null;\n    }\n  }\n  @proxify\n  async remove() {\n    if (!this._removePromise) {\n      this._removePromise = this._remove();\n    }\n    return this._removePromise;\n  }\n\n  @proxify\n  async _reset() {\n    this.store.dispatch({\n      type: this.actionTypes.reset,\n    });\n    this._stopRetry();\n    if (this._subscription) {\n      if (this._auth.loggedIn) {\n        try {\n          await this.remove();\n        } catch (error) {\n          /* falls through */\n        }\n      } else {\n        this._subscription.reset();\n        this._subscription = null;\n      }\n    }\n    this._resetPromise = null;\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n  @proxify\n  async reset() {\n    if (!this._resetPromise) {\n      this._resetPromise = this._reset();\n    }\n    return this._resetPromise;\n  }\n}\n"]}