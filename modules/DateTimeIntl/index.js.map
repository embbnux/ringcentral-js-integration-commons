{"version":3,"sources":["modules/DateTimeIntl/index.js"],"names":["FallbackProviderName","DateTimeIntl","auth","locale","storage","ttl","options","actionTypes","_auth","_locale","_storage","_ttl","_providers","_providersPrioritized","_priorProvider","_fallbackProvider","_reducer","_storageKey","_storageReducer","registerReducer","key","reducer","_shouldInit","store","dispatch","type","init","_shouldLoad","_loadSettings","_initProvider","_shouldReset","_resetModuleStatus","_addFallbackProvider","subscribe","_onStateChange","pending","ready","_providersReadyCheck","isFreshLogin","cache","Date","now","timestamp","_detectPriorProvider","initSuccess","resetSuccess","forEach","provider","readyCheckFn","array","threshold","handler","items","_loadProvider","providerName","success","fetch","getSettingsFn","providerSettings","fetchSuccess","fetchError","error","validity","push","sort","a","b","priorityNumber","addProvider","getSettings","args","formatDateTimeFn","formatDateTime","utcString","opts","Error","settings","_prioritizeProviders","state","status","dateTimeIntlStatus","getItem"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport sliceExecute from '../../lib/sliceExecute';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport actionTypes from './actionTypes';\nimport getDateTimeIntlReducer from './getDateTimeIntlReducer';\nimport getStorageReducer from './getStorageReducer';\nimport BrowserDateTimeIntlProvider from './browserDateTimeIntlProvider';\n\nconst FallbackProviderName = '$browser$';\n\nexport default class DateTimeIntl extends RcModule {\n  constructor({\n    auth,\n    locale,\n    storage,\n    ttl = 5 * 60 * 1000,\n    ...options,\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._auth = auth;\n    this._locale = locale;\n    this._storage = storage;\n    this._ttl = ttl;\n    // define\n    this._providers = {};\n    this._providersPrioritized = [];\n    this._priorProvider = null;\n    this._fallbackProvider = null;\n    this._reducer = getDateTimeIntlReducer(this.actionTypes);\n    // storage\n    this._storageKey = 'dateTimeIntl';\n    this._storageReducer = getStorageReducer(this.actionTypes);\n    this._storage.registerReducer({ key: this._storageKey, reducer: this._storageReducer });\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      if (this._shouldLoad()) {\n        await this._loadSettings();\n        this._initProvider();\n      } else {\n        this._initProvider();\n      }\n    } else if (this._shouldReset()) {\n      this._resetModuleStatus();\n    }\n  }\n\n  initialize() {\n    this._addFallbackProvider();\n    this.store.subscribe(async () => {\n      await this._onStateChange();\n    });\n  }\n\n  _shouldInit() {\n    return this.pending &&\n      this._storage.ready &&\n      this._providersReadyCheck();\n  }\n\n  _shouldLoad() {\n    return this._auth.isFreshLogin ||\n      !this.cache ||\n      ((Date.now() - this.cache.timestamp) > this._ttl);\n  }\n\n  _shouldReset() {\n    return (\n      (\n        this.ready &&\n        !this._storage.ready\n      ) ||\n      (\n        this.ready &&\n        this._storage.ready &&\n        (\n          !this.cache ||\n          ((Date.now() - this.cache.timestamp) > this._ttl)\n        )\n      )\n    );\n  }\n\n  _initProvider() {\n    this._detectPriorProvider();\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n  }\n\n  _resetModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  _providersReadyCheck() {\n    let ready = true;\n    this._providersPrioritized.forEach((provider) => {\n      ready = ready && provider.readyCheckFn();\n    });\n    return ready;\n  }\n\n  async _loadSettings() {\n    await sliceExecute({\n      array: this._providersPrioritized,\n      threshold: 1,\n      handler: async (items) => {\n        const provider = items[0];\n        await this._loadProvider(provider);\n      },\n    });\n  }\n\n  // for test used\n  _loadProviderByName(providerName) {\n    const provider = this._providers[providerName];\n    if (provider) {\n      this._loadProvider(provider);\n    }\n  }\n\n  async _loadProvider(provider) {\n    let success = true;\n    this.store.dispatch({\n      type: this.actionTypes.fetch,\n      provider,\n    });\n    try {\n      const providerSettings = await provider.getSettingsFn();\n      this.store.dispatch({\n        type: this.actionTypes.fetchSuccess,\n        timestamp: Date.now(),\n        provider,\n        providerSettings,\n      });\n    } catch (error) {\n      success = false;\n      this.store.dispatch({\n        type: this.actionTypes.fetchError,\n        timestamp: Date.now(),\n        provider,\n        error,\n      });\n    }\n    this._detectPriorProvider();\n    return success;\n  }\n\n  _detectPriorProvider() {\n    this._priorProvider = null;\n    this._providersPrioritized.forEach((provider) => {\n      if (\n        this._priorProvider === null &&\n        this.cache.validity && (\n          this.cache.validity[provider.providerName] === 'y' ||\n          this.cache.validity[provider.providerName] === true\n        )\n      ) {\n        this._priorProvider = provider;\n      }\n    });\n  }\n\n  _prioritizeProviders() {\n    const array = this._providersPrioritized = [];\n    Object.keys(this._providers).forEach((key) => {\n      array.push(this._providers[key]);\n    });\n    array.sort((a, b) =>\n      b.priorityNumber - a.priorityNumber\n    );\n  }\n\n  _addFallbackProvider() {\n    const providerName = FallbackProviderName;\n    if (!this._providers[providerName]) {\n      const provider = new BrowserDateTimeIntlProvider({\n        locale: this._locale,\n      });\n      this._fallbackProvider = this.addProvider({\n        providerName,\n        priorityNumber: -1, // the lowest priority\n        readyCheckFn: () => provider.ready,\n        getSettingsFn: args => provider.getSettings(args),\n        formatDateTimeFn: args => provider.formatDateTime(args),\n      });\n    }\n  }\n\n  formatDateTime({ utcString, providerName, ...opts }) {\n    let provider;\n    if (providerName) {\n      provider = this._providers[providerName];\n      if (!provider) {\n        throw new Error(`DateTimeIntl: Can not find format provider \"${providerName}\".`);\n      }\n    } else {\n      provider = this._priorProvider || this._fallbackProvider;\n      if (!provider) {\n        throw new Error('DateTimeIntl: Can not find any available format provider.');\n      }\n    }\n    const settings = this.cache.settings[provider.providerName];\n    return provider.formatDateTimeFn({\n      settings,\n      utcString,\n      ...opts,\n    });\n  }\n\n  // priorityNumber should not less than 0,\n  // the greater priorityNumber the higher priority\n  addProvider({\n    providerName,\n    priorityNumber,\n    readyCheckFn,\n    getSettingsFn,\n    formatDateTimeFn,\n  }) {\n    if (!providerName) {\n      throw new Error('DateTimeIntl: \"providerName\" is required.');\n    }\n    if (this._providers[providerName]) {\n      throw new Error(`DateTimeIntl: A provider named \"${providerName}\" already exists.`);\n    }\n    if (typeof priorityNumber !== 'number') {\n      throw new Error('DateTimeIntl: \"priorityNumber\" must be a number.');\n    }\n    if (priorityNumber < 0 && providerName !== FallbackProviderName) {\n      throw new Error('DateTimeIntl: \"priorityNumber\" should not less than 0.');\n    }\n    if (typeof readyCheckFn !== 'function') {\n      throw new Error('DateTimeIntl: \"readyCheckFn\" must be a function.');\n    }\n    if (typeof getSettingsFn !== 'function') {\n      throw new Error('DateTimeIntl: \"getSettingsFn\" must be a function.');\n    }\n    if (typeof formatDateTimeFn !== 'function') {\n      throw new Error('DateTimeIntl: \"formatDateTimeFn\" must be a function.');\n    }\n    const provider = {\n      providerName,\n      priorityNumber,\n      readyCheckFn,\n      getSettingsFn,\n      formatDateTimeFn,\n    };\n    this._providers[providerName] = provider;\n    this._prioritizeProviders();\n    return provider;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get dateTimeIntlStatus() {\n    return this.state.dateTimeIntlStatus;\n  }\n\n  get ready() {\n    return this.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.status === moduleStatuses.pending;\n  }\n\n  get cache() {\n    return this._storage.getItem(this._storageKey);\n  }\n}\n"]}