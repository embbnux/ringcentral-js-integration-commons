{"version":3,"sources":["modules/DateTimeIntl/getStorageReducer.js"],"names":["getSettingsReducer","getValidityReducer","getTimestampReducer","getStorageReducer","actionTypes","state","type","provider","providerSettings","newState","fetchSuccess","providerName","fetchError","reset","fetch","timestamp","settings","validity"],"mappings":";;;;;;;;;;QAEgBA,kB,GAAAA,kB;QAqBAC,kB,GAAAA,kB;QA0BAC,mB,GAAAA,mB;kBAiBQC,iB;;AAlExB;;;;AAEO,SAASH,kBAAT,CAA4BI,WAA5B,EAAyC;AAC9C,SAAO,YAAsD;AAAA,QAArDC,KAAqD,uEAA7C,EAA6C;AAAA;AAAA,QAAvCC,IAAuC,QAAvCA,IAAuC;AAAA,QAAjCC,QAAiC,QAAjCA,QAAiC;AAAA,QAAvBC,gBAAuB,QAAvBA,gBAAuB;;AAC3D,QAAMC,sCAAgBJ,KAAhB,CAAN;AACA,YAAQC,IAAR;AACE,WAAKF,YAAYM,YAAjB;AACED,iBAASF,SAASI,YAAlB,IAAkCH,gBAAlC;AACA,eAAOC,QAAP;;AAEF,WAAKL,YAAYQ,UAAjB;AACE,eAAOH,SAASF,SAASI,YAAlB,CAAP;AACA,eAAOF,QAAP;;AAEF,WAAKL,YAAYS,KAAjB;AACE,eAAO,EAAP;;AAEF;AACE,eAAOR,KAAP;AAbJ;AAeD,GAjBD;AAkBD;;AAEM,SAASJ,kBAAT,CAA4BG,WAA5B,EAAyC;AAC9C,SAAO,YAAoC;AAAA,QAAnCC,KAAmC,uEAA3B,EAA2B;AAAA;AAAA,QAArBC,IAAqB,SAArBA,IAAqB;AAAA,QAAfC,QAAe,SAAfA,QAAe;;AACzC,QAAME,sCAAgBJ,KAAhB,CAAN;AACA,YAAQC,IAAR;;AAEE,WAAKF,YAAYU,KAAjB;AACE,eAAOL,SAASF,SAASI,YAAlB,CAAP;AACA,eAAOF,QAAP;;AAEF,WAAKL,YAAYM,YAAjB;AACED,iBAASF,SAASI,YAAlB,IAAkC,IAAlC;AACA,eAAOF,QAAP;;AAEF,WAAKL,YAAYQ,UAAjB;AACEH,iBAASF,SAASI,YAAlB,IAAkC,KAAlC;AACA,eAAOF,QAAP;;AAEF,WAAKL,YAAYS,KAAjB;AACE,eAAO,EAAP;;AAEF;AACE,eAAOR,KAAP;AAlBJ;AAoBD,GAtBD;AAuBD;;AAEM,SAASH,mBAAT,CAA6BE,WAA7B,EAA0C;AAC/C,SAAO,YAAoC;AAAA,QAAnCC,KAAmC,uEAA3B,CAA2B;AAAA;AAAA,QAAtBC,IAAsB,SAAtBA,IAAsB;AAAA,QAAhBS,SAAgB,SAAhBA,SAAgB;;AACzC,YAAQT,IAAR;;AAEE,WAAKF,YAAYM,YAAjB;AACA,WAAKN,YAAYQ,UAAjB;AACE,eAAOG,SAAP;;AAEF,WAAKX,YAAYS,KAAjB;AACE,eAAO,CAAP;;AAEF;AACE,eAAOR,KAAP;AAVJ;AAYD,GAbD;AAcD;;AAEc,SAASF,iBAAT,CAA2BC,WAA3B,EAAwC;AACrD,SAAO,4BAAgB;AACrBY,cAAUhB,mBAAmBI,WAAnB,CADW;AAErBa,cAAUhB,mBAAmBG,WAAnB,CAFW;AAGrBW,eAAWb,oBAAoBE,WAApB;AAHU,GAAhB,CAAP;AAKD","file":"getStorageReducer.js","sourcesContent":["import { combineReducers } from 'redux';\n\nexport function getSettingsReducer(actionTypes) {\n  return (state = {}, { type, provider, providerSettings }) => {\n    const newState = { ...state };\n    switch (type) {\n      case actionTypes.fetchSuccess:\n        newState[provider.providerName] = providerSettings;\n        return newState;\n\n      case actionTypes.fetchError:\n        delete newState[provider.providerName];\n        return newState;\n\n      case actionTypes.reset:\n        return {};\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getValidityReducer(actionTypes) {\n  return (state = {}, { type, provider }) => {\n    const newState = { ...state };\n    switch (type) {\n\n      case actionTypes.fetch:\n        delete newState[provider.providerName];\n        return newState;\n\n      case actionTypes.fetchSuccess:\n        newState[provider.providerName] = true;\n        return newState;\n\n      case actionTypes.fetchError:\n        newState[provider.providerName] = false;\n        return newState;\n\n      case actionTypes.reset:\n        return {};\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getTimestampReducer(actionTypes) {\n  return (state = 0, { type, timestamp }) => {\n    switch (type) {\n\n      case actionTypes.fetchSuccess:\n      case actionTypes.fetchError:\n        return timestamp;\n\n      case actionTypes.reset:\n        return 0;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getStorageReducer(actionTypes) {\n  return combineReducers({\n    settings: getSettingsReducer(actionTypes),\n    validity: getValidityReducer(actionTypes),\n    timestamp: getTimestampReducer(actionTypes),\n  });\n}\n"]}