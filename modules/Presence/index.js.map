{"version":3,"sources":["modules/Presence/index.js"],"names":["presenceEndPoint","Presence","auth","client","subscription","actionTypes","options","_subscriptionHandler","message","test","event","body","dndStatus","store","dispatch","type","notification","_auth","_client","_subscription","_reducer","_lastMessage","subscribe","loginStatus","loggedIn","ready","status","pending","init","fetch","initSuccess","resetSuccess","ownerId","account","extension","presence","get","data","fetchSuccess","_promise","fetchError","error","_fetch","state"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,mBAAmB,qBAAzB;;IAEqBC,Q;;;AACnB,0BAMG;AAAA,QALDC,IAKC,QALDA,IAKC;AAAA,QAJDC,MAIC,QAJDA,MAIC;AAAA,QAHDC,YAGC,QAHDA,YAGC;AAAA,gCAFDC,WAEC;AAAA,QAFDA,WAEC;AAAA,QADEC,OACF;AAAA;;AAAA,qKAEIA,OAFJ;AAGCD;AAHD;;AAAA,UAYHE,oBAZG,GAYoB,UAACC,OAAD,EAAa;AAClC,UAAIA,WAAWR,iBAAiBS,IAAjB,CAAsBD,QAAQE,KAA9B,CAAX,IAAmDF,QAAQG,IAA/D,EAAqE;AAAA,YAEjEC,SAFiE,GAG/DJ,QAAQG,IAHuD,CAEjEC,SAFiE;;AAInE,cAAKC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,gBAAM,MAAKV,WAAL,CAAiBW,YADL;AAElBJ;AAFkB,SAApB;AAID;AACF,KAtBE;;AAKD,UAAKK,KAAL,GAAaf,IAAb;AACA,UAAKgB,OAAL,GAAef,MAAf;AACA,UAAKgB,aAAL,GAAqBf,YAArB;;AAEA,UAAKgB,QAAL,GAAgB,kCAAmB,MAAKf,WAAxB,CAAhB;AACA,UAAKgB,YAAL,GAAoB,IAApB;AAVC;AAWF;;;;iCAYY;AAAA;;AACX,WAAKR,KAAL,CAAWS,SAAX,4DAAqB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEjB,OAAKL,KAAL,CAAWM,WAAX,KAA2B,sBAAYC,QAAvC,IACA,OAAKL,aAAL,CAAmBM,KADnB,IAEA,OAAKC,MAAL,KAAgB,uBAAaC,OAJZ;AAAA;AAAA;AAAA;;AAMjB,uBAAKd,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,OAAKV,WAAL,CAAiBuB;AADL,iBAApB;AANiB;AAAA,uBASX,OAAKC,KAAL,EATW;;AAAA;AAUjB,uBAAKV,aAAL,CAAmBG,SAAnB,CAA6B,iCAA7B;AACA,uBAAKT,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,OAAKV,WAAL,CAAiByB;AADL,iBAApB;AAXiB;AAAA;;AAAA;AAcZ,oBACL,CAAC,OAAKb,KAAL,CAAWM,WAAX,KAA2B,sBAAYC,QAAvC,IACC,CAAC,OAAKL,aAAL,CAAmBM,KADtB,KAEA,OAAKA,KAHA,EAIL;AACA,yBAAKZ,KAAL,CAAWC,QAAX,CAAoB;AAClBC,0BAAM,OAAKV,WAAL,CAAiB0B;AADL,mBAApB;AAGD,iBARM,MAQA,IACL,OAAKN,KAAL,IACA,OAAKN,aAAL,CAAmBM,KADnB,IAEA,OAAKN,aAAL,CAAmBX,OAFnB,IAGA,OAAKW,aAAL,CAAmBX,OAAnB,KAA+B,OAAKa,YAJ/B,EAKL;AACA,yBAAKA,YAAL,GAAoB,OAAKF,aAAL,CAAmBX,OAAvC;AACA,yBAAKD,oBAAL,CAA0B,OAAKc,YAA/B;AACD;;AA9BkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAArB;AAgCD;;;;;;;;;;AAEC,qBAAKR,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,KAAKV,WAAL,CAAiBwB;AADL,iBAApB;;AAIQG,uB,GAAU,KAAKf,KAAL,CAAWe,O;;uBACR,KAAKd,OAAL,CAAae,OAAb,GAAuBC,SAAvB,GAAmCC,QAAnC,GAA8CC,GAA9C,E;;;AAAbC,oB;;AACN,oBAAIL,YAAY,KAAKf,KAAL,CAAWe,OAA3B,EAAoC;AAClC,uBAAKnB,KAAL,CAAWC,QAAX,CAAoB;AAClBC,0BAAM,KAAKV,WAAL,CAAiBiC,YADL;AAElB1B,+BAAWyB,KAAKzB;AAFE,mBAApB;AAID;AACD,qBAAK2B,QAAL,GAAgB,IAAhB;;;;;;;;AAEA,qBAAKA,QAAL,GAAgB,IAAhB;AACA,qBAAK1B,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,KAAKV,WAAL,CAAiBmC,UADL;AAElBC;AAFkB,iBAApB;;;;;;;;;;;;;;;;;;;4BAOI;AACN,UAAI,CAAC,KAAKF,QAAV,EAAoB;AAClB,aAAKA,QAAL,GAAgB,KAAKG,MAAL,EAAhB;AACD;AACD,aAAO,KAAKH,QAAZ;AACD;;;wBAEY;AACX,aAAO,KAAKI,KAAL,CAAWjB,MAAlB;AACD;;;wBAEW;AACV,aAAO,KAAKiB,KAAL,CAAWjB,MAAX,KAAsB,uBAAaD,KAA1C;AACD;;;wBAEe;AACd,aAAO,KAAKkB,KAAL,CAAW/B,SAAlB;AACD;;;;;kBAxGkBX,Q","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport getPresenceReducer from './getPresenceReducer';\nimport presenceActionTypes from './actionTypes';\nimport loginStatus from '../Auth/loginStatus';\nimport moduleStatus from '../../enums/moduleStatus';\n\nconst presenceEndPoint = /.*\\/presence(\\?.*)?/;\n\nexport default class Presence extends RcModule {\n  constructor({\n    auth,\n    client,\n    subscription,\n    actionTypes = presenceActionTypes,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._auth = auth;\n    this._client = client;\n    this._subscription = subscription;\n\n    this._reducer = getPresenceReducer(this.actionTypes);\n    this._lastMessage = null;\n  }\n  _subscriptionHandler = (message) => {\n    if (message && presenceEndPoint.test(message.event) && message.body) {\n      const {\n        dndStatus\n      } = message.body;\n      this.store.dispatch({\n        type: this.actionTypes.notification,\n        dndStatus,\n      });\n    }\n  }\n  initialize() {\n    this.store.subscribe(async () => {\n      if (\n        this._auth.loginStatus === loginStatus.loggedIn &&\n        this._subscription.ready &&\n        this.status === moduleStatus.pending\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.init,\n        });\n        await this.fetch();\n        this._subscription.subscribe('/account/~/extension/~/presence');\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n        });\n      } else if (\n        (this._auth.loginStatus !== loginStatus.loggedIn ||\n          !this._subscription.ready) &&\n        this.ready\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.resetSuccess,\n        });\n      } else if (\n        this.ready &&\n        this._subscription.ready &&\n        this._subscription.message &&\n        this._subscription.message !== this._lastMessage\n      ) {\n        this._lastMessage = this._subscription.message;\n        this._subscriptionHandler(this._lastMessage);\n      }\n    });\n  }\n  async _fetch() {\n    this.store.dispatch({\n      type: this.actionTypes.fetch,\n    });\n    try {\n      const ownerId = this._auth.ownerId;\n      const data = await this._client.account().extension().presence().get();\n      if (ownerId === this._auth.ownerId) {\n        this.store.dispatch({\n          type: this.actionTypes.fetchSuccess,\n          dndStatus: data.dndStatus,\n        });\n      }\n      this._promise = null;\n    } catch (error) {\n      this._promise = null;\n      this.store.dispatch({\n        type: this.actionTypes.fetchError,\n        error,\n      });\n      throw error;\n    }\n  }\n  fetch() {\n    if (!this._promise) {\n      this._promise = this._fetch();\n    }\n    return this._promise;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatus.ready;\n  }\n\n  get dndStatus() {\n    return this.state.dndStatus;\n  }\n}\n"]}