{"version":3,"sources":["modules/Presence/index.js"],"names":["presenceEndPoint","Presence","auth","client","subscription","options","actionTypes","_auth","_client","_subscription","_reducer","store","subscribe","loginStatus","loggedIn","ready","status","pending","dispatch","type","init","fetch","initSuccess","resetSuccess","message","test","event","notification","dndStatus","body","ownerId","account","extension","presence","get","data","fetchSuccess","_promise","fetchError","error","_fetch","state"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport getPresenceReducer from './getPresenceReducer';\nimport actionTypes from './actionTypes';\nimport loginStatus from '../Auth/loginStatus';\nimport moduleStatus from '../../enums/moduleStatus';\n\nconst presenceEndPoint = /.*\\/presence(\\?.*)?/;\n\nexport default class Presence extends RcModule {\n  constructor({\n    auth,\n    client,\n    subscription,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._auth = auth;\n    this._client = client;\n    this._subscription = subscription;\n\n    this._reducer = getPresenceReducer(this.actionTypes);\n  }\n  initialize() {\n    this.store.subscribe(async () => {\n      if (\n        this._auth.loginStatus === loginStatus.loggedIn &&\n        this._subscription.ready &&\n        this.status === moduleStatus.pending\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.init,\n        });\n        await this.fetch();\n        this._subscription.subscribe('/account/~/extension/~/presence');\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n        });\n      } else if (\n        (this._auth.loginStatus !== loginStatus.loggedIn ||\n        !this._subscription.ready) &&\n        this.ready\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.resetSuccess,\n        });\n      } else if (\n        this.ready &&\n        this._subscription.message &&\n        presenceEndPoint.test(this._subscription.message.event)\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.notification,\n          dndStatus: this._subscription.message.body && this._subscription.message.body.dndStatus,\n        });\n      }\n    });\n  }\n  async _fetch() {\n    this.store.dispatch({\n      type: this.actionTypes.fetch,\n    });\n    try {\n      const ownerId = this._auth.ownerId;\n      const data = await this._client.account().extension().presence().get();\n      if (ownerId === this._auth.ownerId) {\n        this.store.dispatch({\n          type: this.actionTypes.fetchSuccess,\n          dndStatus: data.dndStatus,\n        });\n      }\n      this._promise = null;\n    } catch (error) {\n      this._promise = null;\n      this.store.dispatch({\n        type: this.actionTypes.fetchError,\n        error,\n      });\n      throw error;\n    }\n  }\n  fetch() {\n    if (!this._promise) {\n      this._promise = this._fetch();\n    }\n    return this._promise;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatus.ready;\n  }\n\n  get dndStatus() {\n    return this.state.dndStatus;\n  }\n}\n"]}