{"version":3,"sources":["modules/CallHistory/index.js"],"names":["CallHistory","detailedPresence","callLog","activeCalls","activityMatcher","contactMatcher","regionSettings","options","actionTypes","_onStateChange","_callLog","ready","_activeCalls","_detailedPresence","_regionSettings","_contactMatcher","_activityMatcher","pending","store","dispatch","type","init","initSuccess","reset","resetSuccess","uniqueNumbers","_selectors","_lastProcessedNumbers","triggerMatch","sessionIds","_lastProcessedIds","_reducer","addSelector","calls","callsFromCallLog","callsFromActiveCalls","callsFromPresence","indexMap","forEach","call","sessionId","presentInPresenceCalls","filter","concat","filteredCalls","countryCode","areaCode","map","callFrom","from","phoneNumber","callTo","to","normalizedCalls","cache","contactCache","activityCache","fromNumber","extensionNumber","toNumber","fromMatches","dataMap","toMatches","activityMatches","sort","output","numberMap","addIfNotExist","number","push","addQuerySource","getQueriesFn","readyCheckFn","subscribe","state","status"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEqBA,W;;;AACnB,6BAQG;AAAA;;AAAA,QAPDC,gBAOC,QAPDA,gBAOC;AAAA,QANDC,OAMC,QANDA,OAMC;AAAA,QALDC,WAKC,QALDA,WAKC;AAAA,QAJDC,eAIC,QAJDA,eAIC;AAAA,QAHDC,cAGC,QAHDA,cAGC;AAAA,QAFDC,cAEC,QAFDA,cAEC;AAAA,QADEC,OACF;AAAA;;AAAA,2KAEIA,OAFJ;AAGCC;AAHD;;AAAA,UAiJHC,cAjJG,8DAiJc;AAAA;AAAA;AAAA;AAAA;AAAA;AACf,kBACE,MAAKC,QAAL,CAAcC,KAAd,IACA,MAAKC,YAAL,CAAkBD,KADlB,IAEA,MAAKE,iBAAL,CAAuBF,KAFvB,IAGA,MAAKG,eAAL,CAAqBH,KAHrB,KAIC,CAAC,MAAKI,eAAN,IAAyB,MAAKA,eAAL,CAAqBJ,KAJ/C,MAKC,CAAC,MAAKK,gBAAN,IAA0B,MAAKA,gBAAL,CAAsBL,KALjD,KAMA,MAAKM,OAPP,EAQE;AACA,sBAAKC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,MAAKZ,WAAL,CAAiBa;AADL,iBAApB;AAGA,sBAAKH,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,MAAKZ,WAAL,CAAiBc;AADL,iBAApB;AAGD,eAfD,MAeO,IACL,CACE,CAAC,MAAKZ,QAAL,CAAcC,KAAf,IACA,CAAC,MAAKC,YAAL,CAAkBD,KADnB,IAEA,CAAC,MAAKE,iBAAL,CAAuBF,KAFxB,IAGA,CAAC,MAAKG,eAAL,CAAqBH,KAHtB,IAIC,MAAKI,eAAL,IAAwB,CAAC,MAAKA,eAAL,CAAqBJ,KAJ/C,IAKC,MAAKK,gBAAL,IAAyB,CAAC,MAAKA,gBAAL,CAAsBL,KANnD,KAQA,MAAKA,KATA,EAUL;AACA,sBAAKO,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,MAAKZ,WAAL,CAAiBe;AADL,iBAApB;AAGA,sBAAKL,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,MAAKZ,WAAL,CAAiBgB;AADL,iBAApB;AAGD,eAjBM,MAiBA,IACL,MAAKb,KADA,EAEL;AACMc,6BADN,GACsB,MAAKC,UAAL,CAAgBD,aAAhB,EADtB;;AAEA,oBAAI,MAAKE,qBAAL,KAA+BF,aAAnC,EAAkD;AAChD,wBAAKE,qBAAL,GAA6BF,aAA7B;AACA,sBAAI,MAAKV,eAAL,IAAwB,MAAKA,eAAL,CAAqBJ,KAAjD,EAAwD;AACtD,0BAAKI,eAAL,CAAqBa,YAArB;AACD;AACF;AACKC,0BARN,GAQmB,MAAKH,UAAL,CAAgBG,UAAhB,EARnB;;AASA,oBAAI,MAAKC,iBAAL,KAA2BD,UAA/B,EAA2C;AACzC,wBAAKC,iBAAL,GAAyBD,UAAzB;AACA,sBAAI,MAAKb,gBAAL,IAAyB,MAAKA,gBAAL,CAAsBL,KAAnD,EAA0D;AACxD,0BAAKK,gBAAL,CAAsBY,YAAtB;AACD;AACF;AACF;;AAlDc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAjJd;;AAKD,UAAKhB,YAAL,GAAoB,kCAAkBT,WAAlB,EAA+B,aAA/B,CAApB;AACA,UAAKO,QAAL,GAAgB,kCAAkBR,OAAlB,EAA2B,SAA3B,CAAhB;AACA,UAAKW,iBAAL,GAAyB,kCAAkBZ,gBAAlB,EAAoC,kBAApC,CAAzB;AACA;AACA;AACA,UAAKa,eAAL,GAAuB,kCAAkBR,cAAlB,EAAkC,gBAAlC,CAAvB;AACA,UAAKU,gBAAL,GAAwBZ,eAAxB;AACA,UAAKW,eAAL,GAAuBV,cAAvB;AACA,UAAK0B,QAAL,GAAgB,qCAAsB,MAAKvB,WAA3B,CAAhB;;AAEA,UAAKwB,WAAL,CAAiB,eAAjB,EACE;AAAA,aAAM,MAAKtB,QAAL,CAAcuB,KAApB;AAAA,KADF,EAEE;AAAA,aAAM,MAAKrB,YAAL,CAAkBqB,KAAxB;AAAA,KAFF,EAGE;AAAA,aAAM,MAAKpB,iBAAL,CAAuBoB,KAA7B;AAAA,KAHF,EAIE,UAACC,gBAAD,EAAmBC,oBAAnB,EAAyCC,iBAAzC,EAA+D;AAC7D,UAAMC,WAAW,EAAjB;AACAH,uBAAiBI,OAAjB,CAAyB,UAACC,IAAD,EAAU;AACjCF,iBAASE,KAAKC,SAAd,IAA2B,IAA3B;AACD,OAFD;AAGA,UAAMC,yBAAyB,EAA/B;AACAL,wBAAkBE,OAAlB,CAA0B,UAACC,IAAD,EAAU;AAClCE,+BAAuBF,KAAKC,SAA5B,IAAyC,IAAzC;AACD,OAFD;AAGA,aAAOL,qBACJO,MADI,CACG;AAAA,eAAQ,CAACL,SAASE,KAAKC,SAAd,CAAD,IAA6B,CAACC,uBAAuBF,KAAKC,SAA5B,CAAtC;AAAA,OADH,EAEJG,MAFI,CAEGT,gBAFH,CAAP;AAGD,KAhBH;AAkBA,UAAKF,WAAL,CAAiB,iBAAjB,EACE,MAAKN,UAAL,CAAgBkB,aADlB,EAEE;AAAA,aAAM,MAAK9B,eAAL,CAAqB+B,WAA3B;AAAA,KAFF,EAGE;AAAA,aAAM,MAAK/B,eAAL,CAAqBgC,QAA3B;AAAA,KAHF,EAIE,UAACF,aAAD,EAAgBC,WAAhB,EAA6BC,QAA7B;AAAA,aACEF,cAAcG,GAAd,CAAkB,UAACR,IAAD,EAAU;AAC1B,YAAMS,sCACDT,KAAKU,IADJ,CAAN;AAGA,YAAID,SAASE,WAAb,EAA0B;AACxBF,mBAASE,WAAT,GAAuB,+BAAgB;AACrCA,yBAAaF,SAASE,WADe;AAErCL,oCAFqC;AAGrCC;AAHqC,WAAhB,CAAvB;AAKD;AACD,YAAMK,oCACDZ,KAAKa,EADJ,CAAN;AAGA,YAAID,OAAOD,WAAX,EAAwB;AACtBC,iBAAOD,WAAP,GAAqB,+BAAgB;AACnCA,yBAAaC,OAAOD,WADe;AAEnCL,oCAFmC;AAGnCC;AAHmC,WAAhB,CAArB;AAKD;AACD,0CACKP,IADL;AAEEU,gBAAMD,QAFR;AAGEI,cAAID;AAHN;AAKD,OA1BD,CADF;AAAA,KAJF;;AAmCA,UAAKnB,WAAL,CAAiB,OAAjB,EACE,MAAKN,UAAL,CAAgB2B,eADlB,EAEE;AAAA,aAAO,MAAKtC,eAAL,IAAwB,MAAKA,eAAL,CAAqBJ,KAA7C,GACL,MAAKI,eAAL,CAAqBuC,KADhB,GAEL,IAFF;AAAA,KAFF,EAKE;AAAA,aAAO,MAAKtC,gBAAL,IAAyB,MAAKA,gBAAL,CAAsBL,KAA/C,GACL,MAAKK,gBAAL,CAAsBsC,KADjB,GAEL,IAFF;AAAA,KALF,EAQE,UAACD,eAAD,EAAkBE,YAAlB,EAAgCC,aAAhC;AAAA,aACEH,gBAAgBN,GAAhB,CAAoB,UAACR,IAAD,EAAU;AAC5B,YAAMkB,aAAalB,KAAKU,IAAL,KAAcV,KAAKU,IAAL,CAAUC,WAAV,IAAyBX,KAAKU,IAAL,CAAUS,eAAjD,CAAnB;AACA,YAAMC,WAAWpB,KAAKa,EAAL,KAAYb,KAAKa,EAAL,CAAQF,WAAR,IAAuBX,KAAKa,EAAL,CAAQM,eAA3C,CAAjB;AACA,0CACKnB,IADL;AAEEqB,uBAAcH,cAAcF,YAAd,IAA8BA,aAAaM,OAAb,CAAqBJ,UAArB,CAA/B,IAAoE,EAFnF;AAGEK,qBAAYH,YAAYJ,YAAZ,IAA4BA,aAAaM,OAAb,CAAqBF,QAArB,CAA7B,IAAgE,EAH7E;AAIEI,2BAAkBP,iBAAiBA,cAAcK,OAAd,CAAsBtB,KAAKC,SAA3B,CAAlB,IAA4D;AAJ/E;AAMD,OATD,EASGwB,IATH,iCADF;AAAA,KARF;;AAsBA,UAAKhC,WAAL,CAAiB,eAAjB,EACE,MAAKN,UAAL,CAAgB2B,eADlB,EAEE,UAACA,eAAD,EAAqB;AACnB,UAAMY,SAAS,EAAf;AACA,UAAMC,YAAY,EAAlB;AACA,eAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,YAAI,CAACF,UAAUE,MAAV,CAAL,EAAwB;AACtBH,iBAAOI,IAAP,CAAYD,MAAZ;AACAF,oBAAUE,MAAV,IAAoB,IAApB;AACD;AACF;AACDf,sBAAgBf,OAAhB,CAAwB,UAACC,IAAD,EAAU;AAChC,YAAIA,KAAKU,IAAL,IAAaV,KAAKU,IAAL,CAAUC,WAA3B,EAAwC;AACtCiB,wBAAc5B,KAAKU,IAAL,CAAUC,WAAxB;AACD,SAFD,MAEO,IAAIX,KAAKU,IAAL,IAAaV,KAAKU,IAAL,CAAUS,eAA3B,EAA4C;AACjDS,wBAAc5B,KAAKU,IAAL,CAAUS,eAAxB;AACD;AACD,YAAInB,KAAKa,EAAL,IAAWb,KAAKa,EAAL,CAAQF,WAAvB,EAAoC;AAClCiB,wBAAc5B,KAAKa,EAAL,CAAQF,WAAtB;AACD,SAFD,MAEO,IAAIX,KAAKa,EAAL,IAAWb,KAAKa,EAAL,CAAQM,eAAvB,EAAwC;AAC7CS,wBAAc5B,KAAKa,EAAL,CAAQM,eAAtB;AACD;AACF,OAXD;AAYA,aAAOO,MAAP;AACD,KAxBH;;AA2BA,QAAI,MAAKlD,eAAT,EAA0B;AACxB,YAAKA,eAAL,CAAqBuD,cAArB,CAAoC;AAClCC,sBAAc,MAAK7C,UAAL,CAAgBD,aADI;AAElC+C,sBAAc;AAAA,iBACZ,MAAK5D,YAAL,CAAkBD,KAAlB,IACA,MAAKE,iBAAL,CAAuBF,KADvB,IAEA,MAAKD,QAAL,CAAcC,KAFd,IAGA,MAAKG,eAAL,CAAqBH,KAJT;AAAA;AAFoB,OAApC;AASD;;AAED,UAAKqB,WAAL,CAAiB,YAAjB,EACE,MAAKN,UAAL,CAAgBkB,aADlB,EAEE;AAAA,aAAiBA,cAAcG,GAAd,CAAkB;AAAA,eAAQR,KAAKC,SAAb;AAAA,OAAlB,CAAjB;AAAA,KAFF;;AAKA,QAAI,MAAKxB,gBAAT,EAA2B;AACzB,YAAKA,gBAAL,CAAsBsD,cAAtB,CAAqC;AACnCC,sBAAc,MAAK7C,UAAL,CAAgBG,UADK;AAEnC2C,sBAAc;AAAA,iBACZ,MAAK5D,YAAL,CAAkBD,KAAlB,IACA,MAAKE,iBAAL,CAAuBF,KADvB,IAEA,MAAKD,QAAL,CAAcC,KAHF;AAAA;AAFqB,OAArC;AAQD;AA/IA;AAgJF;;;;iCAqDY;AACX,WAAKO,KAAL,CAAWuD,SAAX,CAAqB,KAAKhE,cAA1B;AACD;;;wBAEY;AACX,aAAO,KAAKiE,KAAL,CAAWC,MAAlB;AACD;;;wBAEW;AACV,aAAO,KAAKD,KAAL,CAAWC,MAAX,KAAsB,uBAAahE,KAA1C;AACD;;;wBAEa;AACZ,aAAO,KAAK+D,KAAL,CAAWC,MAAX,KAAsB,uBAAa1D,OAA1C;AACD;;;wBAEW;AACV,aAAO,KAAKS,UAAL,CAAgBO,KAAhB,EAAP;AACD;;;;;kBAhOkBjC,W","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport moduleStatus from '../../enums/moduleStatus';\nimport { sortByStartTime } from '../../lib/callLogHelpers';\nimport actionTypes from './actionTypes';\nimport getCallHistoryReducer from './getCallHistoryReducer';\nimport ensureExist from '../../lib/ensureExist';\nimport normalizeNumber from '../../lib/normalizeNumber';\n\nexport default class CallHistory extends RcModule {\n  constructor({\n    detailedPresence,\n    callLog,\n    activeCalls,\n    activityMatcher,\n    contactMatcher,\n    regionSettings,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._activeCalls = this::ensureExist(activeCalls, 'activeCalls');\n    this._callLog = this::ensureExist(callLog, 'callLog');\n    this._detailedPresence = this::ensureExist(detailedPresence, 'detailedPresence');\n    // this._activityMatcher = this::ensureExist(activityMatcher, 'activityMatcher');\n    // this._contactMatcher = this::ensureExist(contactMatcher, 'contactMatcher');\n    this._regionSettings = this::ensureExist(regionSettings, 'regionSettings');\n    this._activityMatcher = activityMatcher;\n    this._contactMatcher = contactMatcher;\n    this._reducer = getCallHistoryReducer(this.actionTypes);\n\n    this.addSelector('filteredCalls',\n      () => this._callLog.calls,\n      () => this._activeCalls.calls,\n      () => this._detailedPresence.calls,\n      (callsFromCallLog, callsFromActiveCalls, callsFromPresence) => {\n        const indexMap = {};\n        callsFromCallLog.forEach((call) => {\n          indexMap[call.sessionId] = true;\n        });\n        const presentInPresenceCalls = {};\n        callsFromPresence.forEach((call) => {\n          presentInPresenceCalls[call.sessionId] = true;\n        });\n        return callsFromActiveCalls\n          .filter(call => !indexMap[call.sessionId] && !presentInPresenceCalls[call.sessionId])\n          .concat(callsFromCallLog);\n      }\n    );\n    this.addSelector('normalizedCalls',\n      this._selectors.filteredCalls,\n      () => this._regionSettings.countryCode,\n      () => this._regionSettings.areaCode,\n      (filteredCalls, countryCode, areaCode) => (\n        filteredCalls.map((call) => {\n          const callFrom = {\n            ...call.from,\n          };\n          if (callFrom.phoneNumber) {\n            callFrom.phoneNumber = normalizeNumber({\n              phoneNumber: callFrom.phoneNumber,\n              countryCode,\n              areaCode,\n            });\n          }\n          const callTo = {\n            ...call.to,\n          };\n          if (callTo.phoneNumber) {\n            callTo.phoneNumber = normalizeNumber({\n              phoneNumber: callTo.phoneNumber,\n              countryCode,\n              areaCode,\n            });\n          }\n          return {\n            ...call,\n            from: callFrom,\n            to: callTo,\n          };\n        })\n      ),\n    );\n\n    this.addSelector('calls',\n      this._selectors.normalizedCalls,\n      () => (this._contactMatcher && this._contactMatcher.ready ?\n        this._contactMatcher.cache :\n        null),\n      () => (this._activityMatcher && this._activityMatcher.ready ?\n        this._activityMatcher.cache :\n        null),\n      (normalizedCalls, contactCache, activityCache) => (\n        normalizedCalls.map((call) => {\n          const fromNumber = call.from && (call.from.phoneNumber || call.from.extensionNumber);\n          const toNumber = call.to && (call.to.phoneNumber || call.to.extensionNumber);\n          return {\n            ...call,\n            fromMatches: (fromNumber && contactCache && contactCache.dataMap[fromNumber]) || [],\n            toMatches: (toNumber && contactCache && contactCache.dataMap[toNumber]) || [],\n            activityMatches: (activityCache && activityCache.dataMap[call.sessionId]) || [],\n          };\n        }).sort(sortByStartTime)\n      ),\n    );\n\n    this.addSelector('uniqueNumbers',\n      this._selectors.normalizedCalls,\n      (normalizedCalls) => {\n        const output = [];\n        const numberMap = {};\n        function addIfNotExist(number) {\n          if (!numberMap[number]) {\n            output.push(number);\n            numberMap[number] = true;\n          }\n        }\n        normalizedCalls.forEach((call) => {\n          if (call.from && call.from.phoneNumber) {\n            addIfNotExist(call.from.phoneNumber);\n          } else if (call.from && call.from.extensionNumber) {\n            addIfNotExist(call.from.extensionNumber);\n          }\n          if (call.to && call.to.phoneNumber) {\n            addIfNotExist(call.to.phoneNumber);\n          } else if (call.to && call.to.extensionNumber) {\n            addIfNotExist(call.to.extensionNumber);\n          }\n        });\n        return output;\n      },\n    );\n\n    if (this._contactMatcher) {\n      this._contactMatcher.addQuerySource({\n        getQueriesFn: this._selectors.uniqueNumbers,\n        readyCheckFn: () => (\n          this._activeCalls.ready &&\n          this._detailedPresence.ready &&\n          this._callLog.ready &&\n          this._regionSettings.ready\n        ),\n      });\n    }\n\n    this.addSelector('sessionIds',\n      this._selectors.filteredCalls,\n      filteredCalls => filteredCalls.map(call => call.sessionId),\n    );\n\n    if (this._activityMatcher) {\n      this._activityMatcher.addQuerySource({\n        getQueriesFn: this._selectors.sessionIds,\n        readyCheckFn: () => (\n          this._activeCalls.ready &&\n          this._detailedPresence.ready &&\n          this._callLog.ready\n        ),\n      });\n    }\n  }\n  _onStateChange = async () => {\n    if (\n      this._callLog.ready &&\n      this._activeCalls.ready &&\n      this._detailedPresence.ready &&\n      this._regionSettings.ready &&\n      (!this._contactMatcher || this._contactMatcher.ready) &&\n      (!this._activityMatcher || this._activityMatcher.ready) &&\n      this.pending\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (\n      (\n        !this._callLog.ready ||\n        !this._activeCalls.ready ||\n        !this._detailedPresence.ready ||\n        !this._regionSettings.ready ||\n        (this._contactMatcher && !this._contactMatcher.ready) ||\n        (this._activityMatcher && !this._activityMatcher.ready)\n      ) &&\n      this.ready\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.reset,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    } else if (\n      this.ready\n    ) {\n      const uniqueNumbers = this._selectors.uniqueNumbers();\n      if (this._lastProcessedNumbers !== uniqueNumbers) {\n        this._lastProcessedNumbers = uniqueNumbers;\n        if (this._contactMatcher && this._contactMatcher.ready) {\n          this._contactMatcher.triggerMatch();\n        }\n      }\n      const sessionIds = this._selectors.sessionIds();\n      if (this._lastProcessedIds !== sessionIds) {\n        this._lastProcessedIds = sessionIds;\n        if (this._activityMatcher && this._activityMatcher.ready) {\n          this._activityMatcher.triggerMatch();\n        }\n      }\n    }\n  }\n  initialize() {\n    this.store.subscribe(this._onStateChange);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatus.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatus.pending;\n  }\n\n  get calls() {\n    return this._selectors.calls();\n  }\n}\n"]}