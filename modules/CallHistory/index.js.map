{"version":3,"sources":["modules/CallHistory/index.js"],"names":["CallHistory","accountInfo","callLog","callMonitor","activityMatcher","contactMatcher","options","actionTypes","_accountInfo","_callLog","_activityMatcher","_contactMatcher","_callMonitor","_reducer","addSelector","calls","countryCode","map","call","callFrom","from","phoneNumber","callTo","to","_selectors","normalizedCalls","state","endedCalls","dataMapping","contactMapping","activityMapping","sessionIds","sessionId","fromNumber","extensionNumber","toNumber","fromMatches","toMatches","activityMatches","concat","filter","sort","output","numberMap","addIfNotExist","number","push","addNumbersFromCall","forEach","addQuerySource","getQueriesFn","uniqueNumbers","readyCheckFn","ready","store","subscribe","_onStateChange","_shouldInit","_initModuleStatus","_shouldReset","_resetModuleStatus","_processCallHistory","pending","_lastProcessedNumbers","_lastProcessedIds","monitorCalls","_lastProcessedMonitorCalls","find","currentCall","currentCalls","_lastProcessedCalls","ids","recentlyEndedCalls","_shouldTriggerContactMatch","triggerMatch","_shouldTriggerActivityMatch","_shouldAddEndedCalls","length","_addEndedCalls","shouldRemove","_shouldRemoveEndedCalls","_removeEndedCalls","dispatch","type","init","initSuccess","reset","resetSuccess","addEndedCalls","timestamp","Date","now","sync","removeEndedCalls","status"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport {\n  sortByStartTime,\n} from '../../lib/callLogHelpers';\nimport actionTypes from './actionTypes';\nimport getCallHistoryReducer from './getCallHistoryReducer';\nimport ensureExist from '../../lib/ensureExist';\nimport normalizeNumber from '../../lib/normalizeNumber';\n\nexport default class CallHistory extends RcModule {\n  constructor({\n    accountInfo,\n    callLog,\n    callMonitor,\n    activityMatcher,\n    contactMatcher,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._accountInfo = this::ensureExist(accountInfo, 'accountInfo');\n    this._callLog = this::ensureExist(callLog, 'callLog');\n    this._activityMatcher = activityMatcher;\n    this._contactMatcher = contactMatcher;\n    this._callMonitor = callMonitor;\n    this._reducer = getCallHistoryReducer(this.actionTypes);\n\n    this.addSelector('normalizedCalls',\n      () => this._callLog.calls,\n      () => this._accountInfo.countryCode,\n      (calls, countryCode) => (\n        calls.map((call) => {\n          const callFrom = {\n            ...call.from,\n          };\n          if (callFrom.phoneNumber) {\n            callFrom.phoneNumber = normalizeNumber({\n              phoneNumber: callFrom.phoneNumber,\n              countryCode,\n            });\n          }\n          const callTo = {\n            ...call.to,\n          };\n          if (callTo.phoneNumber) {\n            callTo.phoneNumber = normalizeNumber({\n              phoneNumber: callTo.phoneNumber,\n              countryCode,\n            });\n          }\n          return {\n            ...call,\n            from: callFrom,\n            to: callTo,\n          };\n        })\n      ),\n    );\n\n    this.addSelector('calls',\n      this._selectors.normalizedCalls,\n      () => this.state.endedCalls,\n      () => (this._contactMatcher && this._contactMatcher.dataMapping),\n      () => (this._activityMatcher && this._activityMatcher.dataMapping),\n      (normalizedCalls, endedCalls, contactMapping = {}, activityMapping = {}) => {\n        const sessionIds = {};\n        return normalizedCalls.map((call) => {\n          sessionIds[call.sessionId] = true;\n          const fromNumber = call.from && (call.from.phoneNumber || call.from.extensionNumber);\n          const toNumber = call.to && (call.to.phoneNumber || call.to.extensionNumber);\n          return {\n            ...call,\n            fromMatches: (fromNumber && contactMapping[fromNumber]) || [],\n            toMatches: (toNumber && contactMapping[toNumber]) || [],\n            activityMatches: (activityMapping[call.sessionId]) || [],\n          };\n        }).concat(endedCalls.filter(call => !sessionIds[call.sessionId]))\n          .sort(sortByStartTime);\n      },\n    );\n\n    this.addSelector('uniqueNumbers',\n      this._selectors.normalizedCalls,\n      () => this.state.endedCalls,\n      (normalizedCalls, endedCalls) => {\n        const output = [];\n        const numberMap = {};\n        function addIfNotExist(number) {\n          if (!numberMap[number]) {\n            output.push(number);\n            numberMap[number] = true;\n          }\n        }\n        function addNumbersFromCall(call) {\n          if (call.from && call.from.phoneNumber) {\n            addIfNotExist(call.from.phoneNumber);\n          } else if (call.from && call.from.extensionNumber) {\n            addIfNotExist(call.from.extensionNumber);\n          }\n          if (call.to && call.to.phoneNumber) {\n            addIfNotExist(call.to.phoneNumber);\n          } else if (call.to && call.to.extensionNumber) {\n            addIfNotExist(call.to.extensionNumber);\n          }\n        }\n        normalizedCalls.forEach(addNumbersFromCall);\n        endedCalls.forEach(addNumbersFromCall);\n        return output;\n      },\n    );\n\n    if (this._contactMatcher) {\n      this._contactMatcher.addQuerySource({\n        getQueriesFn: this._selectors.uniqueNumbers,\n        readyCheckFn: () => (\n          (!this._callMonitor || this._callMonitor.ready) &&\n          this._callLog.ready &&\n          this._accountInfo.ready\n        ),\n      });\n    }\n\n    this.addSelector('sessionIds',\n      () => this._callLog.calls,\n      () => this.state.endedCalls,\n      (calls, endedCalls) => {\n        const sessionIds = {};\n        return calls.map((call) => {\n          sessionIds[call.sessionId] = true;\n          return call.sessionId;\n        }).concat(\n          endedCalls\n            .filter(call => !sessionIds[call.sessionId])\n            .map(call => call.sessionId)\n          );\n      },\n    );\n\n    if (this._activityMatcher) {\n      this._activityMatcher.addQuerySource({\n        getQueriesFn: this._selectors.sessionIds,\n        readyCheckFn: () => (\n          (!this._callMonitor || this._callMonitor.ready) &&\n          this._callLog.ready\n        ),\n      });\n    }\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this._initModuleStatus();\n    } else if (this._shouldReset()) {\n      this._resetModuleStatus();\n    } else if (\n      this.ready\n    ) {\n      this._processCallHistory();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._callLog.ready &&\n      (!this._callMonitor || this._callMonitor.ready) &&\n      this._accountInfo.ready &&\n      (!this._contactMatcher || this._contactMatcher.ready) &&\n      (!this._activityMatcher || this._activityMatcher.ready) &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (!this._callLog.ready ||\n        (this._callMonitor && !this._callMonitor.ready) ||\n        !this._accountInfo.ready ||\n        (this._contactMatcher && !this._contactMatcher.ready) ||\n        (this._activityMatcher && !this._activityMatcher.ready)\n      ) &&\n      this.ready\n    );\n  }\n\n  _shouldTriggerContactMatch(uniqueNumbers) {\n    if (this._lastProcessedNumbers !== uniqueNumbers) {\n      this._lastProcessedNumbers = uniqueNumbers;\n      if (this._contactMatcher && this._contactMatcher.ready) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _shouldTriggerActivityMatch(sessionIds) {\n    if (this._lastProcessedIds !== sessionIds) {\n      this._lastProcessedIds = sessionIds;\n      if (this._activityMatcher && this._activityMatcher.ready) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _shouldAddEndedCalls() {\n    if (this._callMonitor) {\n      const monitorCalls = this._callMonitor.calls;\n      if (this._lastProcessedMonitorCalls !== monitorCalls) {\n        const endedCalls = (this._lastProcessedMonitorCalls || [])\n          .filter(call => (\n            !monitorCalls.find(currentCall => call.sessionId === currentCall.sessionId)\n          ));\n        this._lastProcessedMonitorCalls = monitorCalls;\n        return endedCalls;\n      }\n    }\n    return null;\n  }\n\n  _shouldRemoveEndedCalls() {\n    const currentCalls = this._callLog.calls;\n    if (currentCalls !== this._lastProcessedCalls) {\n      this._lastProcessedCalls = currentCalls;\n      const ids = {};\n      currentCalls.forEach((call) => {\n        ids[call.sessionId] = true;\n      });\n      return this.recentlyEndedCalls.filter(call => ids[call.sessionId]);\n    }\n    return null;\n  }\n\n  _processCallHistory() {\n    const uniqueNumbers = this.uniqueNumbers;\n    if (this._shouldTriggerContactMatch(uniqueNumbers)) {\n      this._contactMatcher.triggerMatch();\n    }\n    const sessionIds = this.sessionIds;\n    if (this._shouldTriggerActivityMatch(sessionIds)) {\n      this._activityMatcher.triggerMatch();\n    }\n\n    const endedCalls = this._shouldAddEndedCalls();\n    if (endedCalls && endedCalls.length) {\n      this._addEndedCalls(endedCalls);\n    }\n\n    const shouldRemove = this._shouldRemoveEndedCalls();\n    if (shouldRemove && shouldRemove.length) {\n      this._removeEndedCalls(shouldRemove);\n    }\n  }\n\n  _initModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.init,\n    });\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n  }\n\n  _resetModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.reset,\n    });\n    this._lastProcessedCalls = null;\n    this._lastProcessedIds = null;\n    this._lastProcessedMonitorCalls = null;\n    this._lastProcessedNumbers = null;\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  _addEndedCalls(endedCalls) {\n    this.store.dispatch({\n      type: this.actionTypes.addEndedCalls,\n      endedCalls,\n      timestamp: Date.now(),\n    });\n    this._callLog.sync();\n  }\n\n  _removeEndedCalls(endedCalls) {\n    this.store.dispatch({\n      type: this.actionTypes.removeEndedCalls,\n      endedCalls,\n    });\n  }\n\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get calls() {\n    return this._selectors.calls();\n  }\n\n  get uniqueNumbers() {\n    return this._selectors.uniqueNumbers();\n  }\n\n  get sessionIds() {\n    return this._selectors.sessionIds();\n  }\n\n  get recentlyEndedCalls() {\n    return this.state.endedCalls;\n  }\n}\n"]}