{"version":3,"sources":["modules/CallHistory/index.js"],"names":["CallHistory","detailedPresence","callLog","activeCalls","options","actionTypes","_onStateChange","_callLog","ready","_activeCalls","_detailedPresence","pending","store","dispatch","type","init","initSuccess","reset","resetSuccess","_reducer","addSelector","calls","callsFromCallLog","callsFromActiveCalls","callsFromPresence","indexMap","forEach","call","sessionId","presentInPresenceCalls","filter","concat","sort","subscribe","state","status","_selectors"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;IAEqBA,W;;;AACnB,6BAKG;AAAA;;AAAA,QAJDC,gBAIC,QAJDA,gBAIC;AAAA,QAHDC,OAGC,QAHDA,OAGC;AAAA,QAFDC,WAEC,QAFDA,WAEC;AAAA,QADEC,OACF;AAAA;;AAAA,2KAEIA,OAFJ;AAGCC;AAHD;;AAAA,UA8BHC,cA9BG,8DA8Bc;AAAA;AAAA;AAAA;AAAA;AACf,kBACE,MAAKC,QAAL,CAAcC,KAAd,IACA,MAAKC,YAAL,CAAkBD,KADlB,IAEA,MAAKE,iBAAL,CAAuBF,KAFvB,IAGA,MAAKG,OAJP,EAKE;AACA,sBAAKC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,MAAKT,WAAL,CAAiBU;AADL,iBAApB;AAGA,sBAAKH,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,MAAKT,WAAL,CAAiBW;AADL,iBAApB;AAGD,eAZD,MAYO,IACL,CACE,CAAC,MAAKT,QAAL,CAAcC,KAAf,IACA,CAAC,MAAKC,YAAL,CAAkBD,KADnB,IAEA,CAAC,MAAKE,iBAAL,CAAuBF,KAH1B,KAKA,MAAKA,KANA,EAOL;AACA,sBAAKI,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,MAAKT,WAAL,CAAiBY;AADL,iBAApB;AAGA,sBAAKL,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,MAAKT,WAAL,CAAiBa;AADL,iBAApB;AAGD;;AA3Bc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA9Bd;;AAKD,UAAKT,YAAL,GAAoBN,WAApB;AACA,UAAKI,QAAL,GAAgBL,OAAhB;AACA,UAAKQ,iBAAL,GAAyBT,gBAAzB;AACA,UAAKkB,QAAL,GAAgB,qCAAsB,MAAKd,WAA3B,CAAhB;;AAEA,UAAKe,WAAL,CAAiB,OAAjB,EACE;AAAA,aAAM,MAAKb,QAAL,CAAcc,KAApB;AAAA,KADF,EAEE;AAAA,aAAM,MAAKZ,YAAL,CAAkBY,KAAxB;AAAA,KAFF,EAGE;AAAA,aAAM,MAAKX,iBAAL,CAAuBW,KAA7B;AAAA,KAHF,EAIE,UAACC,gBAAD,EAAmBC,oBAAnB,EAAyCC,iBAAzC,EAA+D;AAC7D,UAAMC,WAAW,EAAjB;AACAH,uBAAiBI,OAAjB,CAAyB,UAACC,IAAD,EAAU;AACjCF,iBAASE,KAAKC,SAAd,IAA2B,IAA3B;AACD,OAFD;AAGA,UAAMC,yBAAyB,EAA/B;AACAL,wBAAkBE,OAAlB,CAA0B,UAACC,IAAD,EAAU;AAClCE,+BAAuBF,KAAKC,SAA5B,IAAyC,IAAzC;AACD,OAFD;AAGA,aAAOL,qBACJO,MADI,CACG;AAAA,eAAQ,CAACL,SAASE,KAAKC,SAAd,CAAD,IAA6B,CAACC,uBAAuBF,KAAKC,SAA5B,CAAtC;AAAA,OADH,EAEJG,MAFI,CAEGT,gBAFH,EAGJU,IAHI,sCAAP;AAID,KAjBH;AAVC;AA6BF;;;;iCA8BY;AACX,WAAKpB,KAAL,CAAWqB,SAAX,CAAqB,KAAK3B,cAA1B;AACD;;;wBAEY;AACX,aAAO,KAAK4B,KAAL,CAAWC,MAAlB;AACD;;;wBAEW;AACV,aAAO,KAAKD,KAAL,CAAWC,MAAX,KAAsB,uBAAa3B,KAA1C;AACD;;;wBAEa;AACZ,aAAO,KAAK0B,KAAL,CAAWC,MAAX,KAAsB,uBAAaxB,OAA1C;AACD;;;wBAEW;AACV,aAAO,KAAKyB,UAAL,CAAgBf,KAAhB,EAAP;AACD;;;;;kBAnFkBrB,W","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport moduleStatus from '../../enums/moduleStatus';\nimport { sortCallsByStartTime } from '../../lib/callLogHelpers';\nimport actionTypes from './actionTypes';\nimport getCallHistoryReducer from './getCallHistoryReducer';\n\nexport default class CallHistory extends RcModule {\n  constructor({\n    detailedPresence,\n    callLog,\n    activeCalls,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._activeCalls = activeCalls;\n    this._callLog = callLog;\n    this._detailedPresence = detailedPresence;\n    this._reducer = getCallHistoryReducer(this.actionTypes);\n\n    this.addSelector('calls',\n      () => this._callLog.calls,\n      () => this._activeCalls.calls,\n      () => this._detailedPresence.calls,\n      (callsFromCallLog, callsFromActiveCalls, callsFromPresence) => {\n        const indexMap = {};\n        callsFromCallLog.forEach((call) => {\n          indexMap[call.sessionId] = true;\n        });\n        const presentInPresenceCalls = {};\n        callsFromPresence.forEach((call) => {\n          presentInPresenceCalls[call.sessionId] = true;\n        });\n        return callsFromActiveCalls\n          .filter(call => !indexMap[call.sessionId] && !presentInPresenceCalls[call.sessionId])\n          .concat(callsFromCallLog)\n          .sort(sortCallsByStartTime);\n      }\n    );\n  }\n  _onStateChange = async () => {\n    if (\n      this._callLog.ready &&\n      this._activeCalls.ready &&\n      this._detailedPresence.ready &&\n      this.pending\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (\n      (\n        !this._callLog.ready ||\n        !this._activeCalls.ready ||\n        !this._detailedPresence.ready\n      ) &&\n      this.ready\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.reset,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n  }\n  initialize() {\n    this.store.subscribe(this._onStateChange);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatus.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatus.pending;\n  }\n\n  get calls() {\n    return this._selectors.calls();\n  }\n}\n"]}