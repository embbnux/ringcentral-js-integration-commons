{"version":3,"sources":["modules/RecentCalls/getRecentCallsReducer.js"],"names":["getCallsReducer","getCallStatusReducer","getRecentCallsReducer","types","state","type","contact","calls","contactId","String","id","loadSuccess","loadReset","_","rest","initLoad","loading","loaded","status","callStatus"],"mappings":";;;;;;;;;;;;;;;;;;QAIgBA,e,GAAAA,e;QAgBAC,oB,GAAAA,oB;kBAcQC,qB;;AAlCxB;;AACA;;;;AACA;;;;;;AAEO,SAASF,eAAT,CAAyBG,KAAzB,EAAgC;AACrC,SAAO,YAA0C;AAAA,QAAzCC,KAAyC,uEAAjC,EAAiC;AAAA;AAAA,QAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,QAArBC,OAAqB,QAArBA,OAAqB;AAAA,QAAZC,KAAY,QAAZA,KAAY;;AAC/C,QAAMC,YAAYC,OAAOH,WAAWA,QAAQI,EAA1B,CAAlB;AACA,QAAIL,SAASF,MAAMQ,WAAnB,EAAgC;AAC9B,wCACKP,KADL,oCAEGI,SAFH,EAEeD,KAFf;AAID,KALD,MAKO,IAAIF,SAASF,MAAMS,SAAnB,EAA8B;AAAA,UACdC,CADc,GACCT,KADD,CAC1BI,SAD0B;AAAA,UACRM,IADQ,0CACCV,KADD,GAC1BI,SAD0B;;AAEnC,aAAOM,IAAP;AACD;AACD,WAAOV,KAAP;AACD,GAZD;AAaD;;AAEM,SAASH,oBAAT,CAA8BE,KAA9B,EAAqC;AAC1C,SAAO,YAA4B;AAAA,QAA3BC,KAA2B,uEAAnB,IAAmB;AAAA;AAAA,QAAXC,IAAW,SAAXA,IAAW;;AACjC,YAAQA,IAAR;AACE,WAAKF,MAAMY,QAAX;AACE,eAAO,qBAAWC,OAAlB;AACF,WAAKb,MAAMS,SAAX;AACA,WAAKT,MAAMQ,WAAX;AACE,eAAO,qBAAWM,MAAlB;AACF;AACE,eAAOb,KAAP;AAPJ;AASD,GAVD;AAWD;;AAEc,SAASF,qBAAT,CAA+BC,KAA/B,EAAsC;AACnD,SAAO,4BAAgB;AACrBe,YAAQ,sCAAuBf,KAAvB,CADa;AAErBI,WAAOP,gBAAgBG,KAAhB,CAFc;AAGrBgB,gBAAYlB,qBAAqBE,KAArB;AAHS,GAAhB,CAAP;AAKD","file":"getRecentCallsReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport callStatus from './callStatus';\n\nexport function getCallsReducer(types) {\n  return (state = {}, { type, contact, calls }) => {\n    const contactId = String(contact && contact.id);\n    if (type === types.loadSuccess) {\n      return {\n        ...state,\n        [contactId]: calls\n      };\n    } else if (type === types.loadReset) {\n      const { [contactId]: _, ...rest } = state;\n      return rest;\n    }\n    return state;\n  };\n}\n\nexport function getCallStatusReducer(types) {\n  return (state = null, { type }) => {\n    switch (type) {\n      case types.initLoad:\n        return callStatus.loading;\n      case types.loadReset:\n      case types.loadSuccess:\n        return callStatus.loaded;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getRecentCallsReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    calls: getCallsReducer(types),\n    callStatus: getCallStatusReducer(types)\n  });\n}\n"]}