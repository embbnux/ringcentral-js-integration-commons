{"version":3,"sources":["modules/Auth/index.js"],"names":["DEFAULT_PROXY_RETRY","getDefaultRedirectUri","window","resolve","location","href","getDefaultProxyUri","Auth","client","alert","redirectUri","proxyUri","brand","locale","tabManager","environment","defaultProxyRetry","options","actionTypes","_createProxyFrame","onLogin","_proxyFrame","document","createElement","src","style","display","body","appendChild","_callbackHandler","origin","data","callbackUri","proxyLoaded","fromLocalStorage","_tabManager","active","code","login","message","accessDenied","internalError","_alert","danger","payload","clearTimeout","_retryTimeoutId","store","dispatch","type","addEventListener","setTimeout","_retrySetupProxyFrame","_defaultProxyRetry","_client","_brand","_locale","_redirectUri","_proxyUri","_environment","_reducer","_beforeLogoutHandlers","_proxyFrameLoaded","_unbindEvents","_lastEnvironmentCounter","platform","service","onLoginSuccess","loginSuccess","token","auth","onLoginError","error","loginError","onLogoutSuccess","logoutSuccess","onLogoutError","_cache","clean","logoutError","onRefreshSuccess","refreshSuccess","onRefreshError","refreshTokenValid","refreshError","access_token","sessionExpired","ttl","addListener","events","removeListener","loggedIn","subscribe","status","pending","ready","init","_bindEvents","initSuccess","loginStatus","notLoggedIn","send","event","name","args","tabSync","changeCounter","username","password","extension","remember","state","brandId","prompt","force","loginUrl","beforeLogout","handlers","handler","result","cancelLogout","reject","beforeLogoutError","logout","add","removeBeforeLogoutHandler","remove","proxySetup","proxyRetry","_destroyProxyFrame","removeChild","removeEventListener","proxyCleared","contentWindow","postMessage","oAuthUri","getLoginUrl","id","encodeURIComponent","currentLocale","ownerId","endpointId","freshLogin","proxyRetryCount"],"mappings":"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","file":"index.js","sourcesContent":["import url from 'url';\nimport RcModule from '../../lib/RcModule';\nimport getAuthReducer from './getAuthReducer';\nimport actionTypes from './actionTypes';\nimport loginStatus from './loginStatus';\nimport authMessages from './authMessages';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport parseCallbackUri from '../../lib/parseCallbackUri';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\n\nconst DEFAULT_PROXY_RETRY = 5000;\n\nfunction getDefaultRedirectUri() {\n  if (typeof window !== 'undefined') {\n    return url.resolve(window.location.href, './redirect.html');\n  }\n  return null;\n}\n\nfunction getDefaultProxyUri() {\n  if (typeof window !== 'undefined') {\n    return url.resolve(window.location.href, './proxy.html');\n  }\n  return null;\n}\n\n/**\n * @class\n * @description Authentication module\n */\nexport default class Auth extends RcModule {\n  /**\n   * @constructor\n   */\n  constructor({\n    client,\n    alert,\n    redirectUri = getDefaultRedirectUri(),\n    proxyUri = getDefaultProxyUri(),\n    brand,\n    locale,\n    tabManager,\n    environment,\n    defaultProxyRetry = DEFAULT_PROXY_RETRY,\n    ...options\n  } = {}) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._client = ensureExist(client, 'client');\n    this._alert = ensureExist(alert, 'alert');\n    this._brand = ensureExist(brand, 'brand');\n    this._locale = ensureExist(locale, 'locale');\n    this._redirectUri = redirectUri;\n    this._proxyUri = proxyUri;\n    this._tabManager = tabManager;\n    this._environment = environment;\n    this._defaultProxyRetry = defaultProxyRetry;\n    this._reducer = getAuthReducer(this.actionTypes);\n    this._beforeLogoutHandlers = new Set();\n    this._proxyFrame = null;\n    this._proxyFrameLoaded = false;\n    this._unbindEvents = null;\n    this._lastEnvironmentCounter = 0;\n  }\n  _bindEvents() {\n    if (this._unbindEvents) this._unbindEvents();\n\n    const platform = this._client.service.platform();\n    const onLoginSuccess = () => {\n      this.store.dispatch({\n        type: this.actionTypes.loginSuccess,\n        token: platform.auth().data(),\n      });\n    };\n    const onLoginError = (error) => {\n      this.store.dispatch({\n        type: this.actionTypes.loginError,\n        error,\n      });\n      if (error) {\n        this._alert.danger({\n          message: authMessages.loginError,\n          payload: error,\n        });\n      }\n    };\n    const onLogoutSuccess = () => {\n      this.store.dispatch({\n        type: this.actionTypes.logoutSuccess,\n      });\n    };\n    const onLogoutError = (error) => {\n      platform._cache.clean();\n      this.store.dispatch({\n        type: this.actionTypes.logoutError,\n        error,\n      });\n      if (error) {\n        this._alert.danger({\n          message: authMessages.logoutError,\n          payload: error,\n        });\n      }\n    };\n    const onRefreshSuccess = () => {\n      this.store.dispatch({\n        type: this.actionTypes.refreshSuccess,\n        token: platform.auth().data(),\n      });\n    };\n    const onRefreshError = (error) => {\n      // user is still considered logged in if the refreshToken is still valid\n      const refreshTokenValid = platform.auth().refreshTokenValid();\n      this.store.dispatch({\n        type: this.actionTypes.refreshError,\n        error,\n        refreshTokenValid,\n      });\n      if (!refreshTokenValid && this._client.service.platform().auth().data().access_token !== '') {\n        this._alert.danger({\n          message: authMessages.sessionExpired,\n          payload: error,\n          ttl: 0,\n        });\n        // clean the cache so the error doesn't show again\n        platform._cache.clean();\n      }\n    };\n    platform.addListener(platform.events.loginSuccess, onLoginSuccess);\n    platform.addListener(platform.events.loginError, onLoginError);\n    platform.addListener(platform.events.logoutSuccess, onLogoutSuccess);\n    platform.addListener(platform.events.logoutError, onLogoutError);\n    platform.addListener(platform.events.refreshSuccess, onRefreshSuccess);\n    platform.addListener(platform.events.refreshError, onRefreshError);\n    this._unbindEvents = () => {\n      platform.removeListener(platform.events.loginSuccess, onLoginSuccess);\n      platform.removeListener(platform.events.loginError, onLoginError);\n      platform.removeListener(platform.events.logoutSuccess, onLogoutSuccess);\n      platform.removeListener(platform.events.logoutError, onLogoutError);\n      platform.removeListener(platform.events.refreshSuccess, onRefreshSuccess);\n      platform.removeListener(platform.events.refreshError, onRefreshError);\n    };\n  }\n  initialize() {\n    let loggedIn;\n    this.store.subscribe(async () => {\n      if (\n        this.status === moduleStatuses.pending &&\n        this._locale.ready &&\n        (!this._tabManager || this._tabManager.ready) &&\n        (!this._environment || this._environment.ready)\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.init,\n        });\n        const platform = this._client.service.platform();\n        loggedIn = await platform.loggedIn();\n        this._bindEvents();\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n          loggedIn,\n          token: loggedIn ? platform.auth().data() : null,\n        });\n      }\n      if (\n        (this._tabManager && this._tabManager.ready) &&\n        this.ready\n      ) {\n        if (\n          (loggedIn && this.loginStatus === loginStatus.notLoggedIn) ||\n          (!loggedIn && this.loginStatus === loginStatus.loggedIn)\n        ) {\n          loggedIn = !loggedIn;\n          this._tabManager.send('loginStatusChange', loggedIn);\n        } else if (\n          this._tabManager.event &&\n          this._tabManager.event.name === 'loginStatusChange' &&\n          this._tabManager.event.args[0] !== loggedIn\n        ) {\n          loggedIn = this._tabManager.event.args[0];\n          this.store.dispatch({\n            type: this.actionTypes.tabSync,\n            loggedIn,\n            token: loggedIn ? this._client.service.platform().auth().data() : null,\n          });\n        }\n      }\n      if (\n        this.ready &&\n        this._environment &&\n        this._environment.changeCounter !== this._lastEnvironmentCounter\n      ) {\n        this._lastEnvironmentCounter = this._environment.changeCounter;\n        this._bindEvents();\n      }\n    });\n  }\n\n  get redirectUri() {\n    return this._redirectUri;\n  }\n\n  get proxyUri() {\n    return this._proxyUri;\n  }\n\n  get ownerId() {\n    return this.state.ownerId;\n  }\n\n  get endpointId() {\n    return this.state.endpointId;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get loginStatus() {\n    return this.state.loginStatus;\n  }\n\n  get isFreshLogin() {\n    return this.state.freshLogin;\n  }\n\n  get proxyLoaded() {\n    return this.state.proxyLoaded;\n  }\n\n  get proxyRetryCount() {\n    return this.state.proxyRetryCount;\n  }\n\n  /**\n   * @function\n   * @param {String} options.username\n   * @param {String} options.password\n   * @param {String} options.extension\n   * @param {Booleal|Number} options.remember\n   * @param {String} params.code,\n   * @param {String} params.redirectUri,\n   * @return {Promise}\n   * @description Login either with username/password or with authorization code\n   */\n  @proxify\n  async login({ username, password, extension, remember, code, redirectUri }) {\n    this.store.dispatch({\n      type: this.actionTypes.login,\n    });\n    return this._client.service.platform().login({\n      username,\n      password,\n      extension,\n      remember,\n      code,\n      redirectUri,\n    });\n  }\n  /**\n   * @function\n   * @param {String} options.redirectUri\n   * @param {String} options.brandId\n   * @param {Boolean} options.force\n   * @return {String}\n   * @description get OAuth page url\n   */\n  getLoginUrl({ redirectUri, state, brandId, display, prompt, force }) {\n    return `${this._client.service.platform().loginUrl({\n      redirectUri,\n      state,\n      brandId,\n      display,\n      prompt,\n    })}${force ? '&force' : ''}`;\n  }\n\n  /**\n   * @function\n   * @description Triggers the beforeLogoutHandlers to run\n   *  and then proceed to logout from ringcentral.\n   */\n  @proxify\n  async logout() {\n    this.store.dispatch({\n      type: this.actionTypes.beforeLogout,\n    });\n    const handlers = [...this._beforeLogoutHandlers];\n    try {\n      for (const handler of handlers) {\n        const result = await (async () => handler())();\n        if (result) {\n          this.store.dispatch({\n            type: this.actionTypes.cancelLogout,\n          });\n          return Promise.reject(result);\n        }\n      }\n    } catch (error) {\n      this._alert.danger({\n        message: authMessages.beforeLogoutError,\n        payload: error,\n      });\n    }\n    this.store.dispatch({\n      type: this.actionTypes.logout,\n    });\n    return this._client.service.platform().logout();\n  }\n\n  /**\n  * @function\n  * @param {Function} handler\n  * @returns {Function}\n  */\n  addBeforeLogoutHandler(handler) {\n    this._beforeLogoutHandlers.add(handler);\n    return () => {\n      this.removeBeforeLogoutHandler(handler);\n    };\n  }\n\n  /**\n  * @function\n  * @param {Function} handler\n  */\n  removeBeforeLogoutHandler(handler) {\n    this._beforeLogoutHandlers.remove(handler);\n  }\n\n  @proxify\n  async checkIsLoggedIn() {\n    // SDK would return false when there's temporary network issues,\n    // but we should not return use back to welcome string and should\n    // still consider the user as being logged in.\n    await this._client.service.platform().loggedIn();\n    return this.state.loginStatus === loginStatus.loggedIn;\n  }\n\n  get loggedIn() {\n    return this.state.loginStatus === loginStatus.loggedIn ||\n      this.state.loginStatus === loginStatus.beforeLogout;\n  }\n\n  get notLoggedIn() {\n    return this.state.loginStatus === loginStatus.notLoggedIn;\n  }\n\n  _createProxyFrame = (onLogin) => {\n    this._proxyFrame = document.createElement('iframe');\n    this._proxyFrame.src = this.proxyUri;\n    this._proxyFrame.style.display = 'none';\n\n    document.body.appendChild(this._proxyFrame);\n    this._callbackHandler = async ({ origin, data }) => {\n      // TODO origin check\n      if (data) {\n        const {\n          callbackUri,\n          proxyLoaded,\n          fromLocalStorage,\n        } = data;\n        if (\n          callbackUri &&\n          (\n            fromLocalStorage !== true ||\n            (!this._tabManager || this._tabManager.active)\n          )\n        ) {\n          try {\n            const code = parseCallbackUri(callbackUri);\n            if (code) {\n              await this.login({\n                code,\n                redirectUri: this.redirectUri,\n              });\n              if (typeof onLogin === 'function') {\n                onLogin();\n              }\n            }\n          } catch (error) {\n            let message;\n            switch (error.message) {\n              case 'invalid_request':\n              case 'unauthorized_client':\n              case 'access_denied':\n              case 'unsupported_response_type':\n              case 'invalid_scope':\n                message = authMessages.accessDenied;\n                break;\n              case 'server_error':\n              case 'temporarily_unavailable':\n              default:\n                message = authMessages.internalError;\n                break;\n            }\n\n            this._alert.danger({\n              message,\n              payload: error,\n            });\n          }\n        } else if (proxyLoaded) {\n          clearTimeout(this._retryTimeoutId);\n          this._retryTimeoutId = null;\n          this.store.dispatch({\n            type: this.actionTypes.proxyLoaded,\n          });\n        }\n      }\n    };\n    window.addEventListener('message', this._callbackHandler);\n    this._retryTimeoutId = setTimeout(() => {\n      this._retrySetupProxyFrame(onLogin);\n    }, this._defaultProxyRetry);\n  }\n  /**\n   * @function\n   * @description Create the proxy frame and append to document if available.\n   * @param {Function} onLogin - Function to be called when user successfully logged in\n   *  through oAuth.\n   */\n  @proxify\n  async setupProxyFrame(onLogin) {\n    if (\n      typeof window !== 'undefined' &&\n      typeof document !== 'undefined' &&\n      this._proxyUri &&\n      this._proxyUri !== '' &&\n      !this._proxyFrame\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.proxySetup,\n      });\n      this._createProxyFrame(onLogin);\n    }\n  }\n  _retrySetupProxyFrame(onLogin) {\n    this._retryTimeoutId = null;\n    if (!this.proxyLoaded) {\n      this.store.dispatch({\n        type: this.actionTypes.proxyRetry,\n      });\n      this._destroyProxyFrame();\n      this._createProxyFrame(onLogin);\n    }\n  }\n  _destroyProxyFrame() {\n    document.body.removeChild(this._proxyFrame);\n    this._proxyFrame = null;\n    window.removeEventListener('message', this._callbackHandler);\n    this._callbackHandler = null;\n  }\n\n  @proxify\n  async clearProxyFrame() {\n    if (this._proxyFrame) {\n      if (this._retryTimeoutId) {\n        clearTimeout(this._retryTimeoutId);\n        this._retryTimeoutId = null;\n      }\n      this._destroyProxyFrame();\n      this.store.dispatch({\n        type: this.actionTypes.proxyCleared,\n      });\n    }\n  }\n\n  @proxify\n  openOAuthPage() {\n    if (this.proxyLoaded) {\n      this._proxyFrame.contentWindow.postMessage({\n        oAuthUri: `${this.getLoginUrl({\n          redirectUri: this.redirectUri,\n          brandId: this._brand.id,\n        })}&force=true&localeId=${encodeURIComponent(this._locale.currentLocale)}`,\n      }, '*');\n    }\n  }\n}\n"]}