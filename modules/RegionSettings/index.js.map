{"version":3,"sources":["modules/RegionSettings/index.js"],"names":["RegionSettings","storage","extensionInfo","dialingPlan","alert","tabManager","options","actionTypes","_storage","_alert","_dialingPlan","_extensionInfo","_tabManager","_countryCodeKey","_areaCodeKey","_reducer","registerReducer","key","reducer","plans","store","subscribe","ready","status","pending","dispatch","type","init","active","checkRegionSettings","initSuccess","resetSuccess","countryCode","getItem","find","plan","isoCode","warning","message","dialingPlansChanged","ttl","country","setData","areaCode","danger","areaCodeInvalid","trim","info","saveSuccess","state"],"mappings":"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","file":"index.js","sourcesContent":["import 'core-js/fn/array/find';\nimport RcModule from '../../lib/RcModule';\nimport getRegionSettingsReducer, {\n  getCountryCodeReducer,\n  getAreaCodeReducer,\n} from './getRegionSettingsReducer';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport regionSettingsMessages from '../RegionSettings/regionSettingsMessages';\nimport actionTypes from './actionTypes';\nimport validateAreaCode from '../../lib/validateAreaCode';\n\nexport default class RegionSettings extends RcModule {\n  constructor({\n    storage,\n    extensionInfo,\n    dialingPlan,\n    alert,\n    tabManager,\n    ...options,\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._storage = storage;\n    this._alert = alert;\n    this._dialingPlan = dialingPlan;\n    this._extensionInfo = extensionInfo;\n    this._tabManager = tabManager;\n\n    this._countryCodeKey = 'regionSettingsCountryCode';\n    this._areaCodeKey = 'regionSettingsAreaCode';\n    this._reducer = getRegionSettingsReducer(this.actionTypes);\n\n    this._storage.registerReducer({\n      key: this._countryCodeKey,\n      reducer: getCountryCodeReducer(this.actionTypes),\n    });\n    this._storage.registerReducer({\n      key: this._areaCodeKey,\n      reducer: getAreaCodeReducer(this.actionTypes),\n    });\n  }\n  initialize() {\n    let plans;\n    this.store.subscribe(() => {\n      if (\n        this._storage.ready &&\n        this._dialingPlan.ready &&\n        this._extensionInfo.ready &&\n        this.status === moduleStatuses.pending\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.init,\n        });\n        if (!this._tabManager || this._tabManager.active) {\n          this.checkRegionSettings();\n        }\n        plans = this._dialingPlan.plans;\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n        });\n      } else if (\n        !this._storage.ready &&\n        this.ready\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.resetSuccess,\n        });\n      } else if (\n        this.ready &&\n        plans !== this._dialingPlan.plans\n      ) {\n        plans = this._dialingPlan.plans;\n        if (!this._tabManager || this._tabManager.active) {\n          this.checkRegionSettings();\n        }\n      }\n    });\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get availableCountries() {\n    return this._dialingPlan.plans;\n  }\n\n  checkRegionSettings() {\n    let countryCode = this._storage.getItem(this._countryCodeKey);\n    if (countryCode && !this._dialingPlan.plans.find(plan => (\n      plan.isoCode === countryCode\n    ))) {\n      countryCode = null;\n      this._alert.warning({\n        message: regionSettingsMessages.dialingPlansChanged,\n        ttl: 0\n      });\n    }\n    if (!countryCode) {\n      countryCode = this._dialingPlan.plans.find(plan => (\n        plan.isoCode === this._extensionInfo.country.isoCode\n      )).isoCode;\n      this.store.dispatch({\n        type: this.actionTypes.setData,\n        countryCode,\n        areaCode: '',\n      });\n    }\n  }\n\n  setData({\n    areaCode,\n    countryCode,\n  }) {\n    if (!validateAreaCode(areaCode)) {\n      this._alert.danger({\n        message: regionSettingsMessages.areaCodeInvalid,\n      });\n      return;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.setData,\n      countryCode,\n      areaCode: areaCode && areaCode.trim(),\n    });\n    this._alert.info({\n      message: regionSettingsMessages.saveSuccess,\n    });\n  }\n\n  setCountryCode(countryCode) {\n    this.setData({\n      countryCode,\n    });\n  }\n\n  setAreaCode(areaCode) {\n    this.setData({\n      areaCode,\n    });\n  }\n\n  get countryCode() {\n    return this._storage.getItem(this._countryCodeKey) || 'US';\n  }\n\n  get areaCode() {\n    return this._storage.getItem(this._areaCodeKey) || '';\n  }\n}\n"]}