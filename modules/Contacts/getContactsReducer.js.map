{"version":3,"sources":["modules/Contacts/getContactsReducer.js"],"names":["getProfileImagesReducer","getContactPresencesReducer","getContactsReducer","types","state","type","imageId","imageUrl","ttl","fetchImageSuccess","data","forEach","key","Date","now","timestamp","presenceId","presence","fetchPresenceSuccess","status","profileImages","contactPresences"],"mappings":";;;;;;;;;;QAGgBA,uB,GAAAA,uB;QAsBAC,0B,GAAAA,0B;kBAsBQC,kB;;AA/CxB;;AACA;;;;;;AAEO,SAASF,uBAAT,CAAiCG,KAAjC,EAAwC;AAC7C,SAAO,YAAkD;AAAA,QAAjDC,KAAiD,uEAAzC,EAAyC;AAAA;AAAA,QAAnCC,IAAmC,QAAnCA,IAAmC;AAAA,QAA7BC,OAA6B,QAA7BA,OAA6B;AAAA,QAApBC,QAAoB,QAApBA,QAAoB;AAAA,QAAVC,GAAU,QAAVA,GAAU;;AACvD,YAAQH,IAAR;AACE,WAAKF,MAAMM,iBAAX;AAA8B;AAC5B,cAAMC,OAAO,EAAb;AACA,8BAAYN,KAAZ,EAAmBO,OAAnB,CAA2B,UAACC,GAAD,EAAS;AAClC,gBAAIC,KAAKC,GAAL,KAAaV,MAAMQ,GAAN,EAAWG,SAAxB,GAAoCP,GAAxC,EAA6C;AAC3CE,mBAAKE,GAAL,IAAYR,MAAMQ,GAAN,CAAZ;AACD;AACF,WAJD;AAKAF,eAAKJ,OAAL,IAAgB;AACdC,8BADc;AAEdQ,uBAAWF,KAAKC,GAAL;AAFG,WAAhB;AAIA,iBAAOJ,IAAP;AACD;AACD;AACE,eAAON,KAAP;AAfJ;AAiBD,GAlBD;AAmBD;;AAEM,SAASH,0BAAT,CAAoCE,KAApC,EAA2C;AAChD,SAAO,YAAqD;AAAA,QAApDC,KAAoD,uEAA5C,EAA4C;AAAA;AAAA,QAAtCC,IAAsC,SAAtCA,IAAsC;AAAA,QAAhCW,UAAgC,SAAhCA,UAAgC;AAAA,QAApBC,QAAoB,SAApBA,QAAoB;AAAA,QAAVT,GAAU,SAAVA,GAAU;;AAC1D,YAAQH,IAAR;AACE,WAAKF,MAAMe,oBAAX;AAAiC;AAC/B,cAAMR,OAAO,EAAb;AACA,8BAAYN,KAAZ,EAAmBO,OAAnB,CAA2B,UAACC,GAAD,EAAS;AAClC,gBAAIC,KAAKC,GAAL,KAAaV,MAAMQ,GAAN,EAAWG,SAAxB,GAAoCP,GAAxC,EAA6C;AAC3CE,mBAAKE,GAAL,IAAYR,MAAMQ,GAAN,CAAZ;AACD;AACF,WAJD;AAKAF,eAAKM,UAAL,IAAmB;AACjBC,8BADiB;AAEjBF,uBAAWF,KAAKC,GAAL;AAFM,WAAnB;AAIA,iBAAOJ,IAAP;AACD;AACD;AACE,eAAON,KAAP;AAfJ;AAiBD,GAlBD;AAmBD;;AAEc,SAASF,kBAAT,CAA4BC,KAA5B,EAAmC;AAChD,SAAO,4BAAgB;AACrBgB,YAAQ,sCAAuBhB,KAAvB,CADa;AAErBiB,mBAAepB,wBAAwBG,KAAxB,CAFM;AAGrBkB,sBAAkBpB,2BAA2BE,KAA3B;AAHG,GAAhB,CAAP;AAKD","file":"getContactsReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\n\nexport function getProfileImagesReducer(types) {\n  return (state = {}, { type, imageId, imageUrl, ttl }) => {\n    switch (type) {\n      case types.fetchImageSuccess: {\n        const data = {};\n        Object.keys(state).forEach((key) => {\n          if (Date.now() - state[key].timestamp < ttl) {\n            data[key] = state[key];\n          }\n        });\n        data[imageId] = {\n          imageUrl,\n          timestamp: Date.now(),\n        };\n        return data;\n      }\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getContactPresencesReducer(types) {\n  return (state = {}, { type, presenceId, presence, ttl }) => {\n    switch (type) {\n      case types.fetchPresenceSuccess: {\n        const data = {};\n        Object.keys(state).forEach((key) => {\n          if (Date.now() - state[key].timestamp < ttl) {\n            data[key] = state[key];\n          }\n        });\n        data[presenceId] = {\n          presence,\n          timestamp: Date.now(),\n        };\n        return data;\n      }\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getContactsReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    profileImages: getProfileImagesReducer(types),\n    contactPresences: getContactPresencesReducer(types),\n  });\n}\n"]}