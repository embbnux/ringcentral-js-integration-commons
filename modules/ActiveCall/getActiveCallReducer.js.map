{"version":3,"sources":["modules/ActiveCall/getActiveCallReducer.js"],"names":["getMinimizedReducer","getSessionReducer","getWebphoneReducer","types","state","type","toggleMinimized","newSession","session","id","to","request","uri","user","from","status","destroySession","minimized"],"mappings":";;;;;QAGgBA,mB,GAAAA,mB;QAaAC,iB,GAAAA,iB;kBAmBQC,kB;;AAnCxB;;AACA;;;;;;AAEO,SAASF,mBAAT,CAA6BG,KAA7B,EAAoC;AACzC,SAAO,YAA6B;AAAA,QAA5BC,KAA4B,uEAApB,KAAoB;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AAClC,YAAQA,IAAR;AACE,WAAKF,MAAMG,eAAX;AACE,eAAO,CAACF,KAAR;AACF,WAAKD,MAAMI,UAAX;AACE,eAAO,KAAP;AACF;AACE,eAAOH,KAAP;AANJ;AAQD,GATD;AAUD;;AAEM,SAASH,iBAAT,CAA2BE,KAA3B,EAAkC;AACvC,SAAO,YAAqC;AAAA,QAApCC,KAAoC,uEAA5B,IAA4B;AAAA;AAAA,QAApBC,IAAoB,SAApBA,IAAoB;AAAA,QAAdG,OAAc,SAAdA,OAAc;;AAC1C,YAAQH,IAAR;AACE,WAAKF,MAAMI,UAAX;AACE,eAAO;AACLE,cAAID,QAAQC,EADP;AAELJ,gBAAMG,QAAQH,IAFT;AAGLK,cAAIF,QAAQG,OAAR,CAAgBD,EAAhB,CAAmBE,GAAnB,CAAuBC,IAHtB;AAILC,gBAAMN,QAAQG,OAAR,CAAgBG,IAAhB,CAAqBF,GAArB,CAAyBC,IAJ1B;AAKLE,kBAAQP,QAAQO;AALX,SAAP;AAOF,WAAKZ,MAAMa,cAAX;AACE,eAAO,IAAP;AACF;AACE,eAAOZ,KAAP;AAZJ;AAcD,GAfD;AAgBD;;AAEc,SAASF,kBAAT,CAA4BC,KAA5B,EAAmC;AAChD,SAAO,4BAAgB;AACrBY,YAAQ,sCAAuBZ,KAAvB,CADa;AAErBc,eAAWjB,oBAAoBG,KAApB,CAFU;AAGrBK,aAASP,kBAAkBE,KAAlB;AAHY,GAAhB,CAAP;AAKD","file":"getActiveCallReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\n\nexport function getMinimizedReducer(types) {\n  return (state = false, { type }) => {\n    switch (type) {\n      case types.toggleMinimized:\n        return !state;\n      case types.newSession:\n        return false;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSessionReducer(types) {\n  return (state = null, { type, session }) => {\n    switch (type) {\n      case types.newSession:\n        return {\n          id: session.id,\n          type: session.type,\n          to: session.request.to.uri.user,\n          from: session.request.from.uri.user,\n          status: session.status\n        };\n      case types.destroySession:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getWebphoneReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    minimized: getMinimizedReducer(types),\n    session: getSessionReducer(types),\n  });\n}\n"]}