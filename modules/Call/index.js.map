{"version":3,"sources":["modules/Call/index.js"],"names":["Call","alert","client","storage","callingSettings","softphone","ringout","webphone","numberValidate","regionSettings","options","actionTypes","_alert","_client","_storage","_storageKey","_reducer","_callingSettings","_ringout","_softphone","_webphone","_numberValidate","_regionSettings","_callSettingMode","registerReducer","key","reducer","store","subscribe","ready","status","pending","dispatch","type","init","callingMode","connect","fromNumbers","length","initSuccess","resetSuccess","disconnect","oldCallSettingMode","value","toNumberChanged","data","callStatus","idle","toNumber","trim","lastCallNumber","onToNumberChange","warning","message","noToNumber","number","_getValidatedNumbers","validatedNumbers","_makeCall","connectSuccess","connectError","firstLegConnectFailed","connectFailed","payload","danger","networkError","internalError","fromNumber","isWebphone","myLocation","waitingValidateNumbers","push","validateNumbers","validatedResult","result","errors","forEach","error","parsedNumbers","numbers","parsedFromNumber","e164","subAddress","join","countryCode","homeCountry","availableCountries","find","country","isoCode","homeCountryId","callingCode","makeCall","prompt","ringoutPrompt","state","getItem"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport callingModes from '../CallingSettings/callingModes';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport proxify from '../../lib/proxy/proxify';\nimport callActionTypes from './actionTypes';\nimport getCallReducer, {\n  getLastCallNumberReducer,\n} from './getCallReducer';\n\nimport callStatus from './callStatus';\nimport callErrors from './callErrors';\nimport ringoutErrors from '../Ringout/ringoutErrors';\n\n\nexport default class Call extends RcModule {\n  constructor({\n    alert,\n    client,\n    storage,\n    callingSettings,\n    softphone,\n    ringout,\n    webphone,\n    numberValidate,\n    regionSettings,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: callActionTypes,\n    });\n\n    this._alert = alert;\n    this._client = client;\n    this._storage = storage;\n    this._storageKey = 'lastCallNumber';\n    this._reducer = getCallReducer(this.actionTypes);\n    this._callingSettings = callingSettings;\n    this._ringout = ringout;\n    this._softphone = softphone;\n    this._webphone = webphone;\n    this._numberValidate = numberValidate;\n    this._regionSettings = regionSettings;\n    this._callSettingMode = null;\n\n    this._storage.registerReducer({\n      key: this._storageKey,\n      reducer: getLastCallNumberReducer(this.actionTypes),\n    });\n  }\n\n  initialize() {\n    this.store.subscribe(async () => {\n      if (\n        this._numberValidate.ready &&\n        this._callingSettings.ready &&\n        this._storage.ready &&\n        this._regionSettings.ready &&\n        (!this._webphone || this._webphone.ready) &&\n        this._ringout.ready &&\n        this._softphone.ready &&\n        this.status === moduleStatuses.pending\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.init,\n        });\n        // init webphone\n        this._callSettingMode = this._callingSettings.callingMode;\n        if (this._callSettingMode === callingModes.webphone) {\n          await this._webphone.connect(this._callingSettings.fromNumbers.length > 0);\n        }\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n        });\n      } else if (\n        (\n          !this._numberValidate.ready ||\n          !this._callingSettings.ready ||\n          !this._regionSettings.ready ||\n          (!!this._webphone && !this._webphone.ready) ||\n          !this._ringout.ready ||\n          !this._softphone.ready ||\n          !this._storage.ready\n        ) &&\n        this.ready\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.resetSuccess,\n        });\n        this._callSettingMode = this._callingSettings.callingMode;\n        if (this._callSettingMode === callingModes.webphone && this._webphone) {\n          this._webphone.disconnect();\n        }\n      } else if (this.ready) {\n        const oldCallSettingMode = this._callSettingMode;\n        if (this._callingSettings.callingMode !== oldCallSettingMode && this._webphone) {\n          this._callSettingMode = this._callingSettings.callingMode;\n          if (oldCallSettingMode === callingModes.webphone) {\n            this._webphone.disconnect();\n          } else if (this._callSettingMode === callingModes.webphone) {\n            await this._webphone.connect(this._callingSettings.fromNumbers.length > 0);\n          }\n        }\n      }\n    });\n  }\n  @proxify\n  async onToNumberChange(value) {\n    this.store.dispatch({\n      type: this.actionTypes.toNumberChanged,\n      data: value,\n    });\n  }\n\n  @proxify\n  async onCall() {\n    if (this.callStatus === callStatus.idle) {\n      // last number check\n      if (`${this.toNumber}`.trim().length === 0) {\n        if (this.lastCallNumber) {\n          this.onToNumberChange(this.lastCallNumber);\n        } else {\n          this._alert.warning({\n            message: callErrors.noToNumber,\n          });\n        }\n      } else {\n        this.store.dispatch({\n          type: this.actionTypes.connect,\n          number: this.toNumber,\n        });\n        try {\n          const validatedNumbers = await this._getValidatedNumbers();\n          if (validatedNumbers) {\n            await this._makeCall(validatedNumbers);\n            this.store.dispatch({\n              type: this.actionTypes.connectSuccess\n            });\n          } else {\n            this.store.dispatch({\n              type: this.actionTypes.connectError\n            });\n          }\n        } catch (error) {\n          if (error.message === ringoutErrors.firstLegConnectFailed) {\n            this._alert.warning({\n              message: callErrors.connectFailed,\n              payload: error\n            });\n          } else if (error.message === 'Failed to fetch') {\n            this._alert.danger({\n              message: callErrors.networkError,\n              payload: error,\n            });\n          } else if (error.message !== 'Refresh token has expired') {\n            this._alert.danger({\n              message: callErrors.internalError,\n              payload: error,\n            });\n          }\n          this.store.dispatch({\n            type: this.actionTypes.connectError\n          });\n        }\n      }\n    }\n  }\n  @proxify\n  async _getValidatedNumbers() {\n    let fromNumber;\n    const isWebphone = (this._callingSettings.callingMode === callingModes.webphone);\n    if (isWebphone) {\n      fromNumber = this._callingSettings.fromNumber;\n      if (fromNumber === null || fromNumber === '') {\n        return null;\n      }\n    } else {\n      fromNumber = this._callingSettings.myLocation;\n    }\n    const waitingValidateNumbers = [this.toNumber];\n    if (\n      fromNumber &&\n      fromNumber.length > 0 &&\n      !(isWebphone && fromNumber === 'anonymous')\n    ) {\n      waitingValidateNumbers.push(fromNumber);\n    }\n    const validatedResult\n      = await this._numberValidate.validateNumbers(waitingValidateNumbers);\n    if (!validatedResult.result) {\n      validatedResult.errors.forEach((error) => {\n        this._alert.warning({\n          message: callErrors[error.type]\n        });\n      });\n      return null;\n    }\n    const parsedNumbers = validatedResult.numbers;\n    // using e164 in response to call\n    let parsedFromNumber =\n      parsedNumbers[1] ? parsedNumbers[1].e164 : '';\n    // add ext back if any\n    if (parsedFromNumber !== '') {\n      parsedFromNumber = (parsedNumbers[1].subAddress) ?\n        [parsedNumbers[1].e164, parsedNumbers[1].subAddress].join('*') :\n        parsedNumbers[1].e164;\n    }\n    if (isWebphone && fromNumber === 'anonymous') {\n      parsedFromNumber = 'anonymous';\n    }\n    return {\n      toNumber: parsedNumbers[0].e164,\n      fromNumber: parsedFromNumber,\n    };\n  }\n  @proxify\n  async _makeCall({ toNumber, fromNumber }) {\n    const callingMode = this._callingSettings.callingMode;\n    const countryCode = this._regionSettings.countryCode;\n    const homeCountry = this._regionSettings.availableCountries.find(\n      country => country.isoCode === countryCode\n    );\n    const homeCountryId = (homeCountry && homeCountry.callingCode) || '1';\n    switch (callingMode) {\n      case callingModes.softphone:\n        this._softphone.makeCall(toNumber);\n        break;\n      case callingModes.ringout:\n        await this._ringout.makeCall({\n          fromNumber,\n          toNumber,\n          prompt: this._callingSettings.ringoutPrompt,\n        });\n        break;\n      case callingModes.webphone:\n        if (this._webphone) {\n          await this._webphone.makeCall({\n            fromNumber,\n            toNumber,\n            homeCountryId,\n          });\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get callStatus() {\n    return this.state.callStatus;\n  }\n\n  get isIdle() {\n    return this.state.callStatus === callStatus.idle;\n  }\n\n  get lastCallNumber() {\n    return this._storage.getItem(this._storageKey) || '';\n  }\n\n  get toNumber() {\n    return this.state.toNumber;\n  }\n}\n"]}