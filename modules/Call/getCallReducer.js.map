{"version":3,"sources":["modules/Call/getCallReducer.js"],"names":["getCallStatusReducer","getToNumberReducer","getLastCallNumberReducer","getCallReducer","types","state","idle","type","connect","connecting","completeConnect","data","toNumberChanged","number","status","callStatus","toNumber"],"mappings":";;;;;QAIgBA,oB,GAAAA,oB;QAeAC,kB,GAAAA,kB;QAaAC,wB,GAAAA,wB;kBAWQC,c;;AA3CxB;;AACA;;;;AACA;;;;;;AAEO,SAASH,oBAAT,CAA8BI,KAA9B,EAAqC;AAC1C,SAAO,YAAuC;AAAA,QAAtCC,KAAsC,uEAA9B,qBAAWC,IAAmB;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AAC5C,YAAQA,IAAR;AACE,WAAKH,MAAMI,OAAX;AACE,eAAO,qBAAWC,UAAlB;;AAEF,WAAKL,MAAMM,eAAX;AACE,eAAO,qBAAWJ,IAAlB;;AAEF;AACE,eAAOD,KAAP;AARJ;AAUD,GAXD;AAYD;;AAEM,SAASJ,kBAAT,CAA4BG,KAA5B,EAAmC;AACxC,SAAO,YAAgC;AAAA,QAA/BC,KAA+B,uEAAvB,EAAuB;AAAA;AAAA,QAAjBE,IAAiB,SAAjBA,IAAiB;AAAA,QAAXI,IAAW,SAAXA,IAAW;;AACrC,YAAQJ,IAAR;AACE,WAAKH,MAAMQ,eAAX;AACE,eAAOD,IAAP;AACF,WAAKP,MAAMM,eAAX;AACE,eAAO,EAAP;AACF;AACE,eAAOL,KAAP;AANJ;AAQD,GATD;AAUD;;AAEM,SAASH,wBAAT,CAAkCE,KAAlC,EAAyC;AAC9C,SAAO,YAAoC;AAAA,QAAnCC,KAAmC,uEAA3B,IAA2B;AAAA;AAAA,QAAnBE,IAAmB,SAAnBA,IAAmB;AAAA,QAAbM,MAAa,SAAbA,MAAa;;AACzC,YAAQN,IAAR;AACE,WAAKH,MAAMI,OAAX;AACE,eAAOK,MAAP;AACF;AACE,eAAOR,KAAP;AAJJ;AAMD,GAPD;AAQD;;AAEc,SAASF,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C,SAAO,4BAAgB;AACrBU,YAAQ,sCAAuBV,KAAvB,CADa;AAErBW,gBAAYf,qBAAqBI,KAArB,CAFS;AAGrBY,cAAUf,mBAAmBG,KAAnB;AAHW,GAAhB,CAAP;AAKD","file":"getCallReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport callStatus from './callStatus';\n\nexport function getCallStatusReducer(types) {\n  return (state = callStatus.idle, { type }) => {\n    switch (type) {\n      case types.connect:\n        return callStatus.connecting;\n\n      case types.completeConnect:\n        return callStatus.idle;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getToNumberReducer(types) {\n  return (state = '', { type, data }) => {\n    switch (type) {\n      case types.toNumberChanged:\n        return data;\n      case types.completeConnect:\n        return '';\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getLastCallNumberReducer(types) {\n  return (state = null, { type, number }) => {\n    switch (type) {\n      case types.connect:\n        return number;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getCallReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    callStatus: getCallStatusReducer(types),\n    toNumber: getToNumberReducer(types),\n  });\n}\n"]}