{"version":3,"sources":["modules/AddressBook/index.js"],"names":["CONTACTS_PER_PAGE","DEFAULT_TTL","DEFAULT_TIME_TO_RETRY","getSyncParams","syncToken","pageId","query","perPage","syncType","iSync","fSync","AddressBook","client","auth","storage","ttl","timeToRetry","polling","options","actionTypes","_client","_storage","_auth","_ttl","_timeToRetry","_polling","_promise","_syncTokenStorageKey","_syncTimestampStorageKey","_addressBookStorageKey","_reducer","registerReducer","key","reducer","store","subscribe","_onStateChange","_shouldInit","dispatch","type","init","_shouleCleanCache","_cleanUp","_initAddressBook","initSuccess","_shouldReset","_resetModuleStatus","ready","loggedIn","pending","isFreshLogin","timestamp","Date","now","sync","console","error","reset","_clearTimeout","resetSuccess","_sync","response","syncSuccess","records","syncInfo","syncTime","_startPolling","_onSyncError","_retry","syncError","params","_syncAddressBookApi","nextPageId","lastResponse","concat","account","extension","addressBookSync","list","updateRequest","cleanUp","state","status","getItem"],"mappings":"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","file":"index.js","sourcesContent":["import Pollable from '../../lib/Pollable';\nimport sleep from '../../lib/sleep';\nimport syncTypes from '../../enums/syncTypes';\nimport actionTypes from './actionTypes';\nimport proxify from '../../lib/proxy/proxify';\n\nimport getAddressBookReducer, {\n  getSyncTokenReducer,\n  getContactListReducer,\n  getSyncTimestampReducer,\n} from './getAddressBookReducer';\n\nconst CONTACTS_PER_PAGE = 250;\nconst DEFAULT_TTL = 30 * 60 * 1000;\nconst DEFAULT_TIME_TO_RETRY = 62 * 1000;\n\nfunction getSyncParams(syncToken, pageId) {\n  const query = {\n    perPage: CONTACTS_PER_PAGE,\n  };\n  if (syncToken) {\n    query.syncToken = syncToken;\n    query.syncType = syncTypes.iSync;\n  } else {\n    query.syncType = syncTypes.fSync;\n  }\n  if (pageId) {\n    query.pageId = pageId;\n  }\n  return query;\n}\n\nexport default class AddressBook extends Pollable {\n  constructor({\n    client,\n    auth,\n    storage,\n    ttl = DEFAULT_TTL,\n    timeToRetry = DEFAULT_TIME_TO_RETRY,\n    polling = true,\n    ...options,\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._client = client;\n    this._storage = storage;\n    this._auth = auth;\n    this._ttl = ttl;\n    this._timeToRetry = timeToRetry;\n    this._polling = polling;\n    this._promise = null;\n    this._syncTokenStorageKey = 'contactsSyncToken';\n    this._syncTimestampStorageKey = 'contactsSyncTimestamp';\n    this._addressBookStorageKey = 'addressBookContactsList';\n    this._reducer = getAddressBookReducer(this.actionTypes);\n    this._storage.registerReducer({\n      key: this._syncTokenStorageKey,\n      reducer: getSyncTokenReducer(this.actionTypes),\n    });\n    this._storage.registerReducer({\n      key: this._syncTimestampStorageKey,\n      reducer: getSyncTimestampReducer(this.actionTypes),\n    });\n    this._storage.registerReducer({\n      key: this._addressBookStorageKey,\n      reducer: getContactListReducer(this.actionTypes),\n    });\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      if (this._shouleCleanCache()) {\n        this._cleanUp();\n      }\n      await this._initAddressBook();\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this._resetModuleStatus();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._storage.ready &&\n      this._auth.loggedIn &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._storage.ready ||\n        !this._auth.loggedIn\n      ) &&\n      this.ready\n    );\n  }\n\n  _shouleCleanCache() {\n    return (\n      this._auth.isFreshLogin ||\n      !this.timestamp ||\n      (Date.now() - this.timestamp) > this._ttl\n    );\n  }\n\n  async _initAddressBook() {\n    try {\n      await this.sync();\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  _resetModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.reset,\n    });\n    this._clearTimeout();\n    this._promise = null;\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n  @proxify\n  async sync() {\n    if (!this._promise) {\n      this._promise = (async () => {\n        try {\n          this.store.dispatch({\n            type: this.actionTypes.sync,\n          });\n          const response = await this._sync(this.syncToken);\n          this.store.dispatch({\n            type: this.actionTypes.syncSuccess,\n            records: response.records,\n            syncToken: response.syncInfo.syncToken,\n            syncTime: response.syncInfo.syncTime,\n          });\n          if (this._polling) {\n            this._startPolling();\n          }\n        } catch (error) {\n          this._onSyncError();\n          if (this._polling) {\n            this._startPolling(this.timeToRetry);\n          } else {\n            this._retry();\n          }\n          throw error;\n        }\n        this._promise = null;\n      })();\n    }\n  }\n\n  _onSyncError() {\n    this.store.dispatch({\n      type: this.actionTypes.syncError,\n    });\n  }\n\n  @proxify\n  async _sync(syncToken, pageId) {\n    const params = getSyncParams(syncToken, pageId);\n    const response = await this._syncAddressBookApi(params);\n    if (!response.nextPageId) {\n      return response;\n    }\n    await sleep(1000);\n    const lastResponse = await this._sync(syncToken, response.nextPageId);\n    return {\n      ...lastResponse,\n      records: response.records.concat(lastResponse.records),\n    };\n  }\n  @proxify\n  async _syncAddressBookApi(params) {\n    const updateRequest = await this._client\n      .account()\n      .extension()\n      .addressBookSync()\n      .list(params);\n    return updateRequest;\n  }\n\n  _cleanUp() {\n    this.store.dispatch({\n      type: this.actionTypes.cleanUp,\n    });\n  }\n  @proxify\n  async fetchData() {\n    await this.sync();\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get syncToken() {\n    return this._storage.getItem(this._syncTokenStorageKey);\n  }\n\n  get contacts() {\n    return this._storage.getItem(this._addressBookStorageKey);\n  }\n\n  get timestamp() {\n    return this._storage.getItem(this._syncTimestampStorageKey);\n  }\n\n  get ttl() {\n    return this._ttl;\n  }\n\n  get timeToRetry() {\n    return this._timeToRetry;\n  }\n}\n"]}