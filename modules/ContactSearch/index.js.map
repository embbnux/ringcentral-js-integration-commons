{"version":3,"sources":["modules/ContactSearch/index.js"],"names":["ContactSearch","auth","storage","ttl","options","actionTypes","_auth","_storageKey","_storage","_ttl","_searchSources","_searchSourcesFormat","_searchSourcesCheck","_reducer","registerReducer","key","reducer","cache","store","subscribe","_onStateChange","_shouldInit","_initModuleStatus","_shouldReset","_resetModuleStatus","loginStatus","loggedIn","ready","_readyCheck","dispatch","type","initSuccess","resetSuccess","sourceName","searchFn","readyCheckFn","formatFn","Error","has","set","searchString","length","prepareSearch","searching","keys","_searchSource","search","entities","_searchFromCache","_loadSearching","get","_saveSearching","_onSearchError","contactSearch","now","Date","timestamp","searchError","searchSuccess","save","getItem","state","status","searchStatus","result"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport loginStatus from '../../modules/Auth/loginStatus';\nimport moduleStatuses from '../../enums/moduleStatuses';\n\nimport actionTypes from './actionTypes';\nimport getContactSearchReducer from './getContactSearchReducer';\nimport getCacheReducer from './getCacheReducer';\nimport proxify from '../../lib/proxy/proxify';\n\nexport default class ContactSearch extends RcModule {\n  constructor({\n    auth,\n    storage,\n    ttl = 30 * 60 * 1000,\n    ...options,\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._auth = auth;\n    this._storageKey = 'contactSearchCache';\n    this._storage = storage;\n    this._ttl = ttl;\n    this._searchSources = new Map();\n    this._searchSourcesFormat = new Map();\n    this._searchSourcesCheck = new Map();\n    if (this._storage) {\n      this._reducer = getContactSearchReducer(this.actionTypes);\n      storage.registerReducer({\n        key: this._storageKey,\n        reducer: getCacheReducer(this.actionTypes)\n      });\n    } else {\n      this._reducer = getContactSearchReducer(this.actionTypes, {\n        cache: getCacheReducer(this.actionTypes),\n      });\n    }\n  }\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this._initModuleStatus();\n    } else if (this._shouldReset()) {\n      this._resetModuleStatus();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loginStatus === loginStatus.loggedIn &&\n      (!this._storage || this._storage.ready) &&\n      this._readyCheck() &&\n      !this.ready\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        this._auth.loginStatus !== loginStatus.loggedIn ||\n        (this._storage && !this._storage.ready)\n      ) &&\n      this.ready\n    );\n  }\n\n  _initModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n  }\n\n  _resetModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  addSearchSource({ sourceName, searchFn, readyCheckFn, formatFn }) {\n    if (!sourceName) {\n      throw new Error('ContactSearch: \"sourceName\" is required.');\n    }\n    if (this._searchSources.has(sourceName)) {\n      throw new Error(`ContactSearch: A search source named \"${sourceName}\" already exists`);\n    }\n    if (this._searchSourcesCheck.has(sourceName)) {\n      throw new Error(`ContactSearch: A search source check named \"${sourceName}\" already exists`);\n    }\n    if (this._searchSourcesFormat.has(sourceName)) {\n      throw new Error(`ContactSearch: A search source format named \"${sourceName}\" already exists`);\n    }\n    if (typeof searchFn !== 'function') {\n      throw new Error('ContactSearch: searchFn must be a function');\n    }\n    if (typeof readyCheckFn !== 'function') {\n      throw new Error('ContactSearch: readyCheckFn must be a function');\n    }\n    if (typeof formatFn !== 'function') {\n      throw new Error('ContactSearch: formatFn must be a function');\n    }\n    this._searchSources.set(sourceName, searchFn);\n    this._searchSourcesFormat.set(sourceName, formatFn);\n    this._searchSourcesCheck.set(sourceName, readyCheckFn);\n  }\n\n  @proxify\n  async search({ searchString }) {\n    if (!this.ready || (searchString.length < 3)) {\n      this.store.dispatch({\n        type: this.actionTypes.prepareSearch,\n      });\n      return null;\n    }\n\n    if (this.searching.searchString === searchString) {\n      return null;\n    }\n\n    for (const sourceName of this._searchSources.keys()) {\n      await this._searchSource({\n        sourceName,\n        searchString,\n      });\n    }\n    return null;\n  }\n\n  @proxify\n  async _searchSource({ sourceName, searchString }) {\n    this.store.dispatch({\n      type: this.actionTypes.search,\n    });\n    try {\n      let entities = null;\n      entities = this._searchFromCache({ sourceName, searchString });\n      if (entities) {\n        this._loadSearching({ searchString, entities });\n        return null;\n      }\n      entities = await this._searchSources.get(sourceName)({\n        searchString,\n      });\n      entities = this._searchSourcesFormat.get(sourceName)(entities);\n      this._loadSearching({ searchString, entities });\n      this._saveSearching({ sourceName, searchString, entities });\n    } catch (error) {\n      this._onSearchError();\n    }\n    return null;\n  }\n\n  _searchFromCache({ sourceName, searchString }) {\n    const key = `${sourceName}-${searchString}`;\n    const searching = this.cache && this.cache.contactSearch && this.cache.contactSearch[key];\n    const now = Date.now();\n    if (searching && (now - searching.timestamp) < this._ttl) {\n      return searching.entities;\n    }\n    return null;\n  }\n\n  _readyCheck() {\n    for (const sourceName of this._searchSourcesCheck.keys()) {\n      if (!this._searchSourcesCheck.get(sourceName)()) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  _onSearchError() {\n    this.store.dispatch({\n      type: this.actionTypes.searchError,\n    });\n  }\n\n  _loadSearching({ searchString, entities }) {\n    this.store.dispatch({\n      type: this.actionTypes.searchSuccess,\n      entities,\n      searchString,\n    });\n  }\n\n  _saveSearching({ sourceName, searchString, entities }) {\n    this.store.dispatch({\n      type: this.actionTypes.save,\n      sourceName,\n      searchString,\n      entities,\n    });\n  }\n\n  get cache() {\n    return this._storage ?\n      this._storage.getItem(this._storageKey) :\n      this.state.cache;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get searchStatus() {\n    return this.state.searchStatus;\n  }\n\n  get searching() {\n    return this.state.searching;\n  }\n\n  get searchResult() {\n    return this.searching ? this.searching.result : [];\n  }\n\n  get ready() {\n    return this.status === moduleStatuses.ready;\n  }\n}\n"]}